[{"name":"abstract class Transport<Controller>(controller: Controller) : Adapter<Controller> ","description":"dev.shibasis.flatinvoker.ffi.transport.Transport","location":"flatinvoker-ffi/dev.shibasis.flatinvoker.ffi.transport/-transport/index.html","searchKeys":["Transport","abstract class Transport<Controller>(controller: Controller) : Adapter<Controller> ","dev.shibasis.flatinvoker.ffi.transport.Transport"]},{"name":"abstract fun getStruct(): Struct","description":"dev.shibasis.flatinvoker.ffi.target.Target.getStruct","location":"flatinvoker-ffi/dev.shibasis.flatinvoker.ffi.target/-target/get-struct.html","searchKeys":["getStruct","abstract fun getStruct(): Struct","dev.shibasis.flatinvoker.ffi.target.Target.getStruct"]},{"name":"abstract fun invokeAsync(payload: ByteArray): Flow<Long>","description":"dev.shibasis.flatinvoker.ffi.Invokable.invokeAsync","location":"flatinvoker-ffi/dev.shibasis.flatinvoker.ffi/-invokable/invoke-async.html","searchKeys":["invokeAsync","abstract fun invokeAsync(payload: ByteArray): Flow<Long>","dev.shibasis.flatinvoker.ffi.Invokable.invokeAsync"]},{"name":"abstract fun invokeAsync(payload: FlexPayload): Flow<Long>","description":"dev.shibasis.flatinvoker.ffi.AsyncInvokable.invokeAsync","location":"flatinvoker-ffi/dev.shibasis.flatinvoker.ffi/-async-invokable/invoke-async.html","searchKeys":["invokeAsync","abstract fun invokeAsync(payload: FlexPayload): Flow<Long>","dev.shibasis.flatinvoker.ffi.AsyncInvokable.invokeAsync"]},{"name":"abstract fun invokeSync(payload: ByteArray): Long","description":"dev.shibasis.flatinvoker.ffi.Invokable.invokeSync","location":"flatinvoker-ffi/dev.shibasis.flatinvoker.ffi/-invokable/invoke-sync.html","searchKeys":["invokeSync","abstract fun invokeSync(payload: ByteArray): Long","dev.shibasis.flatinvoker.ffi.Invokable.invokeSync"]},{"name":"abstract fun invokeSync(payload: FlexPayload): Long","description":"dev.shibasis.flatinvoker.ffi.SyncInvokable.invokeSync","location":"flatinvoker-ffi/dev.shibasis.flatinvoker.ffi/-sync-invokable/invoke-sync.html","searchKeys":["invokeSync","abstract fun invokeSync(payload: FlexPayload): Long","dev.shibasis.flatinvoker.ffi.SyncInvokable.invokeSync"]},{"name":"abstract fun onReceiveFlow(payload: FlexPayload): Flow<FlexPayload>","description":"dev.shibasis.flatinvoker.ffi.transport.Transport.ReceiveFlow.onReceiveFlow","location":"flatinvoker-ffi/dev.shibasis.flatinvoker.ffi.transport/-transport/-receive-flow/on-receive-flow.html","searchKeys":["onReceiveFlow","abstract fun onReceiveFlow(payload: FlexPayload): Flow<FlexPayload>","dev.shibasis.flatinvoker.ffi.transport.Transport.ReceiveFlow.onReceiveFlow"]},{"name":"abstract fun onReceiveSingle(payload: FlexPayload)","description":"dev.shibasis.flatinvoker.ffi.transport.Transport.ReceiveSingle.onReceiveSingle","location":"flatinvoker-ffi/dev.shibasis.flatinvoker.ffi.transport/-transport/-receive-single/on-receive-single.html","searchKeys":["onReceiveSingle","abstract fun onReceiveSingle(payload: FlexPayload)","dev.shibasis.flatinvoker.ffi.transport.Transport.ReceiveSingle.onReceiveSingle"]},{"name":"abstract fun sendAsync(payload: FlexPayload): Flow<FlexPayload>","description":"dev.shibasis.flatinvoker.ffi.transport.Transport.AsyncResponse.sendAsync","location":"flatinvoker-ffi/dev.shibasis.flatinvoker.ffi.transport/-transport/-async-response/send-async.html","searchKeys":["sendAsync","abstract fun sendAsync(payload: FlexPayload): Flow<FlexPayload>","dev.shibasis.flatinvoker.ffi.transport.Transport.AsyncResponse.sendAsync"]},{"name":"abstract fun sendSync(payload: FlexPayload): FlexPayload","description":"dev.shibasis.flatinvoker.ffi.transport.Transport.SyncResponse.sendSync","location":"flatinvoker-ffi/dev.shibasis.flatinvoker.ffi.transport/-transport/-sync-response/send-sync.html","searchKeys":["sendSync","abstract fun sendSync(payload: FlexPayload): FlexPayload","dev.shibasis.flatinvoker.ffi.transport.Transport.SyncResponse.sendSync"]},{"name":"abstract fun sequence(start: Int, end: Int, step: Int, timeInterval: Int): Flow<Int>","description":"dev.shibasis.flatinvoker.ffi.transport.CalculatorModule.sequence","location":"flatinvoker-ffi/dev.shibasis.flatinvoker.ffi.transport/-calculator-module/sequence.html","searchKeys":["sequence","abstract fun sequence(start: Int, end: Int, step: Int, timeInterval: Int): Flow<Int>","dev.shibasis.flatinvoker.ffi.transport.CalculatorModule.sequence"]},{"name":"abstract fun streamStructs(): Flow<Struct>","description":"dev.shibasis.flatinvoker.ffi.target.Target.streamStructs","location":"flatinvoker-ffi/dev.shibasis.flatinvoker.ffi.target/-target/stream-structs.html","searchKeys":["streamStructs","abstract fun streamStructs(): Flow<Struct>","dev.shibasis.flatinvoker.ffi.target.Target.streamStructs"]},{"name":"abstract fun sum(a: Int, b: Int): Int","description":"dev.shibasis.flatinvoker.ffi.transport.CalculatorModule.sum","location":"flatinvoker-ffi/dev.shibasis.flatinvoker.ffi.transport/-calculator-module/sum.html","searchKeys":["sum","abstract fun sum(a: Int, b: Int): Int","dev.shibasis.flatinvoker.ffi.transport.CalculatorModule.sum"]},{"name":"class ModuleMap : MutableMap<String, Invokable> ","description":"dev.shibasis.flatinvoker.ffi.switch.ModuleMap","location":"flatinvoker-ffi/dev.shibasis.flatinvoker.ffi.switch/-module-map/index.html","searchKeys":["ModuleMap","class ModuleMap : MutableMap<String, Invokable> ","dev.shibasis.flatinvoker.ffi.switch.ModuleMap"]},{"name":"constructor()","description":"dev.shibasis.flatinvoker.ffi.switch.ModuleMap.ModuleMap","location":"flatinvoker-ffi/dev.shibasis.flatinvoker.ffi.switch/-module-map/-module-map.html","searchKeys":["ModuleMap","constructor()","dev.shibasis.flatinvoker.ffi.switch.ModuleMap.ModuleMap"]},{"name":"constructor(controller: Controller)","description":"dev.shibasis.flatinvoker.ffi.transport.Transport.Transport","location":"flatinvoker-ffi/dev.shibasis.flatinvoker.ffi.transport/-transport/-transport.html","searchKeys":["Transport","constructor(controller: Controller)","dev.shibasis.flatinvoker.ffi.transport.Transport.Transport"]},{"name":"constructor(number: Double, text: String)","description":"dev.shibasis.flatinvoker.ffi.target.Struct.Struct","location":"flatinvoker-ffi/dev.shibasis.flatinvoker.ffi.target/-struct/-struct.html","searchKeys":["Struct","constructor(number: Double, text: String)","dev.shibasis.flatinvoker.ffi.target.Struct.Struct"]},{"name":"data class Struct(val number: Double, val text: String)","description":"dev.shibasis.flatinvoker.ffi.target.Struct","location":"flatinvoker-ffi/dev.shibasis.flatinvoker.ffi.target/-struct/index.html","searchKeys":["Struct","data class Struct(val number: Double, val text: String)","dev.shibasis.flatinvoker.ffi.target.Struct"]},{"name":"external fun test(): Int","description":"dev.shibasis.flatinvoker.ffi.Tester.test","location":"flatinvoker-ffi/dev.shibasis.flatinvoker.ffi/-tester/test.html","searchKeys":["test","external fun test(): Int","dev.shibasis.flatinvoker.ffi.Tester.test"]},{"name":"external fun testHermes(): Int","description":"dev.shibasis.flatinvoker.ffi.Tester.testHermes","location":"flatinvoker-ffi/dev.shibasis.flatinvoker.ffi/-tester/test-hermes.html","searchKeys":["testHermes","external fun testHermes(): Int","dev.shibasis.flatinvoker.ffi.Tester.testHermes"]},{"name":"fun ByteArray.toFlexPayload(): FlexPayload","description":"dev.shibasis.flatinvoker.ffi.payload.toFlexPayload","location":"flatinvoker-ffi/dev.shibasis.flatinvoker.ffi.payload/to-flex-payload.html","searchKeys":["toFlexPayload","fun ByteArray.toFlexPayload(): FlexPayload","dev.shibasis.flatinvoker.ffi.payload.toFlexPayload"]},{"name":"fun installModule(moduleName: String, invokable: Invokable)","description":"dev.shibasis.flatinvoker.ffi.switch.Switch.installModule","location":"flatinvoker-ffi/dev.shibasis.flatinvoker.ffi.switch/-switch/install-module.html","searchKeys":["installModule","fun installModule(moduleName: String, invokable: Invokable)","dev.shibasis.flatinvoker.ffi.switch.Switch.installModule"]},{"name":"fun installModules(vararg modules: Pair<String, Invokable>)","description":"dev.shibasis.flatinvoker.ffi.switch.Switch.installModules","location":"flatinvoker-ffi/dev.shibasis.flatinvoker.ffi.switch/-switch/install-modules.html","searchKeys":["installModules","fun installModules(vararg modules: Pair<String, Invokable>)","dev.shibasis.flatinvoker.ffi.switch.Switch.installModules"]},{"name":"fun interface AsyncInvokable","description":"dev.shibasis.flatinvoker.ffi.AsyncInvokable","location":"flatinvoker-ffi/dev.shibasis.flatinvoker.ffi/-async-invokable/index.html","searchKeys":["AsyncInvokable","fun interface AsyncInvokable","dev.shibasis.flatinvoker.ffi.AsyncInvokable"]},{"name":"fun interface AsyncResponse","description":"dev.shibasis.flatinvoker.ffi.transport.Transport.AsyncResponse","location":"flatinvoker-ffi/dev.shibasis.flatinvoker.ffi.transport/-transport/-async-response/index.html","searchKeys":["AsyncResponse","fun interface AsyncResponse","dev.shibasis.flatinvoker.ffi.transport.Transport.AsyncResponse"]},{"name":"fun interface ReceiveFlow","description":"dev.shibasis.flatinvoker.ffi.transport.Transport.ReceiveFlow","location":"flatinvoker-ffi/dev.shibasis.flatinvoker.ffi.transport/-transport/-receive-flow/index.html","searchKeys":["ReceiveFlow","fun interface ReceiveFlow","dev.shibasis.flatinvoker.ffi.transport.Transport.ReceiveFlow"]},{"name":"fun interface ReceiveSingle","description":"dev.shibasis.flatinvoker.ffi.transport.Transport.ReceiveSingle","location":"flatinvoker-ffi/dev.shibasis.flatinvoker.ffi.transport/-transport/-receive-single/index.html","searchKeys":["ReceiveSingle","fun interface ReceiveSingle","dev.shibasis.flatinvoker.ffi.transport.Transport.ReceiveSingle"]},{"name":"fun interface SyncInvokable","description":"dev.shibasis.flatinvoker.ffi.SyncInvokable","location":"flatinvoker-ffi/dev.shibasis.flatinvoker.ffi/-sync-invokable/index.html","searchKeys":["SyncInvokable","fun interface SyncInvokable","dev.shibasis.flatinvoker.ffi.SyncInvokable"]},{"name":"fun interface SyncResponse","description":"dev.shibasis.flatinvoker.ffi.transport.Transport.SyncResponse","location":"flatinvoker-ffi/dev.shibasis.flatinvoker.ffi.transport/-transport/-sync-response/index.html","searchKeys":["SyncResponse","fun interface SyncResponse","dev.shibasis.flatinvoker.ffi.transport.Transport.SyncResponse"]},{"name":"fun invokeAsync(flexBuffer: ByteArray): Flow<Long>","description":"dev.shibasis.flatinvoker.ffi.switch.Switch.invokeAsync","location":"flatinvoker-ffi/dev.shibasis.flatinvoker.ffi.switch/-switch/invoke-async.html","searchKeys":["invokeAsync","fun invokeAsync(flexBuffer: ByteArray): Flow<Long>","dev.shibasis.flatinvoker.ffi.switch.Switch.invokeAsync"]},{"name":"fun invokeSync(flexBuffer: ByteArray): Long","description":"dev.shibasis.flatinvoker.ffi.switch.Switch.invokeSync","location":"flatinvoker-ffi/dev.shibasis.flatinvoker.ffi.switch/-switch/invoke-sync.html","searchKeys":["invokeSync","fun invokeSync(flexBuffer: ByteArray): Long","dev.shibasis.flatinvoker.ffi.switch.Switch.invokeSync"]},{"name":"inline fun <T> FlexPayload.argument(idx: Int): T","description":"dev.shibasis.flatinvoker.ffi.payload.argument","location":"flatinvoker-ffi/dev.shibasis.flatinvoker.ffi.payload/argument.html","searchKeys":["argument","inline fun <T> FlexPayload.argument(idx: Int): T","dev.shibasis.flatinvoker.ffi.payload.argument"]},{"name":"interface CalculatorModule","description":"dev.shibasis.flatinvoker.ffi.transport.CalculatorModule","location":"flatinvoker-ffi/dev.shibasis.flatinvoker.ffi.transport/-calculator-module/index.html","searchKeys":["CalculatorModule","interface CalculatorModule","dev.shibasis.flatinvoker.ffi.transport.CalculatorModule"]},{"name":"interface Invokable","description":"dev.shibasis.flatinvoker.ffi.Invokable","location":"flatinvoker-ffi/dev.shibasis.flatinvoker.ffi/-invokable/index.html","searchKeys":["Invokable","interface Invokable","dev.shibasis.flatinvoker.ffi.Invokable"]},{"name":"interface Target","description":"dev.shibasis.flatinvoker.ffi.target.Target","location":"flatinvoker-ffi/dev.shibasis.flatinvoker.ffi.target/-target/index.html","searchKeys":["Target","interface Target","dev.shibasis.flatinvoker.ffi.target.Target"]},{"name":"object ByteBufferTransport : Transport<Unit> , Transport.SyncResponse, Transport.AsyncResponse, Transport.ReceiveSingle, Transport.ReceiveFlow","description":"dev.shibasis.flatinvoker.ffi.transport.ByteBufferTransport","location":"flatinvoker-ffi/dev.shibasis.flatinvoker.ffi.transport/-byte-buffer-transport/index.html","searchKeys":["ByteBufferTransport","object ByteBufferTransport : Transport<Unit> , Transport.SyncResponse, Transport.AsyncResponse, Transport.ReceiveSingle, Transport.ReceiveFlow","dev.shibasis.flatinvoker.ffi.transport.ByteBufferTransport"]},{"name":"object Switch","description":"dev.shibasis.flatinvoker.ffi.switch.Switch","location":"flatinvoker-ffi/dev.shibasis.flatinvoker.ffi.switch/-switch/index.html","searchKeys":["Switch","object Switch","dev.shibasis.flatinvoker.ffi.switch.Switch"]},{"name":"object Tester : Invokable","description":"dev.shibasis.flatinvoker.ffi.Tester","location":"flatinvoker-ffi/dev.shibasis.flatinvoker.ffi/-tester/index.html","searchKeys":["Tester","object Tester : Invokable","dev.shibasis.flatinvoker.ffi.Tester"]},{"name":"open override fun invokeAsync(payload: ByteArray): Flow<Long>","description":"dev.shibasis.flatinvoker.ffi.Tester.invokeAsync","location":"flatinvoker-ffi/dev.shibasis.flatinvoker.ffi/-tester/invoke-async.html","searchKeys":["invokeAsync","open override fun invokeAsync(payload: ByteArray): Flow<Long>","dev.shibasis.flatinvoker.ffi.Tester.invokeAsync"]},{"name":"open override fun invokeSync(payload: ByteArray): Long","description":"dev.shibasis.flatinvoker.ffi.Tester.invokeSync","location":"flatinvoker-ffi/dev.shibasis.flatinvoker.ffi/-tester/invoke-sync.html","searchKeys":["invokeSync","open override fun invokeSync(payload: ByteArray): Long","dev.shibasis.flatinvoker.ffi.Tester.invokeSync"]},{"name":"open override fun onReceiveFlow(payload: FlexPayload): Flow<FlexPayload>","description":"dev.shibasis.flatinvoker.ffi.transport.ByteBufferTransport.onReceiveFlow","location":"flatinvoker-ffi/dev.shibasis.flatinvoker.ffi.transport/-byte-buffer-transport/on-receive-flow.html","searchKeys":["onReceiveFlow","open override fun onReceiveFlow(payload: FlexPayload): Flow<FlexPayload>","dev.shibasis.flatinvoker.ffi.transport.ByteBufferTransport.onReceiveFlow"]},{"name":"open override fun onReceiveSingle(payload: FlexPayload)","description":"dev.shibasis.flatinvoker.ffi.transport.ByteBufferTransport.onReceiveSingle","location":"flatinvoker-ffi/dev.shibasis.flatinvoker.ffi.transport/-byte-buffer-transport/on-receive-single.html","searchKeys":["onReceiveSingle","open override fun onReceiveSingle(payload: FlexPayload)","dev.shibasis.flatinvoker.ffi.transport.ByteBufferTransport.onReceiveSingle"]},{"name":"open override fun sendAsync(payload: FlexPayload): Flow<FlexPayload>","description":"dev.shibasis.flatinvoker.ffi.transport.ByteBufferTransport.sendAsync","location":"flatinvoker-ffi/dev.shibasis.flatinvoker.ffi.transport/-byte-buffer-transport/send-async.html","searchKeys":["sendAsync","open override fun sendAsync(payload: FlexPayload): Flow<FlexPayload>","dev.shibasis.flatinvoker.ffi.transport.ByteBufferTransport.sendAsync"]},{"name":"open override fun sendSync(payload: FlexPayload): FlexPayload","description":"dev.shibasis.flatinvoker.ffi.transport.ByteBufferTransport.sendSync","location":"flatinvoker-ffi/dev.shibasis.flatinvoker.ffi.transport/-byte-buffer-transport/send-sync.html","searchKeys":["sendSync","open override fun sendSync(payload: FlexPayload): FlexPayload","dev.shibasis.flatinvoker.ffi.transport.ByteBufferTransport.sendSync"]},{"name":"typealias FlexPayload = Vector","description":"dev.shibasis.flatinvoker.ffi.payload.FlexPayload","location":"flatinvoker-ffi/dev.shibasis.flatinvoker.ffi.payload/-flex-payload/index.html","searchKeys":["FlexPayload","typealias FlexPayload = Vector","dev.shibasis.flatinvoker.ffi.payload.FlexPayload"]},{"name":"val FlexPayload.functionName: String","description":"dev.shibasis.flatinvoker.ffi.payload.functionName","location":"flatinvoker-ffi/dev.shibasis.flatinvoker.ffi.payload/function-name.html","searchKeys":["functionName","val FlexPayload.functionName: String","dev.shibasis.flatinvoker.ffi.payload.functionName"]},{"name":"val FlexPayload.isFlow: Boolean","description":"dev.shibasis.flatinvoker.ffi.payload.isFlow","location":"flatinvoker-ffi/dev.shibasis.flatinvoker.ffi.payload/is-flow.html","searchKeys":["isFlow","val FlexPayload.isFlow: Boolean","dev.shibasis.flatinvoker.ffi.payload.isFlow"]},{"name":"val FlexPayload.moduleName: String","description":"dev.shibasis.flatinvoker.ffi.payload.moduleName","location":"flatinvoker-ffi/dev.shibasis.flatinvoker.ffi.payload/module-name.html","searchKeys":["moduleName","val FlexPayload.moduleName: String","dev.shibasis.flatinvoker.ffi.payload.moduleName"]},{"name":"val FlexPayload.sequenceNumber: Long","description":"dev.shibasis.flatinvoker.ffi.payload.sequenceNumber","location":"flatinvoker-ffi/dev.shibasis.flatinvoker.ffi.payload/sequence-number.html","searchKeys":["sequenceNumber","val FlexPayload.sequenceNumber: Long","dev.shibasis.flatinvoker.ffi.payload.sequenceNumber"]},{"name":"val moduleMap: ModuleMap","description":"dev.shibasis.flatinvoker.ffi.switch.Switch.moduleMap","location":"flatinvoker-ffi/dev.shibasis.flatinvoker.ffi.switch/-switch/module-map.html","searchKeys":["moduleMap","val moduleMap: ModuleMap","dev.shibasis.flatinvoker.ffi.switch.Switch.moduleMap"]},{"name":"val number: Double","description":"dev.shibasis.flatinvoker.ffi.target.Struct.number","location":"flatinvoker-ffi/dev.shibasis.flatinvoker.ffi.target/-struct/number.html","searchKeys":["number","val number: Double","dev.shibasis.flatinvoker.ffi.target.Struct.number"]},{"name":"val text: String","description":"dev.shibasis.flatinvoker.ffi.target.Struct.text","location":"flatinvoker-ffi/dev.shibasis.flatinvoker.ffi.target/-struct/text.html","searchKeys":["text","val text: String","dev.shibasis.flatinvoker.ffi.target.Struct.text"]},{"name":"abstract fun clear()","description":"com.google.flatbuffers.kotlin.ReadWriteBuffer.clear","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-read-write-buffer/clear.html","searchKeys":["clear","abstract fun clear()","com.google.flatbuffers.kotlin.ReadWriteBuffer.clear"]},{"name":"abstract fun data(): ByteArray","description":"com.google.flatbuffers.kotlin.ReadBuffer.data","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-read-buffer/data.html","searchKeys":["data","abstract fun data(): ByteArray","com.google.flatbuffers.kotlin.ReadBuffer.data"]},{"name":"abstract fun fill(value: Byte, start: Int, end: Int)","description":"com.google.flatbuffers.kotlin.ReadWriteBuffer.fill","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-read-write-buffer/fill.html","searchKeys":["fill","abstract fun fill(value: Byte, start: Int, end: Int)","com.google.flatbuffers.kotlin.ReadWriteBuffer.fill"]},{"name":"abstract fun findFirst(value: Byte, start: Int, end: Int = limit): Int","description":"com.google.flatbuffers.kotlin.ReadBuffer.findFirst","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-read-buffer/find-first.html","searchKeys":["findFirst","abstract fun findFirst(value: Byte, start: Int, end: Int = limit): Int","com.google.flatbuffers.kotlin.ReadBuffer.findFirst"]},{"name":"abstract fun getBoolean(index: Int): Boolean","description":"com.google.flatbuffers.kotlin.ReadBuffer.getBoolean","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-read-buffer/get-boolean.html","searchKeys":["getBoolean","abstract fun getBoolean(index: Int): Boolean","com.google.flatbuffers.kotlin.ReadBuffer.getBoolean"]},{"name":"abstract fun getBytes(array: ByteArray, start: Int, length: Int = array.size)","description":"com.google.flatbuffers.kotlin.ReadBuffer.getBytes","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-read-buffer/get-bytes.html","searchKeys":["getBytes","abstract fun getBytes(array: ByteArray, start: Int, length: Int = array.size)","com.google.flatbuffers.kotlin.ReadBuffer.getBytes"]},{"name":"abstract fun getDouble(index: Int): Double","description":"com.google.flatbuffers.kotlin.ReadBuffer.getDouble","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-read-buffer/get-double.html","searchKeys":["getDouble","abstract fun getDouble(index: Int): Double","com.google.flatbuffers.kotlin.ReadBuffer.getDouble"]},{"name":"abstract fun getFloat(index: Int): Float","description":"com.google.flatbuffers.kotlin.ReadBuffer.getFloat","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-read-buffer/get-float.html","searchKeys":["getFloat","abstract fun getFloat(index: Int): Float","com.google.flatbuffers.kotlin.ReadBuffer.getFloat"]},{"name":"abstract fun getInt(index: Int): Int","description":"com.google.flatbuffers.kotlin.ReadBuffer.getInt","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-read-buffer/get-int.html","searchKeys":["getInt","abstract fun getInt(index: Int): Int","com.google.flatbuffers.kotlin.ReadBuffer.getInt"]},{"name":"abstract fun getLong(index: Int): Long","description":"com.google.flatbuffers.kotlin.ReadBuffer.getLong","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-read-buffer/get-long.html","searchKeys":["getLong","abstract fun getLong(index: Int): Long","com.google.flatbuffers.kotlin.ReadBuffer.getLong"]},{"name":"abstract fun getShort(index: Int): Short","description":"com.google.flatbuffers.kotlin.ReadBuffer.getShort","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-read-buffer/get-short.html","searchKeys":["getShort","abstract fun getShort(index: Int): Short","com.google.flatbuffers.kotlin.ReadBuffer.getShort"]},{"name":"abstract fun getString(start: Int = 0, size: Int = limit): String","description":"com.google.flatbuffers.kotlin.ReadBuffer.getString","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-read-buffer/get-string.html","searchKeys":["getString","abstract fun getString(start: Int = 0, size: Int = limit): String","com.google.flatbuffers.kotlin.ReadBuffer.getString"]},{"name":"abstract fun getUByte(index: Int): UByte","description":"com.google.flatbuffers.kotlin.ReadBuffer.getUByte","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-read-buffer/get-u-byte.html","searchKeys":["getUByte","abstract fun getUByte(index: Int): UByte","com.google.flatbuffers.kotlin.ReadBuffer.getUByte"]},{"name":"abstract fun getUInt(index: Int): UInt","description":"com.google.flatbuffers.kotlin.ReadBuffer.getUInt","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-read-buffer/get-u-int.html","searchKeys":["getUInt","abstract fun getUInt(index: Int): UInt","com.google.flatbuffers.kotlin.ReadBuffer.getUInt"]},{"name":"abstract fun getULong(index: Int): ULong","description":"com.google.flatbuffers.kotlin.ReadBuffer.getULong","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-read-buffer/get-u-long.html","searchKeys":["getULong","abstract fun getULong(index: Int): ULong","com.google.flatbuffers.kotlin.ReadBuffer.getULong"]},{"name":"abstract fun getUShort(index: Int): UShort","description":"com.google.flatbuffers.kotlin.ReadBuffer.getUShort","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-read-buffer/get-u-short.html","searchKeys":["getUShort","abstract fun getUShort(index: Int): UShort","com.google.flatbuffers.kotlin.ReadBuffer.getUShort"]},{"name":"abstract fun moveWrittenDataToEnd(capacity: Int): Int","description":"com.google.flatbuffers.kotlin.ReadWriteBuffer.moveWrittenDataToEnd","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-read-write-buffer/move-written-data-to-end.html","searchKeys":["moveWrittenDataToEnd","abstract fun moveWrittenDataToEnd(capacity: Int): Int","com.google.flatbuffers.kotlin.ReadWriteBuffer.moveWrittenDataToEnd"]},{"name":"abstract fun put(value: Boolean)","description":"com.google.flatbuffers.kotlin.ReadWriteBuffer.put","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-read-write-buffer/put.html","searchKeys":["put","abstract fun put(value: Boolean)","com.google.flatbuffers.kotlin.ReadWriteBuffer.put"]},{"name":"abstract fun put(value: Byte)","description":"com.google.flatbuffers.kotlin.ReadWriteBuffer.put","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-read-write-buffer/put.html","searchKeys":["put","abstract fun put(value: Byte)","com.google.flatbuffers.kotlin.ReadWriteBuffer.put"]},{"name":"abstract fun put(value: ByteArray, start: Int = 0, length: Int = value.size)","description":"com.google.flatbuffers.kotlin.ReadWriteBuffer.put","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-read-write-buffer/put.html","searchKeys":["put","abstract fun put(value: ByteArray, start: Int = 0, length: Int = value.size)","com.google.flatbuffers.kotlin.ReadWriteBuffer.put"]},{"name":"abstract fun put(value: CharSequence, encodedLength: Int = -1): Int","description":"com.google.flatbuffers.kotlin.ReadWriteBuffer.put","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-read-write-buffer/put.html","searchKeys":["put","abstract fun put(value: CharSequence, encodedLength: Int = -1): Int","com.google.flatbuffers.kotlin.ReadWriteBuffer.put"]},{"name":"abstract fun put(value: Double)","description":"com.google.flatbuffers.kotlin.ReadWriteBuffer.put","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-read-write-buffer/put.html","searchKeys":["put","abstract fun put(value: Double)","com.google.flatbuffers.kotlin.ReadWriteBuffer.put"]},{"name":"abstract fun put(value: Float)","description":"com.google.flatbuffers.kotlin.ReadWriteBuffer.put","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-read-write-buffer/put.html","searchKeys":["put","abstract fun put(value: Float)","com.google.flatbuffers.kotlin.ReadWriteBuffer.put"]},{"name":"abstract fun put(value: Int)","description":"com.google.flatbuffers.kotlin.ReadWriteBuffer.put","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-read-write-buffer/put.html","searchKeys":["put","abstract fun put(value: Int)","com.google.flatbuffers.kotlin.ReadWriteBuffer.put"]},{"name":"abstract fun put(value: Long)","description":"com.google.flatbuffers.kotlin.ReadWriteBuffer.put","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-read-write-buffer/put.html","searchKeys":["put","abstract fun put(value: Long)","com.google.flatbuffers.kotlin.ReadWriteBuffer.put"]},{"name":"abstract fun put(value: ReadBuffer, start: Int = 0, length: Int = value.limit - start)","description":"com.google.flatbuffers.kotlin.ReadWriteBuffer.put","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-read-write-buffer/put.html","searchKeys":["put","abstract fun put(value: ReadBuffer, start: Int = 0, length: Int = value.limit - start)","com.google.flatbuffers.kotlin.ReadWriteBuffer.put"]},{"name":"abstract fun put(value: Short)","description":"com.google.flatbuffers.kotlin.ReadWriteBuffer.put","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-read-write-buffer/put.html","searchKeys":["put","abstract fun put(value: Short)","com.google.flatbuffers.kotlin.ReadWriteBuffer.put"]},{"name":"abstract fun put(value: UByte)","description":"com.google.flatbuffers.kotlin.ReadWriteBuffer.put","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-read-write-buffer/put.html","searchKeys":["put","abstract fun put(value: UByte)","com.google.flatbuffers.kotlin.ReadWriteBuffer.put"]},{"name":"abstract fun put(value: UInt)","description":"com.google.flatbuffers.kotlin.ReadWriteBuffer.put","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-read-write-buffer/put.html","searchKeys":["put","abstract fun put(value: UInt)","com.google.flatbuffers.kotlin.ReadWriteBuffer.put"]},{"name":"abstract fun put(value: ULong)","description":"com.google.flatbuffers.kotlin.ReadWriteBuffer.put","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-read-write-buffer/put.html","searchKeys":["put","abstract fun put(value: ULong)","com.google.flatbuffers.kotlin.ReadWriteBuffer.put"]},{"name":"abstract fun put(value: UShort)","description":"com.google.flatbuffers.kotlin.ReadWriteBuffer.put","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-read-write-buffer/put.html","searchKeys":["put","abstract fun put(value: UShort)","com.google.flatbuffers.kotlin.ReadWriteBuffer.put"]},{"name":"abstract fun requestCapacity(capacity: Int, copyAtEnd: Boolean = false): Int","description":"com.google.flatbuffers.kotlin.ReadWriteBuffer.requestCapacity","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-read-write-buffer/request-capacity.html","searchKeys":["requestCapacity","abstract fun requestCapacity(capacity: Int, copyAtEnd: Boolean = false): Int","com.google.flatbuffers.kotlin.ReadWriteBuffer.requestCapacity"]},{"name":"abstract fun set(dstIndex: Int, src: ByteArray, srcStart: Int = 0, srcLength: Int = src.size)","description":"com.google.flatbuffers.kotlin.ReadWriteBuffer.set","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-read-write-buffer/set.html","searchKeys":["set","abstract fun set(dstIndex: Int, src: ByteArray, srcStart: Int = 0, srcLength: Int = src.size)","com.google.flatbuffers.kotlin.ReadWriteBuffer.set"]},{"name":"abstract fun set(index: Int, value: Double)","description":"com.google.flatbuffers.kotlin.ReadWriteBuffer.set","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-read-write-buffer/set.html","searchKeys":["set","abstract fun set(index: Int, value: Double)","com.google.flatbuffers.kotlin.ReadWriteBuffer.set"]},{"name":"abstract fun set(index: Int, value: Float)","description":"com.google.flatbuffers.kotlin.ReadWriteBuffer.set","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-read-write-buffer/set.html","searchKeys":["set","abstract fun set(index: Int, value: Float)","com.google.flatbuffers.kotlin.ReadWriteBuffer.set"]},{"name":"abstract fun set(index: Int, value: Int)","description":"com.google.flatbuffers.kotlin.ReadWriteBuffer.set","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-read-write-buffer/set.html","searchKeys":["set","abstract fun set(index: Int, value: Int)","com.google.flatbuffers.kotlin.ReadWriteBuffer.set"]},{"name":"abstract fun set(index: Int, value: Long)","description":"com.google.flatbuffers.kotlin.ReadWriteBuffer.set","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-read-write-buffer/set.html","searchKeys":["set","abstract fun set(index: Int, value: Long)","com.google.flatbuffers.kotlin.ReadWriteBuffer.set"]},{"name":"abstract fun set(index: Int, value: Short)","description":"com.google.flatbuffers.kotlin.ReadWriteBuffer.set","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-read-write-buffer/set.html","searchKeys":["set","abstract fun set(index: Int, value: Short)","com.google.flatbuffers.kotlin.ReadWriteBuffer.set"]},{"name":"abstract fun set(index: Int, value: UInt)","description":"com.google.flatbuffers.kotlin.ReadWriteBuffer.set","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-read-write-buffer/set.html","searchKeys":["set","abstract fun set(index: Int, value: UInt)","com.google.flatbuffers.kotlin.ReadWriteBuffer.set"]},{"name":"abstract fun set(index: Int, value: ULong)","description":"com.google.flatbuffers.kotlin.ReadWriteBuffer.set","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-read-write-buffer/set.html","searchKeys":["set","abstract fun set(index: Int, value: ULong)","com.google.flatbuffers.kotlin.ReadWriteBuffer.set"]},{"name":"abstract fun set(index: Int, value: UShort)","description":"com.google.flatbuffers.kotlin.ReadWriteBuffer.set","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-read-write-buffer/set.html","searchKeys":["set","abstract fun set(index: Int, value: UShort)","com.google.flatbuffers.kotlin.ReadWriteBuffer.set"]},{"name":"abstract fun slice(start: Int, size: Int): ReadBuffer","description":"com.google.flatbuffers.kotlin.ReadBuffer.slice","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-read-buffer/slice.html","searchKeys":["slice","abstract fun slice(start: Int, size: Int): ReadBuffer","com.google.flatbuffers.kotlin.ReadBuffer.slice"]},{"name":"abstract fun writeSlice(offset: Int, size: Int): ReadWriteBuffer","description":"com.google.flatbuffers.kotlin.ReadWriteBuffer.writeSlice","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-read-write-buffer/write-slice.html","searchKeys":["writeSlice","abstract fun writeSlice(offset: Int, size: Int): ReadWriteBuffer","com.google.flatbuffers.kotlin.ReadWriteBuffer.writeSlice"]},{"name":"abstract operator fun get(index: Int): Byte","description":"com.google.flatbuffers.kotlin.ReadBuffer.get","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-read-buffer/get.html","searchKeys":["get","abstract operator fun get(index: Int): Byte","com.google.flatbuffers.kotlin.ReadBuffer.get"]},{"name":"abstract operator fun set(dstIndex: Int, src: ReadBuffer, srcStart: Int = 0, srcLength: Int)","description":"com.google.flatbuffers.kotlin.ReadWriteBuffer.set","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-read-write-buffer/set.html","searchKeys":["set","abstract operator fun set(dstIndex: Int, src: ReadBuffer, srcStart: Int = 0, srcLength: Int)","com.google.flatbuffers.kotlin.ReadWriteBuffer.set"]},{"name":"abstract operator fun set(index: Int, value: Boolean)","description":"com.google.flatbuffers.kotlin.ReadWriteBuffer.set","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-read-write-buffer/set.html","searchKeys":["set","abstract operator fun set(index: Int, value: Boolean)","com.google.flatbuffers.kotlin.ReadWriteBuffer.set"]},{"name":"abstract operator fun set(index: Int, value: Byte)","description":"com.google.flatbuffers.kotlin.ReadWriteBuffer.set","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-read-write-buffer/set.html","searchKeys":["set","abstract operator fun set(index: Int, value: Byte)","com.google.flatbuffers.kotlin.ReadWriteBuffer.set"]},{"name":"abstract operator fun set(index: Int, value: UByte)","description":"com.google.flatbuffers.kotlin.ReadWriteBuffer.set","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-read-write-buffer/set.html","searchKeys":["set","abstract operator fun set(index: Int, value: UByte)","com.google.flatbuffers.kotlin.ReadWriteBuffer.set"]},{"name":"abstract val capacity: Int","description":"com.google.flatbuffers.kotlin.ReadWriteBuffer.capacity","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-read-write-buffer/capacity.html","searchKeys":["capacity","abstract val capacity: Int","com.google.flatbuffers.kotlin.ReadWriteBuffer.capacity"]},{"name":"abstract val limit: Int","description":"com.google.flatbuffers.kotlin.ReadBuffer.limit","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-read-buffer/limit.html","searchKeys":["limit","abstract val limit: Int","com.google.flatbuffers.kotlin.ReadBuffer.limit"]},{"name":"abstract val writeLimit: Int","description":"com.google.flatbuffers.kotlin.ReadWriteBuffer.writeLimit","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-read-write-buffer/write-limit.html","searchKeys":["writeLimit","abstract val writeLimit: Int","com.google.flatbuffers.kotlin.ReadWriteBuffer.writeLimit"]},{"name":"abstract var writePosition: Int","description":"com.google.flatbuffers.kotlin.ReadWriteBuffer.writePosition","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-read-write-buffer/write-position.html","searchKeys":["writePosition","abstract var writePosition: Int","com.google.flatbuffers.kotlin.ReadWriteBuffer.writePosition"]},{"name":"class ArrayReadWriteBuffer(buffer: ByteArray, offset: Int = 0, val writeLimit: Int = -1, var writePosition: Int = offset) : ArrayReadBuffer, ReadWriteBuffer","description":"com.google.flatbuffers.kotlin.ArrayReadWriteBuffer","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-array-read-write-buffer/index.html","searchKeys":["ArrayReadWriteBuffer","class ArrayReadWriteBuffer(buffer: ByteArray, offset: Int = 0, val writeLimit: Int = -1, var writePosition: Int = offset) : ArrayReadBuffer, ReadWriteBuffer","com.google.flatbuffers.kotlin.ArrayReadWriteBuffer"]},{"name":"class FlatBufferBuilder constructor(initialSize: Int = 1024, buffer: ReadWriteBuffer = ArrayReadWriteBuffer(initialSize))","description":"com.google.flatbuffers.kotlin.FlatBufferBuilder","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flat-buffer-builder/index.html","searchKeys":["FlatBufferBuilder","class FlatBufferBuilder constructor(initialSize: Int = 1024, buffer: ReadWriteBuffer = ArrayReadWriteBuffer(initialSize))","com.google.flatbuffers.kotlin.FlatBufferBuilder"]},{"name":"class FlexBuffersBuilder(val buffer: ReadWriteBuffer, shareFlag: Int = SHARE_KEYS)","description":"com.google.flatbuffers.kotlin.FlexBuffersBuilder","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flex-buffers-builder/index.html","searchKeys":["FlexBuffersBuilder","class FlexBuffersBuilder(val buffer: ReadWriteBuffer, shareFlag: Int = SHARE_KEYS)","com.google.flatbuffers.kotlin.FlexBuffersBuilder"]},{"name":"class JSONParser(var output: FlexBuffersBuilder = FlexBuffersBuilder(1024, SHARE_KEYS_AND_STRINGS))","description":"com.google.flatbuffers.kotlin.JSONParser","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-j-s-o-n-parser/index.html","searchKeys":["JSONParser","class JSONParser(var output: FlexBuffersBuilder = FlexBuffersBuilder(1024, SHARE_KEYS_AND_STRINGS))","com.google.flatbuffers.kotlin.JSONParser"]},{"name":"class Map : Sized, Map<Key, Reference> ","description":"com.google.flatbuffers.kotlin.Map","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-map/index.html","searchKeys":["Map","class Map : Sized, Map<Key, Reference> ","com.google.flatbuffers.kotlin.Map"]},{"name":"class Reference","description":"com.google.flatbuffers.kotlin.Reference","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-reference/index.html","searchKeys":["Reference","class Reference","com.google.flatbuffers.kotlin.Reference"]},{"name":"const val SHARE_KEYS: Int = 1","description":"com.google.flatbuffers.kotlin.FlexBuffersBuilder.Companion.SHARE_KEYS","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flex-buffers-builder/-companion/-s-h-a-r-e_-k-e-y-s.html","searchKeys":["SHARE_KEYS","const val SHARE_KEYS: Int = 1","com.google.flatbuffers.kotlin.FlexBuffersBuilder.Companion.SHARE_KEYS"]},{"name":"const val SHARE_KEYS_AND_STRINGS: Int = 3","description":"com.google.flatbuffers.kotlin.FlexBuffersBuilder.Companion.SHARE_KEYS_AND_STRINGS","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flex-buffers-builder/-companion/-s-h-a-r-e_-k-e-y-s_-a-n-d_-s-t-r-i-n-g-s.html","searchKeys":["SHARE_KEYS_AND_STRINGS","const val SHARE_KEYS_AND_STRINGS: Int = 3","com.google.flatbuffers.kotlin.FlexBuffersBuilder.Companion.SHARE_KEYS_AND_STRINGS"]},{"name":"const val SHARE_NONE: Int = 0","description":"com.google.flatbuffers.kotlin.FlexBuffersBuilder.Companion.SHARE_NONE","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flex-buffers-builder/-companion/-s-h-a-r-e_-n-o-n-e.html","searchKeys":["SHARE_NONE","const val SHARE_NONE: Int = 0","com.google.flatbuffers.kotlin.FlexBuffersBuilder.Companion.SHARE_NONE"]},{"name":"const val SHARE_STRINGS: Int = 2","description":"com.google.flatbuffers.kotlin.FlexBuffersBuilder.Companion.SHARE_STRINGS","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flex-buffers-builder/-companion/-s-h-a-r-e_-s-t-r-i-n-g-s.html","searchKeys":["SHARE_STRINGS","const val SHARE_STRINGS: Int = 2","com.google.flatbuffers.kotlin.FlexBuffersBuilder.Companion.SHARE_STRINGS"]},{"name":"const val VERSION_2_0_8: Int = 1","description":"com.google.flatbuffers.kotlin.VERSION_2_0_8","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-v-e-r-s-i-o-n_2_0_8.html","searchKeys":["VERSION_2_0_8","const val VERSION_2_0_8: Int = 1","com.google.flatbuffers.kotlin.VERSION_2_0_8"]},{"name":"constructor()","description":"com.google.flatbuffers.kotlin.Struct.Struct","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-struct/-struct.html","searchKeys":["Struct","constructor()","com.google.flatbuffers.kotlin.Struct.Struct"]},{"name":"constructor()","description":"com.google.flatbuffers.kotlin.Table.Table","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-table/-table.html","searchKeys":["Table","constructor()","com.google.flatbuffers.kotlin.Table.Table"]},{"name":"constructor(buffer: ByteArray, offset: Int = 0, limit: Int = buffer.size - offset)","description":"com.google.flatbuffers.kotlin.ArrayReadBuffer.ArrayReadBuffer","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-array-read-buffer/-array-read-buffer.html","searchKeys":["ArrayReadBuffer","constructor(buffer: ByteArray, offset: Int = 0, limit: Int = buffer.size - offset)","com.google.flatbuffers.kotlin.ArrayReadBuffer.ArrayReadBuffer"]},{"name":"constructor(buffer: ByteArray, offset: Int = 0, writeLimit: Int = -1, writePosition: Int = offset)","description":"com.google.flatbuffers.kotlin.ArrayReadWriteBuffer.ArrayReadWriteBuffer","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-array-read-write-buffer/-array-read-write-buffer.html","searchKeys":["ArrayReadWriteBuffer","constructor(buffer: ByteArray, offset: Int = 0, writeLimit: Int = -1, writePosition: Int = offset)","com.google.flatbuffers.kotlin.ArrayReadWriteBuffer.ArrayReadWriteBuffer"]},{"name":"constructor(buffer: ReadBuffer, start: Int, end: Int = buffer.findFirst(ZeroByte, start))","description":"com.google.flatbuffers.kotlin.Key.Key","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-key/-key.html","searchKeys":["Key","constructor(buffer: ReadBuffer, start: Int, end: Int = buffer.findFirst(ZeroByte, start))","com.google.flatbuffers.kotlin.Key.Key"]},{"name":"constructor(buffer: ReadWriteBuffer, shareFlag: Int = SHARE_KEYS)","description":"com.google.flatbuffers.kotlin.FlexBuffersBuilder.FlexBuffersBuilder","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flex-buffers-builder/-flex-buffers-builder.html","searchKeys":["FlexBuffersBuilder","constructor(buffer: ReadWriteBuffer, shareFlag: Int = SHARE_KEYS)","com.google.flatbuffers.kotlin.FlexBuffersBuilder.FlexBuffersBuilder"]},{"name":"constructor(elementType: FlexBufferType, buffer: ReadBuffer, end: Int, byteWidth: ByteWidth)","description":"com.google.flatbuffers.kotlin.TypedVector.TypedVector","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-typed-vector/-typed-vector.html","searchKeys":["TypedVector","constructor(elementType: FlexBufferType, buffer: ReadBuffer, end: Int, byteWidth: ByteWidth)","com.google.flatbuffers.kotlin.TypedVector.TypedVector"]},{"name":"constructor(initialCapacity: Int = 10)","description":"com.google.flatbuffers.kotlin.ArrayReadWriteBuffer.ArrayReadWriteBuffer","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-array-read-write-buffer/-array-read-write-buffer.html","searchKeys":["ArrayReadWriteBuffer","constructor(initialCapacity: Int = 10)","com.google.flatbuffers.kotlin.ArrayReadWriteBuffer.ArrayReadWriteBuffer"]},{"name":"constructor(initialCapacity: Int = 1024, shareFlag: Int = SHARE_KEYS)","description":"com.google.flatbuffers.kotlin.FlexBuffersBuilder.FlexBuffersBuilder","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flex-buffers-builder/-flex-buffers-builder.html","searchKeys":["FlexBuffersBuilder","constructor(initialCapacity: Int = 1024, shareFlag: Int = SHARE_KEYS)","com.google.flatbuffers.kotlin.FlexBuffersBuilder.FlexBuffersBuilder"]},{"name":"constructor(initialSize: Int = 1024, buffer: ReadWriteBuffer = ArrayReadWriteBuffer(initialSize))","description":"com.google.flatbuffers.kotlin.FlatBufferBuilder.FlatBufferBuilder","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flat-buffer-builder/-flat-buffer-builder.html","searchKeys":["FlatBufferBuilder","constructor(initialSize: Int = 1024, buffer: ReadWriteBuffer = ArrayReadWriteBuffer(initialSize))","com.google.flatbuffers.kotlin.FlatBufferBuilder.FlatBufferBuilder"]},{"name":"constructor(key: Key, value: Reference)","description":"com.google.flatbuffers.kotlin.Map.Entry.Entry","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-map/-entry/-entry.html","searchKeys":["Entry","constructor(key: Key, value: Reference)","com.google.flatbuffers.kotlin.Map.Entry.Entry"]},{"name":"constructor(output: FlexBuffersBuilder = FlexBuffersBuilder(1024, SHARE_KEYS_AND_STRINGS))","description":"com.google.flatbuffers.kotlin.JSONParser.JSONParser","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-j-s-o-n-parser/-j-s-o-n-parser.html","searchKeys":["JSONParser","constructor(output: FlexBuffersBuilder = FlexBuffersBuilder(1024, SHARE_KEYS_AND_STRINGS))","com.google.flatbuffers.kotlin.JSONParser.JSONParser"]},{"name":"constructor(value: Int)","description":"com.google.flatbuffers.kotlin.BitWidth.BitWidth","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-bit-width/-bit-width.html","searchKeys":["BitWidth","constructor(value: Int)","com.google.flatbuffers.kotlin.BitWidth.BitWidth"]},{"name":"constructor(value: Int)","description":"com.google.flatbuffers.kotlin.ByteWidth.ByteWidth","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-byte-width/-byte-width.html","searchKeys":["ByteWidth","constructor(value: Int)","com.google.flatbuffers.kotlin.ByteWidth.ByteWidth"]},{"name":"constructor(value: Int)","description":"com.google.flatbuffers.kotlin.FlexBufferType.FlexBufferType","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flex-buffer-type/-flex-buffer-type.html","searchKeys":["FlexBufferType","constructor(value: Int)","com.google.flatbuffers.kotlin.FlexBufferType.FlexBufferType"]},{"name":"constructor(value: Int)","description":"com.google.flatbuffers.kotlin.Offset.Offset","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-offset/-offset.html","searchKeys":["Offset","constructor(value: Int)","com.google.flatbuffers.kotlin.Offset.Offset"]},{"name":"constructor(value: Int)","description":"com.google.flatbuffers.kotlin.VectorOffset.VectorOffset","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-vector-offset/-vector-offset.html","searchKeys":["VectorOffset","constructor(value: Int)","com.google.flatbuffers.kotlin.VectorOffset.VectorOffset"]},{"name":"constructor(value: IntArray)","description":"com.google.flatbuffers.kotlin.OffsetArray.OffsetArray","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-offset-array/-offset-array.html","searchKeys":["OffsetArray","constructor(value: IntArray)","com.google.flatbuffers.kotlin.OffsetArray.OffsetArray"]},{"name":"data class Entry(val key: Key, val value: Reference) : Map.Entry<Key, Reference> ","description":"com.google.flatbuffers.kotlin.Map.Entry","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-map/-entry/index.html","searchKeys":["Entry","data class Entry(val key: Key, val value: Reference) : Map.Entry<Key, Reference> ","com.google.flatbuffers.kotlin.Map.Entry"]},{"name":"data class Key(val buffer: ReadBuffer, val start: Int, val end: Int = buffer.findFirst(ZeroByte, start))","description":"com.google.flatbuffers.kotlin.Key","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-key/index.html","searchKeys":["Key","data class Key(val buffer: ReadBuffer, val start: Int, val end: Int = buffer.findFirst(ZeroByte, start))","com.google.flatbuffers.kotlin.Key"]},{"name":"expect inline fun ByteArray.setShort(index: Int, value: Short)","description":"com.google.flatbuffers.kotlin.setShort","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/set-short.html","searchKeys":["setShort","expect inline fun ByteArray.setShort(index: Int, value: Short)","com.google.flatbuffers.kotlin.setShort"]},{"name":"fun <T : Table> createSortedVectorOfTables(obj: T, offsets: Array<Offset<T>>): VectorOffset<T>","description":"com.google.flatbuffers.kotlin.FlatBufferBuilder.createSortedVectorOfTables","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flat-buffer-builder/create-sorted-vector-of-tables.html","searchKeys":["createSortedVectorOfTables","fun <T : Table> createSortedVectorOfTables(obj: T, offsets: Array<Offset<T>>): VectorOffset<T>","com.google.flatbuffers.kotlin.FlatBufferBuilder.createSortedVectorOfTables"]},{"name":"fun <T> Int.toOffset(): Offset<T>","description":"com.google.flatbuffers.kotlin.toOffset","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/to-offset.html","searchKeys":["toOffset","fun <T> Int.toOffset(): Offset<T>","com.google.flatbuffers.kotlin.toOffset"]},{"name":"fun <T> createVectorOfTables(offsets: Array<Offset<T>>): VectorOffset<T>","description":"com.google.flatbuffers.kotlin.FlatBufferBuilder.createVectorOfTables","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flat-buffer-builder/create-vector-of-tables.html","searchKeys":["createVectorOfTables","fun <T> createVectorOfTables(offsets: Array<Offset<T>>): VectorOffset<T>","com.google.flatbuffers.kotlin.FlatBufferBuilder.createVectorOfTables"]},{"name":"fun <T> endTable(): Offset<T>","description":"com.google.flatbuffers.kotlin.FlatBufferBuilder.endTable","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flat-buffer-builder/end-table.html","searchKeys":["endTable","fun <T> endTable(): Offset<T>","com.google.flatbuffers.kotlin.FlatBufferBuilder.endTable"]},{"name":"fun <T> endVector(): VectorOffset<T>","description":"com.google.flatbuffers.kotlin.FlatBufferBuilder.endVector","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flat-buffer-builder/end-vector.html","searchKeys":["endVector","fun <T> endVector(): VectorOffset<T>","com.google.flatbuffers.kotlin.FlatBufferBuilder.endVector"]},{"name":"fun <T> sortTables(offsets: Array<Offset<T>>, bb: ReadWriteBuffer)","description":"com.google.flatbuffers.kotlin.Table.sortTables","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-table/sort-tables.html","searchKeys":["sortTables","fun <T> sortTables(offsets: Array<Offset<T>>, bb: ReadWriteBuffer)","com.google.flatbuffers.kotlin.Table.sortTables"]},{"name":"fun Double.sign(): Double","description":"com.google.flatbuffers.kotlin.sign","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/sign.html","searchKeys":["sign","fun Double.sign(): Double","com.google.flatbuffers.kotlin.sign"]},{"name":"fun Float.sign(): Float","description":"com.google.flatbuffers.kotlin.sign","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/sign.html","searchKeys":["sign","fun Float.sign(): Float","com.google.flatbuffers.kotlin.sign"]},{"name":"fun Int.sign(): Int","description":"com.google.flatbuffers.kotlin.sign","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/sign.html","searchKeys":["sign","fun Int.sign(): Int","com.google.flatbuffers.kotlin.sign"]},{"name":"fun Map.toJson(): String","description":"com.google.flatbuffers.kotlin.toJson","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/to-json.html","searchKeys":["toJson","fun Map.toJson(): String","com.google.flatbuffers.kotlin.toJson"]},{"name":"fun Map.toJson(out: ReadWriteBuffer)","description":"com.google.flatbuffers.kotlin.toJson","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/to-json.html","searchKeys":["toJson","fun Map.toJson(out: ReadWriteBuffer)","com.google.flatbuffers.kotlin.toJson"]},{"name":"fun Reference.toJson(): String","description":"com.google.flatbuffers.kotlin.toJson","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/to-json.html","searchKeys":["toJson","fun Reference.toJson(): String","com.google.flatbuffers.kotlin.toJson"]},{"name":"fun Reference.toJson(out: ReadWriteBuffer)","description":"com.google.flatbuffers.kotlin.toJson","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/to-json.html","searchKeys":["toJson","fun Reference.toJson(out: ReadWriteBuffer)","com.google.flatbuffers.kotlin.toJson"]},{"name":"fun Table.isFieldPresent(offset: Int): Boolean","description":"com.google.flatbuffers.kotlin.FlatBufferBuilder.isFieldPresent","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flat-buffer-builder/is-field-present.html","searchKeys":["isFieldPresent","fun Table.isFieldPresent(offset: Int): Boolean","com.google.flatbuffers.kotlin.FlatBufferBuilder.isFieldPresent"]},{"name":"fun Vector.toJson(): String","description":"com.google.flatbuffers.kotlin.toJson","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/to-json.html","searchKeys":["toJson","fun Vector.toJson(): String","com.google.flatbuffers.kotlin.toJson"]},{"name":"fun Vector.toJson(out: ReadWriteBuffer)","description":"com.google.flatbuffers.kotlin.toJson","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/to-json.html","searchKeys":["toJson","fun Vector.toJson(out: ReadWriteBuffer)","com.google.flatbuffers.kotlin.toJson"]},{"name":"fun add(o: Int, x: Boolean, d: Boolean)","description":"com.google.flatbuffers.kotlin.FlatBufferBuilder.add","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flat-buffer-builder/add.html","searchKeys":["add","fun add(o: Int, x: Boolean, d: Boolean)","com.google.flatbuffers.kotlin.FlatBufferBuilder.add"]},{"name":"fun add(o: Int, x: Boolean, d: Boolean?)","description":"com.google.flatbuffers.kotlin.FlatBufferBuilder.add","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flat-buffer-builder/add.html","searchKeys":["add","fun add(o: Int, x: Boolean, d: Boolean?)","com.google.flatbuffers.kotlin.FlatBufferBuilder.add"]},{"name":"fun add(o: Int, x: Byte, d: Byte)","description":"com.google.flatbuffers.kotlin.FlatBufferBuilder.add","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flat-buffer-builder/add.html","searchKeys":["add","fun add(o: Int, x: Byte, d: Byte)","com.google.flatbuffers.kotlin.FlatBufferBuilder.add"]},{"name":"fun add(o: Int, x: Byte, d: Byte?)","description":"com.google.flatbuffers.kotlin.FlatBufferBuilder.add","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flat-buffer-builder/add.html","searchKeys":["add","fun add(o: Int, x: Byte, d: Byte?)","com.google.flatbuffers.kotlin.FlatBufferBuilder.add"]},{"name":"fun add(o: Int, x: Double, d: Double)","description":"com.google.flatbuffers.kotlin.FlatBufferBuilder.add","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flat-buffer-builder/add.html","searchKeys":["add","fun add(o: Int, x: Double, d: Double)","com.google.flatbuffers.kotlin.FlatBufferBuilder.add"]},{"name":"fun add(o: Int, x: Double, d: Double?)","description":"com.google.flatbuffers.kotlin.FlatBufferBuilder.add","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flat-buffer-builder/add.html","searchKeys":["add","fun add(o: Int, x: Double, d: Double?)","com.google.flatbuffers.kotlin.FlatBufferBuilder.add"]},{"name":"fun add(o: Int, x: Float, d: Float)","description":"com.google.flatbuffers.kotlin.FlatBufferBuilder.add","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flat-buffer-builder/add.html","searchKeys":["add","fun add(o: Int, x: Float, d: Float)","com.google.flatbuffers.kotlin.FlatBufferBuilder.add"]},{"name":"fun add(o: Int, x: Float, d: Float?)","description":"com.google.flatbuffers.kotlin.FlatBufferBuilder.add","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flat-buffer-builder/add.html","searchKeys":["add","fun add(o: Int, x: Float, d: Float?)","com.google.flatbuffers.kotlin.FlatBufferBuilder.add"]},{"name":"fun add(o: Int, x: Int, d: Int)","description":"com.google.flatbuffers.kotlin.FlatBufferBuilder.add","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flat-buffer-builder/add.html","searchKeys":["add","fun add(o: Int, x: Int, d: Int)","com.google.flatbuffers.kotlin.FlatBufferBuilder.add"]},{"name":"fun add(o: Int, x: Int, d: Int?)","description":"com.google.flatbuffers.kotlin.FlatBufferBuilder.add","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flat-buffer-builder/add.html","searchKeys":["add","fun add(o: Int, x: Int, d: Int?)","com.google.flatbuffers.kotlin.FlatBufferBuilder.add"]},{"name":"fun add(o: Int, x: Long, d: Long)","description":"com.google.flatbuffers.kotlin.FlatBufferBuilder.add","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flat-buffer-builder/add.html","searchKeys":["add","fun add(o: Int, x: Long, d: Long)","com.google.flatbuffers.kotlin.FlatBufferBuilder.add"]},{"name":"fun add(o: Int, x: Long, d: Long?)","description":"com.google.flatbuffers.kotlin.FlatBufferBuilder.add","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flat-buffer-builder/add.html","searchKeys":["add","fun add(o: Int, x: Long, d: Long?)","com.google.flatbuffers.kotlin.FlatBufferBuilder.add"]},{"name":"fun add(o: Int, x: Offset<*>, d: Int)","description":"com.google.flatbuffers.kotlin.FlatBufferBuilder.add","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flat-buffer-builder/add.html","searchKeys":["add","fun add(o: Int, x: Offset<*>, d: Int)","com.google.flatbuffers.kotlin.FlatBufferBuilder.add"]},{"name":"fun add(o: Int, x: Short, d: Short)","description":"com.google.flatbuffers.kotlin.FlatBufferBuilder.add","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flat-buffer-builder/add.html","searchKeys":["add","fun add(o: Int, x: Short, d: Short)","com.google.flatbuffers.kotlin.FlatBufferBuilder.add"]},{"name":"fun add(o: Int, x: Short, d: Short?)","description":"com.google.flatbuffers.kotlin.FlatBufferBuilder.add","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flat-buffer-builder/add.html","searchKeys":["add","fun add(o: Int, x: Short, d: Short?)","com.google.flatbuffers.kotlin.FlatBufferBuilder.add"]},{"name":"fun add(o: Int, x: UByte, d: UByte)","description":"com.google.flatbuffers.kotlin.FlatBufferBuilder.add","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flat-buffer-builder/add.html","searchKeys":["add","fun add(o: Int, x: UByte, d: UByte)","com.google.flatbuffers.kotlin.FlatBufferBuilder.add"]},{"name":"fun add(o: Int, x: UByte, d: UByte?)","description":"com.google.flatbuffers.kotlin.FlatBufferBuilder.add","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flat-buffer-builder/add.html","searchKeys":["add","fun add(o: Int, x: UByte, d: UByte?)","com.google.flatbuffers.kotlin.FlatBufferBuilder.add"]},{"name":"fun add(o: Int, x: UInt, d: UInt)","description":"com.google.flatbuffers.kotlin.FlatBufferBuilder.add","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flat-buffer-builder/add.html","searchKeys":["add","fun add(o: Int, x: UInt, d: UInt)","com.google.flatbuffers.kotlin.FlatBufferBuilder.add"]},{"name":"fun add(o: Int, x: UInt, d: UInt?)","description":"com.google.flatbuffers.kotlin.FlatBufferBuilder.add","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flat-buffer-builder/add.html","searchKeys":["add","fun add(o: Int, x: UInt, d: UInt?)","com.google.flatbuffers.kotlin.FlatBufferBuilder.add"]},{"name":"fun add(o: Int, x: ULong, d: ULong)","description":"com.google.flatbuffers.kotlin.FlatBufferBuilder.add","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flat-buffer-builder/add.html","searchKeys":["add","fun add(o: Int, x: ULong, d: ULong)","com.google.flatbuffers.kotlin.FlatBufferBuilder.add"]},{"name":"fun add(o: Int, x: ULong, d: ULong?)","description":"com.google.flatbuffers.kotlin.FlatBufferBuilder.add","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flat-buffer-builder/add.html","searchKeys":["add","fun add(o: Int, x: ULong, d: ULong?)","com.google.flatbuffers.kotlin.FlatBufferBuilder.add"]},{"name":"fun add(o: Int, x: UShort, d: UShort)","description":"com.google.flatbuffers.kotlin.FlatBufferBuilder.add","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flat-buffer-builder/add.html","searchKeys":["add","fun add(o: Int, x: UShort, d: UShort)","com.google.flatbuffers.kotlin.FlatBufferBuilder.add"]},{"name":"fun add(o: Int, x: UShort, d: UShort?)","description":"com.google.flatbuffers.kotlin.FlatBufferBuilder.add","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flat-buffer-builder/add.html","searchKeys":["add","fun add(o: Int, x: UShort, d: UShort?)","com.google.flatbuffers.kotlin.FlatBufferBuilder.add"]},{"name":"fun add(o: Int, x: VectorOffset<*>, d: Int)","description":"com.google.flatbuffers.kotlin.FlatBufferBuilder.add","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flat-buffer-builder/add.html","searchKeys":["add","fun add(o: Int, x: VectorOffset<*>, d: Int)","com.google.flatbuffers.kotlin.FlatBufferBuilder.add"]},{"name":"fun add(off: Offset<*>)","description":"com.google.flatbuffers.kotlin.FlatBufferBuilder.add","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flat-buffer-builder/add.html","searchKeys":["add","fun add(off: Offset<*>)","com.google.flatbuffers.kotlin.FlatBufferBuilder.add"]},{"name":"fun add(off: VectorOffset<*>)","description":"com.google.flatbuffers.kotlin.FlatBufferBuilder.add","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flat-buffer-builder/add.html","searchKeys":["add","fun add(off: VectorOffset<*>)","com.google.flatbuffers.kotlin.FlatBufferBuilder.add"]},{"name":"fun add(x: Boolean)","description":"com.google.flatbuffers.kotlin.FlatBufferBuilder.add","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flat-buffer-builder/add.html","searchKeys":["add","fun add(x: Boolean)","com.google.flatbuffers.kotlin.FlatBufferBuilder.add"]},{"name":"fun add(x: Byte)","description":"com.google.flatbuffers.kotlin.FlatBufferBuilder.add","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flat-buffer-builder/add.html","searchKeys":["add","fun add(x: Byte)","com.google.flatbuffers.kotlin.FlatBufferBuilder.add"]},{"name":"fun add(x: Double)","description":"com.google.flatbuffers.kotlin.FlatBufferBuilder.add","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flat-buffer-builder/add.html","searchKeys":["add","fun add(x: Double)","com.google.flatbuffers.kotlin.FlatBufferBuilder.add"]},{"name":"fun add(x: Float)","description":"com.google.flatbuffers.kotlin.FlatBufferBuilder.add","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flat-buffer-builder/add.html","searchKeys":["add","fun add(x: Float)","com.google.flatbuffers.kotlin.FlatBufferBuilder.add"]},{"name":"fun add(x: Int)","description":"com.google.flatbuffers.kotlin.FlatBufferBuilder.add","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flat-buffer-builder/add.html","searchKeys":["add","fun add(x: Int)","com.google.flatbuffers.kotlin.FlatBufferBuilder.add"]},{"name":"fun add(x: Long)","description":"com.google.flatbuffers.kotlin.FlatBufferBuilder.add","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flat-buffer-builder/add.html","searchKeys":["add","fun add(x: Long)","com.google.flatbuffers.kotlin.FlatBufferBuilder.add"]},{"name":"fun add(x: Short)","description":"com.google.flatbuffers.kotlin.FlatBufferBuilder.add","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flat-buffer-builder/add.html","searchKeys":["add","fun add(x: Short)","com.google.flatbuffers.kotlin.FlatBufferBuilder.add"]},{"name":"fun add(x: UByte)","description":"com.google.flatbuffers.kotlin.FlatBufferBuilder.add","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flat-buffer-builder/add.html","searchKeys":["add","fun add(x: UByte)","com.google.flatbuffers.kotlin.FlatBufferBuilder.add"]},{"name":"fun add(x: UInt)","description":"com.google.flatbuffers.kotlin.FlatBufferBuilder.add","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flat-buffer-builder/add.html","searchKeys":["add","fun add(x: UInt)","com.google.flatbuffers.kotlin.FlatBufferBuilder.add"]},{"name":"fun add(x: ULong)","description":"com.google.flatbuffers.kotlin.FlatBufferBuilder.add","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flat-buffer-builder/add.html","searchKeys":["add","fun add(x: ULong)","com.google.flatbuffers.kotlin.FlatBufferBuilder.add"]},{"name":"fun add(x: UShort)","description":"com.google.flatbuffers.kotlin.FlatBufferBuilder.add","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flat-buffer-builder/add.html","searchKeys":["add","fun add(x: UShort)","com.google.flatbuffers.kotlin.FlatBufferBuilder.add"]},{"name":"fun addStruct(vOffset: Int, x: Int, d: Int)","description":"com.google.flatbuffers.kotlin.FlatBufferBuilder.addStruct","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flat-buffer-builder/add-struct.html","searchKeys":["addStruct","fun addStruct(vOffset: Int, x: Int, d: Int)","com.google.flatbuffers.kotlin.FlatBufferBuilder.addStruct"]},{"name":"fun addStruct(vOffset: Int, x: Int, d: Int?)","description":"com.google.flatbuffers.kotlin.FlatBufferBuilder.addStruct","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flat-buffer-builder/add-struct.html","searchKeys":["addStruct","fun addStruct(vOffset: Int, x: Int, d: Int?)","com.google.flatbuffers.kotlin.FlatBufferBuilder.addStruct"]},{"name":"fun addStruct(vOffset: Int, x: Offset<*>, d: Offset<*>)","description":"com.google.flatbuffers.kotlin.FlatBufferBuilder.addStruct","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flat-buffer-builder/add-struct.html","searchKeys":["addStruct","fun addStruct(vOffset: Int, x: Offset<*>, d: Offset<*>)","com.google.flatbuffers.kotlin.FlatBufferBuilder.addStruct"]},{"name":"fun addStruct(vOffset: Int, x: Offset<*>, d: Offset<*>?)","description":"com.google.flatbuffers.kotlin.FlatBufferBuilder.addStruct","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flat-buffer-builder/add-struct.html","searchKeys":["addStruct","fun addStruct(vOffset: Int, x: Offset<*>, d: Offset<*>?)","com.google.flatbuffers.kotlin.FlatBufferBuilder.addStruct"]},{"name":"fun clear()","description":"com.google.flatbuffers.kotlin.FlatBufferBuilder.clear","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flat-buffer-builder/clear.html","searchKeys":["clear","fun clear()","com.google.flatbuffers.kotlin.FlatBufferBuilder.clear"]},{"name":"fun clear()","description":"com.google.flatbuffers.kotlin.FlexBuffersBuilder.clear","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flex-buffers-builder/clear.html","searchKeys":["clear","fun clear()","com.google.flatbuffers.kotlin.FlexBuffersBuilder.clear"]},{"name":"fun codePointAt(seq: CharSequence, position: Int): Int","description":"com.google.flatbuffers.kotlin.Utf8.codePointAt","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-utf8/code-point-at.html","searchKeys":["codePointAt","fun codePointAt(seq: CharSequence, position: Int): Int","com.google.flatbuffers.kotlin.Utf8.codePointAt"]},{"name":"fun compareStrings(offset: Int, key: ByteArray, bb: ReadWriteBuffer): Int","description":"com.google.flatbuffers.kotlin.Table.Companion.compareStrings","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-table/-companion/compare-strings.html","searchKeys":["compareStrings","fun compareStrings(offset: Int, key: ByteArray, bb: ReadWriteBuffer): Int","com.google.flatbuffers.kotlin.Table.Companion.compareStrings"]},{"name":"fun compareStrings(offsetA: Int, offsetB: Int, bb: ReadWriteBuffer): Int","description":"com.google.flatbuffers.kotlin.Table.Companion.compareStrings","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-table/-companion/compare-strings.html","searchKeys":["compareStrings","fun compareStrings(offsetA: Int, offsetB: Int, bb: ReadWriteBuffer): Int","com.google.flatbuffers.kotlin.Table.Companion.compareStrings"]},{"name":"fun createByteVector(arr: ByteArray): VectorOffset<Byte>","description":"com.google.flatbuffers.kotlin.FlatBufferBuilder.createByteVector","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flat-buffer-builder/create-byte-vector.html","searchKeys":["createByteVector","fun createByteVector(arr: ByteArray): VectorOffset<Byte>","com.google.flatbuffers.kotlin.FlatBufferBuilder.createByteVector"]},{"name":"fun createByteVector(arr: ByteArray, offset: Int, length: Int): VectorOffset<Byte>","description":"com.google.flatbuffers.kotlin.FlatBufferBuilder.createByteVector","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flat-buffer-builder/create-byte-vector.html","searchKeys":["createByteVector","fun createByteVector(arr: ByteArray, offset: Int, length: Int): VectorOffset<Byte>","com.google.flatbuffers.kotlin.FlatBufferBuilder.createByteVector"]},{"name":"fun createByteVector(data: ReadBuffer, from: Int = 0, until: Int = data.limit): VectorOffset<Byte>","description":"com.google.flatbuffers.kotlin.FlatBufferBuilder.createByteVector","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flat-buffer-builder/create-byte-vector.html","searchKeys":["createByteVector","fun createByteVector(data: ReadBuffer, from: Int = 0, until: Int = data.limit): VectorOffset<Byte>","com.google.flatbuffers.kotlin.FlatBufferBuilder.createByteVector"]},{"name":"fun createSharedString(s: CharSequence): Offset<String>","description":"com.google.flatbuffers.kotlin.FlatBufferBuilder.createSharedString","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flat-buffer-builder/create-shared-string.html","searchKeys":["createSharedString","fun createSharedString(s: CharSequence): Offset<String>","com.google.flatbuffers.kotlin.FlatBufferBuilder.createSharedString"]},{"name":"fun createString(s: CharSequence): Offset<String>","description":"com.google.flatbuffers.kotlin.FlatBufferBuilder.createString","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flat-buffer-builder/create-string.html","searchKeys":["createString","fun createString(s: CharSequence): Offset<String>","com.google.flatbuffers.kotlin.FlatBufferBuilder.createString"]},{"name":"fun createString(s: ReadBuffer): Offset<String>","description":"com.google.flatbuffers.kotlin.FlatBufferBuilder.createString","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flat-buffer-builder/create-string.html","searchKeys":["createString","fun createString(s: ReadBuffer): Offset<String>","com.google.flatbuffers.kotlin.FlatBufferBuilder.createString"]},{"name":"fun createUnintializedVector(elemSize: Int, numElems: Int, alignment: Int): ReadWriteBuffer","description":"com.google.flatbuffers.kotlin.FlatBufferBuilder.createUnintializedVector","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flat-buffer-builder/create-unintialized-vector.html","searchKeys":["createUnintializedVector","fun createUnintializedVector(elemSize: Int, numElems: Int, alignment: Int): ReadWriteBuffer","com.google.flatbuffers.kotlin.FlatBufferBuilder.createUnintializedVector"]},{"name":"fun data(): ReadBuffer","description":"com.google.flatbuffers.kotlin.Blob.data","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-blob/data.html","searchKeys":["data","fun data(): ReadBuffer","com.google.flatbuffers.kotlin.Blob.data"]},{"name":"fun dataBuffer(): ReadWriteBuffer","description":"com.google.flatbuffers.kotlin.FlatBufferBuilder.dataBuffer","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flat-buffer-builder/data-buffer.html","searchKeys":["dataBuffer","fun dataBuffer(): ReadWriteBuffer","com.google.flatbuffers.kotlin.FlatBufferBuilder.dataBuffer"]},{"name":"fun decodeUtf8Array(bytes: ByteArray, index: Int = 0, size: Int = bytes.size): String","description":"com.google.flatbuffers.kotlin.Utf8.decodeUtf8Array","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-utf8/decode-utf8-array.html","searchKeys":["decodeUtf8Array","fun decodeUtf8Array(bytes: ByteArray, index: Int = 0, size: Int = bytes.size): String","com.google.flatbuffers.kotlin.Utf8.decodeUtf8Array"]},{"name":"fun decodeUtf8CodePoint(bytes: ReadBuffer, index: Int, out: CharArray)","description":"com.google.flatbuffers.kotlin.Utf8.decodeUtf8CodePoint","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-utf8/decode-utf8-code-point.html","searchKeys":["decodeUtf8CodePoint","fun decodeUtf8CodePoint(bytes: ReadBuffer, index: Int, out: CharArray)","com.google.flatbuffers.kotlin.Utf8.decodeUtf8CodePoint"]},{"name":"fun encodeUtf8Array(input: CharSequence, out: ByteArray, offset: Int = 0, length: Int = out.size - offset): Int","description":"com.google.flatbuffers.kotlin.Utf8.encodeUtf8Array","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-utf8/encode-utf8-array.html","searchKeys":["encodeUtf8Array","fun encodeUtf8Array(input: CharSequence, out: ByteArray, offset: Int = 0, length: Int = out.size - offset): Int","com.google.flatbuffers.kotlin.Utf8.encodeUtf8Array"]},{"name":"fun encodeUtf8CodePoint(input: CharSequence, start: Int, out: ByteArray): Int","description":"com.google.flatbuffers.kotlin.Utf8.encodeUtf8CodePoint","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-utf8/encode-utf8-code-point.html","searchKeys":["encodeUtf8CodePoint","fun encodeUtf8CodePoint(input: CharSequence, start: Int, out: ByteArray): Int","com.google.flatbuffers.kotlin.Utf8.encodeUtf8CodePoint"]},{"name":"fun encodedLength(sequence: CharSequence): Int","description":"com.google.flatbuffers.kotlin.Utf8.encodedLength","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-utf8/encoded-length.html","searchKeys":["encodedLength","fun encodedLength(sequence: CharSequence): Int","com.google.flatbuffers.kotlin.Utf8.encodedLength"]},{"name":"fun endMap(start: Int, key: String? = null): Int","description":"com.google.flatbuffers.kotlin.FlexBuffersBuilder.endMap","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flex-buffers-builder/end-map.html","searchKeys":["endMap","fun endMap(start: Int, key: String? = null): Int","com.google.flatbuffers.kotlin.FlexBuffersBuilder.endMap"]},{"name":"fun endString(): Offset<String>","description":"com.google.flatbuffers.kotlin.FlatBufferBuilder.endString","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flat-buffer-builder/end-string.html","searchKeys":["endString","fun endString(): Offset<String>","com.google.flatbuffers.kotlin.FlatBufferBuilder.endString"]},{"name":"fun endTypedVector(position: Int): Int","description":"com.google.flatbuffers.kotlin.FlexBuffersBuilder.endTypedVector","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flex-buffers-builder/end-typed-vector.html","searchKeys":["endTypedVector","fun endTypedVector(position: Int): Int","com.google.flatbuffers.kotlin.FlexBuffersBuilder.endTypedVector"]},{"name":"fun endTypedVector(position: Int, key: String? = null): Int","description":"com.google.flatbuffers.kotlin.FlexBuffersBuilder.endTypedVector","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flex-buffers-builder/end-typed-vector.html","searchKeys":["endTypedVector","fun endTypedVector(position: Int, key: String? = null): Int","com.google.flatbuffers.kotlin.FlexBuffersBuilder.endTypedVector"]},{"name":"fun endVector(key: String? = null, position: Int): Int","description":"com.google.flatbuffers.kotlin.FlexBuffersBuilder.endVector","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flex-buffers-builder/end-vector.html","searchKeys":["endVector","fun endVector(key: String? = null, position: Int): Int","com.google.flatbuffers.kotlin.FlexBuffersBuilder.endVector"]},{"name":"fun endVector(position: Int): Int","description":"com.google.flatbuffers.kotlin.FlexBuffersBuilder.endVector","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flex-buffers-builder/end-vector.html","searchKeys":["endVector","fun endVector(position: Int): Int","com.google.flatbuffers.kotlin.FlexBuffersBuilder.endVector"]},{"name":"fun finish(): ReadBuffer","description":"com.google.flatbuffers.kotlin.FlexBuffersBuilder.finish","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flex-buffers-builder/finish.html","searchKeys":["finish","fun finish(): ReadBuffer","com.google.flatbuffers.kotlin.FlexBuffersBuilder.finish"]},{"name":"fun finish(rootTable: Offset<*>)","description":"com.google.flatbuffers.kotlin.FlatBufferBuilder.finish","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flat-buffer-builder/finish.html","searchKeys":["finish","fun finish(rootTable: Offset<*>)","com.google.flatbuffers.kotlin.FlatBufferBuilder.finish"]},{"name":"fun finish(rootTable: Offset<*>, fileIdentifier: String)","description":"com.google.flatbuffers.kotlin.FlatBufferBuilder.finish","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flat-buffer-builder/finish.html","searchKeys":["finish","fun finish(rootTable: Offset<*>, fileIdentifier: String)","com.google.flatbuffers.kotlin.FlatBufferBuilder.finish"]},{"name":"fun finishSizePrefixed(rootTable: Offset<*>)","description":"com.google.flatbuffers.kotlin.FlatBufferBuilder.finishSizePrefixed","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flat-buffer-builder/finish-size-prefixed.html","searchKeys":["finishSizePrefixed","fun finishSizePrefixed(rootTable: Offset<*>)","com.google.flatbuffers.kotlin.FlatBufferBuilder.finishSizePrefixed"]},{"name":"fun finishSizePrefixed(rootTable: Offset<*>, fileIdentifier: String)","description":"com.google.flatbuffers.kotlin.FlatBufferBuilder.finishSizePrefixed","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flat-buffer-builder/finish-size-prefixed.html","searchKeys":["finishSizePrefixed","fun finishSizePrefixed(rootTable: Offset<*>, fileIdentifier: String)","com.google.flatbuffers.kotlin.FlatBufferBuilder.finishSizePrefixed"]},{"name":"fun finished()","description":"com.google.flatbuffers.kotlin.FlatBufferBuilder.finished","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flat-buffer-builder/finished.html","searchKeys":["finished","fun finished()","com.google.flatbuffers.kotlin.FlatBufferBuilder.finished"]},{"name":"fun forceDefaults(forceDefaults: Boolean): FlatBufferBuilder","description":"com.google.flatbuffers.kotlin.FlatBufferBuilder.forceDefaults","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flat-buffer-builder/force-defaults.html","searchKeys":["forceDefaults","fun forceDefaults(forceDefaults: Boolean): FlatBufferBuilder","com.google.flatbuffers.kotlin.FlatBufferBuilder.forceDefaults"]},{"name":"fun getRoot(buffer: ReadBuffer): Reference","description":"com.google.flatbuffers.kotlin.getRoot","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/get-root.html","searchKeys":["getRoot","fun getRoot(buffer: ReadBuffer): Reference","com.google.flatbuffers.kotlin.getRoot"]},{"name":"fun handleFourBytes(byte1: Byte, byte2: Byte, byte3: Byte, byte4: Byte, resultArr: CharArray, resultPos: Int)","description":"com.google.flatbuffers.kotlin.Utf8.handleFourBytes","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-utf8/handle-four-bytes.html","searchKeys":["handleFourBytes","fun handleFourBytes(byte1: Byte, byte2: Byte, byte3: Byte, byte4: Byte, resultArr: CharArray, resultPos: Int)","com.google.flatbuffers.kotlin.Utf8.handleFourBytes"]},{"name":"fun handleOneByte(byte1: Byte, resultArr: CharArray, resultPos: Int)","description":"com.google.flatbuffers.kotlin.Utf8.handleOneByte","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-utf8/handle-one-byte.html","searchKeys":["handleOneByte","fun handleOneByte(byte1: Byte, resultArr: CharArray, resultPos: Int)","com.google.flatbuffers.kotlin.Utf8.handleOneByte"]},{"name":"fun handleThreeBytes(byte1: Byte, byte2: Byte, byte3: Byte, resultArr: CharArray, resultPos: Int)","description":"com.google.flatbuffers.kotlin.Utf8.handleThreeBytes","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-utf8/handle-three-bytes.html","searchKeys":["handleThreeBytes","fun handleThreeBytes(byte1: Byte, byte2: Byte, byte3: Byte, resultArr: CharArray, resultPos: Int)","com.google.flatbuffers.kotlin.Utf8.handleThreeBytes"]},{"name":"fun handleTwoBytes(byte1: Byte, byte2: Byte, resultArr: CharArray, resultPos: Int)","description":"com.google.flatbuffers.kotlin.Utf8.handleTwoBytes","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-utf8/handle-two-bytes.html","searchKeys":["handleTwoBytes","fun handleTwoBytes(byte1: Byte, byte2: Byte, resultArr: CharArray, resultPos: Int)","com.google.flatbuffers.kotlin.Utf8.handleTwoBytes"]},{"name":"fun hasIdentifier(bb: ReadWriteBuffer?, ident: String): Boolean","description":"com.google.flatbuffers.kotlin.Table.Companion.hasIdentifier","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-table/-companion/has-identifier.html","searchKeys":["hasIdentifier","fun hasIdentifier(bb: ReadWriteBuffer?, ident: String): Boolean","com.google.flatbuffers.kotlin.Table.Companion.hasIdentifier"]},{"name":"fun indirect(offset: Int): Int","description":"com.google.flatbuffers.kotlin.Table.indirect","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-table/indirect.html","searchKeys":["indirect","fun indirect(offset: Int): Int","com.google.flatbuffers.kotlin.Table.indirect"]},{"name":"fun indirect(offset: Int, bb: ReadWriteBuffer): Int","description":"com.google.flatbuffers.kotlin.Table.Companion.indirect","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-table/-companion/indirect.html","searchKeys":["indirect","fun indirect(offset: Int, bb: ReadWriteBuffer): Int","com.google.flatbuffers.kotlin.Table.Companion.indirect"]},{"name":"fun isInvalid(): Boolean","description":"com.google.flatbuffers.kotlin.Key.isInvalid","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-key/is-invalid.html","searchKeys":["isInvalid","fun isInvalid(): Boolean","com.google.flatbuffers.kotlin.Key.isInvalid"]},{"name":"fun keyAsString(index: Int): String","description":"com.google.flatbuffers.kotlin.Map.keyAsString","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-map/key-as-string.html","searchKeys":["keyAsString","fun keyAsString(index: Int): String","com.google.flatbuffers.kotlin.Map.keyAsString"]},{"name":"fun keyAt(index: Int): Key","description":"com.google.flatbuffers.kotlin.Map.keyAt","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-map/key-at.html","searchKeys":["keyAt","fun keyAt(index: Int): Key","com.google.flatbuffers.kotlin.Map.keyAt"]},{"name":"fun nested(obj: Int)","description":"com.google.flatbuffers.kotlin.FlatBufferBuilder.nested","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flat-buffer-builder/nested.html","searchKeys":["nested","fun nested(obj: Int)","com.google.flatbuffers.kotlin.FlatBufferBuilder.nested"]},{"name":"fun notNested()","description":"com.google.flatbuffers.kotlin.FlatBufferBuilder.notNested","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flat-buffer-builder/not-nested.html","searchKeys":["notNested","fun notNested()","com.google.flatbuffers.kotlin.FlatBufferBuilder.notNested"]},{"name":"fun offset(): Int","description":"com.google.flatbuffers.kotlin.FlatBufferBuilder.offset","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flat-buffer-builder/offset.html","searchKeys":["offset","fun offset(): Int","com.google.flatbuffers.kotlin.FlatBufferBuilder.offset"]},{"name":"fun offset(vtableOffset: Int): Int","description":"com.google.flatbuffers.kotlin.Table.offset","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-table/offset.html","searchKeys":["offset","fun offset(vtableOffset: Int): Int","com.google.flatbuffers.kotlin.Table.offset"]},{"name":"fun offset(vtableOffset: Int, offset: Offset<*>, bb: ReadWriteBuffer): Int","description":"com.google.flatbuffers.kotlin.Table.Companion.offset","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-table/-companion/offset.html","searchKeys":["offset","fun offset(vtableOffset: Int, offset: Offset<*>, bb: ReadWriteBuffer): Int","com.google.flatbuffers.kotlin.Table.Companion.offset"]},{"name":"fun pad(byteSize: Int)","description":"com.google.flatbuffers.kotlin.FlatBufferBuilder.pad","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flat-buffer-builder/pad.html","searchKeys":["pad","fun pad(byteSize: Int)","com.google.flatbuffers.kotlin.FlatBufferBuilder.pad"]},{"name":"fun parse(data: ByteArray): Reference","description":"com.google.flatbuffers.kotlin.JSONParser.parse","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-j-s-o-n-parser/parse.html","searchKeys":["parse","fun parse(data: ByteArray): Reference","com.google.flatbuffers.kotlin.JSONParser.parse"]},{"name":"fun parse(data: ReadBuffer): Reference","description":"com.google.flatbuffers.kotlin.JSONParser.parse","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-j-s-o-n-parser/parse.html","searchKeys":["parse","fun parse(data: ReadBuffer): Reference","com.google.flatbuffers.kotlin.JSONParser.parse"]},{"name":"fun parse(data: String): Reference","description":"com.google.flatbuffers.kotlin.JSONParser.parse","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-j-s-o-n-parser/parse.html","searchKeys":["parse","fun parse(data: String): Reference","com.google.flatbuffers.kotlin.JSONParser.parse"]},{"name":"fun prep(size: Int, additionalBytes: Int)","description":"com.google.flatbuffers.kotlin.FlatBufferBuilder.prep","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flat-buffer-builder/prep.html","searchKeys":["prep","fun prep(size: Int, additionalBytes: Int)","com.google.flatbuffers.kotlin.FlatBufferBuilder.prep"]},{"name":"fun put(value: Boolean)","description":"com.google.flatbuffers.kotlin.FlexBuffersBuilder.put","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flex-buffers-builder/put.html","searchKeys":["put","fun put(value: Boolean)","com.google.flatbuffers.kotlin.FlexBuffersBuilder.put"]},{"name":"fun put(value: Byte)","description":"com.google.flatbuffers.kotlin.FlexBuffersBuilder.put","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flex-buffers-builder/put.html","searchKeys":["put","fun put(value: Byte)","com.google.flatbuffers.kotlin.FlexBuffersBuilder.put"]},{"name":"fun put(value: ByteArray): Int","description":"com.google.flatbuffers.kotlin.FlexBuffersBuilder.put","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flex-buffers-builder/put.html","searchKeys":["put","fun put(value: ByteArray): Int","com.google.flatbuffers.kotlin.FlexBuffersBuilder.put"]},{"name":"fun put(value: Double)","description":"com.google.flatbuffers.kotlin.FlexBuffersBuilder.put","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flex-buffers-builder/put.html","searchKeys":["put","fun put(value: Double)","com.google.flatbuffers.kotlin.FlexBuffersBuilder.put"]},{"name":"fun put(value: DoubleArray): Int","description":"com.google.flatbuffers.kotlin.FlexBuffersBuilder.put","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flex-buffers-builder/put.html","searchKeys":["put","fun put(value: DoubleArray): Int","com.google.flatbuffers.kotlin.FlexBuffersBuilder.put"]},{"name":"fun put(value: Float)","description":"com.google.flatbuffers.kotlin.FlexBuffersBuilder.put","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flex-buffers-builder/put.html","searchKeys":["put","fun put(value: Float)","com.google.flatbuffers.kotlin.FlexBuffersBuilder.put"]},{"name":"fun put(value: FloatArray): Int","description":"com.google.flatbuffers.kotlin.FlexBuffersBuilder.put","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flex-buffers-builder/put.html","searchKeys":["put","fun put(value: FloatArray): Int","com.google.flatbuffers.kotlin.FlexBuffersBuilder.put"]},{"name":"fun put(value: Int)","description":"com.google.flatbuffers.kotlin.FlexBuffersBuilder.put","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flex-buffers-builder/put.html","searchKeys":["put","fun put(value: Int)","com.google.flatbuffers.kotlin.FlexBuffersBuilder.put"]},{"name":"fun put(value: IntArray): Int","description":"com.google.flatbuffers.kotlin.FlexBuffersBuilder.put","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flex-buffers-builder/put.html","searchKeys":["put","fun put(value: IntArray): Int","com.google.flatbuffers.kotlin.FlexBuffersBuilder.put"]},{"name":"fun put(value: Long)","description":"com.google.flatbuffers.kotlin.FlexBuffersBuilder.put","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flex-buffers-builder/put.html","searchKeys":["put","fun put(value: Long)","com.google.flatbuffers.kotlin.FlexBuffersBuilder.put"]},{"name":"fun put(value: LongArray): Int","description":"com.google.flatbuffers.kotlin.FlexBuffersBuilder.put","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flex-buffers-builder/put.html","searchKeys":["put","fun put(value: LongArray): Int","com.google.flatbuffers.kotlin.FlexBuffersBuilder.put"]},{"name":"fun put(value: Short)","description":"com.google.flatbuffers.kotlin.FlexBuffersBuilder.put","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flex-buffers-builder/put.html","searchKeys":["put","fun put(value: Short)","com.google.flatbuffers.kotlin.FlexBuffersBuilder.put"]},{"name":"fun put(value: ShortArray): Int","description":"com.google.flatbuffers.kotlin.FlexBuffersBuilder.put","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flex-buffers-builder/put.html","searchKeys":["put","fun put(value: ShortArray): Int","com.google.flatbuffers.kotlin.FlexBuffersBuilder.put"]},{"name":"fun put(value: String): Int","description":"com.google.flatbuffers.kotlin.FlexBuffersBuilder.put","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flex-buffers-builder/put.html","searchKeys":["put","fun put(value: String): Int","com.google.flatbuffers.kotlin.FlexBuffersBuilder.put"]},{"name":"fun put(value: UByte)","description":"com.google.flatbuffers.kotlin.FlexBuffersBuilder.put","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flex-buffers-builder/put.html","searchKeys":["put","fun put(value: UByte)","com.google.flatbuffers.kotlin.FlexBuffersBuilder.put"]},{"name":"fun put(value: UByteArray): Int","description":"com.google.flatbuffers.kotlin.FlexBuffersBuilder.put","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flex-buffers-builder/put.html","searchKeys":["put","fun put(value: UByteArray): Int","com.google.flatbuffers.kotlin.FlexBuffersBuilder.put"]},{"name":"fun put(value: UInt)","description":"com.google.flatbuffers.kotlin.FlexBuffersBuilder.put","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flex-buffers-builder/put.html","searchKeys":["put","fun put(value: UInt)","com.google.flatbuffers.kotlin.FlexBuffersBuilder.put"]},{"name":"fun put(value: UIntArray): Int","description":"com.google.flatbuffers.kotlin.FlexBuffersBuilder.put","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flex-buffers-builder/put.html","searchKeys":["put","fun put(value: UIntArray): Int","com.google.flatbuffers.kotlin.FlexBuffersBuilder.put"]},{"name":"fun put(value: ULong)","description":"com.google.flatbuffers.kotlin.FlexBuffersBuilder.put","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flex-buffers-builder/put.html","searchKeys":["put","fun put(value: ULong)","com.google.flatbuffers.kotlin.FlexBuffersBuilder.put"]},{"name":"fun put(value: ULongArray): Int","description":"com.google.flatbuffers.kotlin.FlexBuffersBuilder.put","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flex-buffers-builder/put.html","searchKeys":["put","fun put(value: ULongArray): Int","com.google.flatbuffers.kotlin.FlexBuffersBuilder.put"]},{"name":"fun put(value: UShort)","description":"com.google.flatbuffers.kotlin.FlexBuffersBuilder.put","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flex-buffers-builder/put.html","searchKeys":["put","fun put(value: UShort)","com.google.flatbuffers.kotlin.FlexBuffersBuilder.put"]},{"name":"fun put(value: UShortArray): Int","description":"com.google.flatbuffers.kotlin.FlexBuffersBuilder.put","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flex-buffers-builder/put.html","searchKeys":["put","fun put(value: UShortArray): Int","com.google.flatbuffers.kotlin.FlexBuffersBuilder.put"]},{"name":"fun put(x: Boolean)","description":"com.google.flatbuffers.kotlin.FlatBufferBuilder.put","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flat-buffer-builder/put.html","searchKeys":["put","fun put(x: Boolean)","com.google.flatbuffers.kotlin.FlatBufferBuilder.put"]},{"name":"fun put(x: Byte)","description":"com.google.flatbuffers.kotlin.FlatBufferBuilder.put","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flat-buffer-builder/put.html","searchKeys":["put","fun put(x: Byte)","com.google.flatbuffers.kotlin.FlatBufferBuilder.put"]},{"name":"fun put(x: Double)","description":"com.google.flatbuffers.kotlin.FlatBufferBuilder.put","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flat-buffer-builder/put.html","searchKeys":["put","fun put(x: Double)","com.google.flatbuffers.kotlin.FlatBufferBuilder.put"]},{"name":"fun put(x: Float)","description":"com.google.flatbuffers.kotlin.FlatBufferBuilder.put","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flat-buffer-builder/put.html","searchKeys":["put","fun put(x: Float)","com.google.flatbuffers.kotlin.FlatBufferBuilder.put"]},{"name":"fun put(x: Int)","description":"com.google.flatbuffers.kotlin.FlatBufferBuilder.put","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flat-buffer-builder/put.html","searchKeys":["put","fun put(x: Int)","com.google.flatbuffers.kotlin.FlatBufferBuilder.put"]},{"name":"fun put(x: Long)","description":"com.google.flatbuffers.kotlin.FlatBufferBuilder.put","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flat-buffer-builder/put.html","searchKeys":["put","fun put(x: Long)","com.google.flatbuffers.kotlin.FlatBufferBuilder.put"]},{"name":"fun put(x: Short)","description":"com.google.flatbuffers.kotlin.FlatBufferBuilder.put","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flat-buffer-builder/put.html","searchKeys":["put","fun put(x: Short)","com.google.flatbuffers.kotlin.FlatBufferBuilder.put"]},{"name":"fun put(x: UByte)","description":"com.google.flatbuffers.kotlin.FlatBufferBuilder.put","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flat-buffer-builder/put.html","searchKeys":["put","fun put(x: UByte)","com.google.flatbuffers.kotlin.FlatBufferBuilder.put"]},{"name":"fun put(x: UInt)","description":"com.google.flatbuffers.kotlin.FlatBufferBuilder.put","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flat-buffer-builder/put.html","searchKeys":["put","fun put(x: UInt)","com.google.flatbuffers.kotlin.FlatBufferBuilder.put"]},{"name":"fun put(x: ULong)","description":"com.google.flatbuffers.kotlin.FlatBufferBuilder.put","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flat-buffer-builder/put.html","searchKeys":["put","fun put(x: ULong)","com.google.flatbuffers.kotlin.FlatBufferBuilder.put"]},{"name":"fun put(x: UShort)","description":"com.google.flatbuffers.kotlin.FlatBufferBuilder.put","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flat-buffer-builder/put.html","searchKeys":["put","fun put(x: UShort)","com.google.flatbuffers.kotlin.FlatBufferBuilder.put"]},{"name":"fun putNull(key: String? = null)","description":"com.google.flatbuffers.kotlin.FlexBuffersBuilder.putNull","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flex-buffers-builder/put-null.html","searchKeys":["putNull","fun putNull(key: String? = null)","com.google.flatbuffers.kotlin.FlexBuffersBuilder.putNull"]},{"name":"fun required(table: Offset<*>, field: Int, fileName: String? = null)","description":"com.google.flatbuffers.kotlin.FlatBufferBuilder.required","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flat-buffer-builder/required.html","searchKeys":["required","fun required(table: Offset<*>, field: Int, fileName: String? = null)","com.google.flatbuffers.kotlin.FlatBufferBuilder.required"]},{"name":"fun set(key: String? = null, value: UIntArray): Int","description":"com.google.flatbuffers.kotlin.FlexBuffersBuilder.set","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flex-buffers-builder/set.html","searchKeys":["set","fun set(key: String? = null, value: UIntArray): Int","com.google.flatbuffers.kotlin.FlexBuffersBuilder.set"]},{"name":"fun sizedByteArray(start: Int = space, length: Int = buffer.capacity - space): ByteArray","description":"com.google.flatbuffers.kotlin.FlatBufferBuilder.sizedByteArray","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flat-buffer-builder/sized-byte-array.html","searchKeys":["sizedByteArray","fun sizedByteArray(start: Int = space, length: Int = buffer.capacity - space): ByteArray","com.google.flatbuffers.kotlin.FlatBufferBuilder.sizedByteArray"]},{"name":"fun slot(vOffset: Int)","description":"com.google.flatbuffers.kotlin.FlatBufferBuilder.slot","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flat-buffer-builder/slot.html","searchKeys":["slot","fun slot(vOffset: Int)","com.google.flatbuffers.kotlin.FlatBufferBuilder.slot"]},{"name":"fun startMap(): Int","description":"com.google.flatbuffers.kotlin.FlexBuffersBuilder.startMap","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flex-buffers-builder/start-map.html","searchKeys":["startMap","fun startMap(): Int","com.google.flatbuffers.kotlin.FlexBuffersBuilder.startMap"]},{"name":"fun startString(numElems: Int)","description":"com.google.flatbuffers.kotlin.FlatBufferBuilder.startString","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flat-buffer-builder/start-string.html","searchKeys":["startString","fun startString(numElems: Int)","com.google.flatbuffers.kotlin.FlatBufferBuilder.startString"]},{"name":"fun startTable(numFields: Int)","description":"com.google.flatbuffers.kotlin.FlatBufferBuilder.startTable","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flat-buffer-builder/start-table.html","searchKeys":["startTable","fun startTable(numFields: Int)","com.google.flatbuffers.kotlin.FlatBufferBuilder.startTable"]},{"name":"fun startVector(): Int","description":"com.google.flatbuffers.kotlin.FlexBuffersBuilder.startVector","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flex-buffers-builder/start-vector.html","searchKeys":["startVector","fun startVector(): Int","com.google.flatbuffers.kotlin.FlexBuffersBuilder.startVector"]},{"name":"fun startVector(elemSize: Int, numElems: Int, alignment: Int)","description":"com.google.flatbuffers.kotlin.FlatBufferBuilder.startVector","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flat-buffer-builder/start-vector.html","searchKeys":["startVector","fun startVector(elemSize: Int, numElems: Int, alignment: Int)","com.google.flatbuffers.kotlin.FlatBufferBuilder.startVector"]},{"name":"fun string(offset: Int): String","description":"com.google.flatbuffers.kotlin.Table.string","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-table/string.html","searchKeys":["string","fun string(offset: Int): String","com.google.flatbuffers.kotlin.Table.string"]},{"name":"fun string(offset: Int, bb: ReadWriteBuffer): String","description":"com.google.flatbuffers.kotlin.Table.Companion.string","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-table/-companion/string.html","searchKeys":["string","fun string(offset: Int, bb: ReadWriteBuffer): String","com.google.flatbuffers.kotlin.Table.Companion.string"]},{"name":"fun toBlob(): Blob","description":"com.google.flatbuffers.kotlin.Reference.toBlob","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-reference/to-blob.html","searchKeys":["toBlob","fun toBlob(): Blob","com.google.flatbuffers.kotlin.Reference.toBlob"]},{"name":"fun toBoolean(): Boolean","description":"com.google.flatbuffers.kotlin.Reference.toBoolean","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-reference/to-boolean.html","searchKeys":["toBoolean","fun toBoolean(): Boolean","com.google.flatbuffers.kotlin.Reference.toBoolean"]},{"name":"fun toByte(): Byte","description":"com.google.flatbuffers.kotlin.Reference.toByte","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-reference/to-byte.html","searchKeys":["toByte","fun toByte(): Byte","com.google.flatbuffers.kotlin.Reference.toByte"]},{"name":"fun toByteArray(): ByteArray","description":"com.google.flatbuffers.kotlin.Blob.toByteArray","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-blob/to-byte-array.html","searchKeys":["toByteArray","fun toByteArray(): ByteArray","com.google.flatbuffers.kotlin.Blob.toByteArray"]},{"name":"fun toByteArray(): ByteArray","description":"com.google.flatbuffers.kotlin.Reference.toByteArray","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-reference/to-byte-array.html","searchKeys":["toByteArray","fun toByteArray(): ByteArray","com.google.flatbuffers.kotlin.Reference.toByteArray"]},{"name":"fun toDouble(): Double","description":"com.google.flatbuffers.kotlin.Reference.toDouble","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-reference/to-double.html","searchKeys":["toDouble","fun toDouble(): Double","com.google.flatbuffers.kotlin.Reference.toDouble"]},{"name":"fun toDoubleArray(): DoubleArray","description":"com.google.flatbuffers.kotlin.Reference.toDoubleArray","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-reference/to-double-array.html","searchKeys":["toDoubleArray","fun toDoubleArray(): DoubleArray","com.google.flatbuffers.kotlin.Reference.toDoubleArray"]},{"name":"fun toFloat(): Float","description":"com.google.flatbuffers.kotlin.Reference.toFloat","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-reference/to-float.html","searchKeys":["toFloat","fun toFloat(): Float","com.google.flatbuffers.kotlin.Reference.toFloat"]},{"name":"fun toFloatArray(): FloatArray","description":"com.google.flatbuffers.kotlin.Reference.toFloatArray","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-reference/to-float-array.html","searchKeys":["toFloatArray","fun toFloatArray(): FloatArray","com.google.flatbuffers.kotlin.Reference.toFloatArray"]},{"name":"fun toInt(): Int","description":"com.google.flatbuffers.kotlin.Reference.toInt","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-reference/to-int.html","searchKeys":["toInt","fun toInt(): Int","com.google.flatbuffers.kotlin.Reference.toInt"]},{"name":"fun toIntArray(): IntArray","description":"com.google.flatbuffers.kotlin.Reference.toIntArray","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-reference/to-int-array.html","searchKeys":["toIntArray","fun toIntArray(): IntArray","com.google.flatbuffers.kotlin.Reference.toIntArray"]},{"name":"fun toKey(): Key","description":"com.google.flatbuffers.kotlin.Reference.toKey","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-reference/to-key.html","searchKeys":["toKey","fun toKey(): Key","com.google.flatbuffers.kotlin.Reference.toKey"]},{"name":"fun toLong(): Long","description":"com.google.flatbuffers.kotlin.Reference.toLong","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-reference/to-long.html","searchKeys":["toLong","fun toLong(): Long","com.google.flatbuffers.kotlin.Reference.toLong"]},{"name":"fun toLongArray(): LongArray","description":"com.google.flatbuffers.kotlin.Reference.toLongArray","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-reference/to-long-array.html","searchKeys":["toLongArray","fun toLongArray(): LongArray","com.google.flatbuffers.kotlin.Reference.toLongArray"]},{"name":"fun toMap(): Map","description":"com.google.flatbuffers.kotlin.Reference.toMap","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-reference/to-map.html","searchKeys":["toMap","fun toMap(): Map","com.google.flatbuffers.kotlin.Reference.toMap"]},{"name":"fun toShort(): Short","description":"com.google.flatbuffers.kotlin.Reference.toShort","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-reference/to-short.html","searchKeys":["toShort","fun toShort(): Short","com.google.flatbuffers.kotlin.Reference.toShort"]},{"name":"fun toShortArray(): ShortArray","description":"com.google.flatbuffers.kotlin.Reference.toShortArray","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-reference/to-short-array.html","searchKeys":["toShortArray","fun toShortArray(): ShortArray","com.google.flatbuffers.kotlin.Reference.toShortArray"]},{"name":"fun toUByte(): UByte","description":"com.google.flatbuffers.kotlin.Reference.toUByte","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-reference/to-u-byte.html","searchKeys":["toUByte","fun toUByte(): UByte","com.google.flatbuffers.kotlin.Reference.toUByte"]},{"name":"fun toUByteArray(): UByteArray","description":"com.google.flatbuffers.kotlin.Reference.toUByteArray","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-reference/to-u-byte-array.html","searchKeys":["toUByteArray","fun toUByteArray(): UByteArray","com.google.flatbuffers.kotlin.Reference.toUByteArray"]},{"name":"fun toUInt(): UInt","description":"com.google.flatbuffers.kotlin.Reference.toUInt","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-reference/to-u-int.html","searchKeys":["toUInt","fun toUInt(): UInt","com.google.flatbuffers.kotlin.Reference.toUInt"]},{"name":"fun toUIntArray(): UIntArray","description":"com.google.flatbuffers.kotlin.Reference.toUIntArray","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-reference/to-u-int-array.html","searchKeys":["toUIntArray","fun toUIntArray(): UIntArray","com.google.flatbuffers.kotlin.Reference.toUIntArray"]},{"name":"fun toULong(): ULong","description":"com.google.flatbuffers.kotlin.Reference.toULong","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-reference/to-u-long.html","searchKeys":["toULong","fun toULong(): ULong","com.google.flatbuffers.kotlin.Reference.toULong"]},{"name":"fun toULongArray(): ULongArray","description":"com.google.flatbuffers.kotlin.Reference.toULongArray","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-reference/to-u-long-array.html","searchKeys":["toULongArray","fun toULongArray(): ULongArray","com.google.flatbuffers.kotlin.Reference.toULongArray"]},{"name":"fun toUShort(): UShort","description":"com.google.flatbuffers.kotlin.Reference.toUShort","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-reference/to-u-short.html","searchKeys":["toUShort","fun toUShort(): UShort","com.google.flatbuffers.kotlin.Reference.toUShort"]},{"name":"fun toUShortArray(): UShortArray","description":"com.google.flatbuffers.kotlin.Reference.toUShortArray","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-reference/to-u-short-array.html","searchKeys":["toUShortArray","fun toUShortArray(): UShortArray","com.google.flatbuffers.kotlin.Reference.toUShortArray"]},{"name":"fun toUnion(): UnionOffset","description":"com.google.flatbuffers.kotlin.Offset.toUnion","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-offset/to-union.html","searchKeys":["toUnion","fun toUnion(): UnionOffset","com.google.flatbuffers.kotlin.Offset.toUnion"]},{"name":"fun toVector(): Vector","description":"com.google.flatbuffers.kotlin.Reference.toVector","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-reference/to-vector.html","searchKeys":["toVector","fun toVector(): Vector","com.google.flatbuffers.kotlin.Reference.toVector"]},{"name":"fun union(t: Table, offset: Int): Table","description":"com.google.flatbuffers.kotlin.Table.union","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-table/union.html","searchKeys":["union","fun union(t: Table, offset: Int): Table","com.google.flatbuffers.kotlin.Table.union"]},{"name":"fun union(t: Table, offset: Int, bb: ReadWriteBuffer): Table","description":"com.google.flatbuffers.kotlin.Table.Companion.union","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-table/-companion/union.html","searchKeys":["union","fun union(t: Table, offset: Int, bb: ReadWriteBuffer): Table","com.google.flatbuffers.kotlin.Table.Companion.union"]},{"name":"fun vector(offset: Int): Int","description":"com.google.flatbuffers.kotlin.Table.vector","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-table/vector.html","searchKeys":["vector","fun vector(offset: Int): Int","com.google.flatbuffers.kotlin.Table.vector"]},{"name":"fun vectorAsBuffer(buffer: ReadWriteBuffer, vectorOffset: Int, elemSize: Int): ReadBuffer","description":"com.google.flatbuffers.kotlin.Table.vectorAsBuffer","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-table/vector-as-buffer.html","searchKeys":["vectorAsBuffer","fun vectorAsBuffer(buffer: ReadWriteBuffer, vectorOffset: Int, elemSize: Int): ReadBuffer","com.google.flatbuffers.kotlin.Table.vectorAsBuffer"]},{"name":"fun vectorLength(offset: Int): Int","description":"com.google.flatbuffers.kotlin.Table.vectorLength","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-table/vector-length.html","searchKeys":["vectorLength","fun vectorLength(offset: Int): Int","com.google.flatbuffers.kotlin.Table.vectorLength"]},{"name":"inline fun <T : Table> reset(): T","description":"com.google.flatbuffers.kotlin.Table.reset","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-table/reset.html","searchKeys":["reset","inline fun <T : Table> reset(): T","com.google.flatbuffers.kotlin.Table.reset"]},{"name":"inline fun <T : Table> reset(i: Int, reuseBuffer: ReadWriteBuffer): T","description":"com.google.flatbuffers.kotlin.Table.reset","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-table/reset.html","searchKeys":["reset","inline fun <T : Table> reset(i: Int, reuseBuffer: ReadWriteBuffer): T","com.google.flatbuffers.kotlin.Table.reset"]},{"name":"inline fun <T> OffsetArray(size: Int, crossinline call: (Int) -> Offset<T>): OffsetArray<T>","description":"com.google.flatbuffers.kotlin.OffsetArray","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-offset-array.html","searchKeys":["OffsetArray","inline fun <T> OffsetArray(size: Int, crossinline call: (Int) -> Offset<T>): OffsetArray<T>","com.google.flatbuffers.kotlin.OffsetArray"]},{"name":"inline fun StringOffsetArray(size: Int, crossinline call: (Int) -> Offset<String>): StringOffsetArray","description":"com.google.flatbuffers.kotlin.StringOffsetArray","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-string-offset-array.html","searchKeys":["StringOffsetArray","inline fun StringOffsetArray(size: Int, crossinline call: (Int) -> Offset<String>): StringOffsetArray","com.google.flatbuffers.kotlin.StringOffsetArray"]},{"name":"inline fun UnionOffsetArray(size: Int, crossinline call: (Int) -> Offset<Any>): UnionOffsetArray","description":"com.google.flatbuffers.kotlin.UnionOffsetArray","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-union-offset-array.html","searchKeys":["UnionOffsetArray","inline fun UnionOffsetArray(size: Int, crossinline call: (Int) -> Offset<Any>): UnionOffsetArray","com.google.flatbuffers.kotlin.UnionOffsetArray"]},{"name":"inline fun getDouble(ary: ByteArray, index: Int): Double","description":"com.google.flatbuffers.kotlin.ByteArrayOps.getDouble","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-byte-array-ops/get-double.html","searchKeys":["getDouble","inline fun getDouble(ary: ByteArray, index: Int): Double","com.google.flatbuffers.kotlin.ByteArrayOps.getDouble"]},{"name":"inline fun getFloat(ary: ByteArray, index: Int): Float","description":"com.google.flatbuffers.kotlin.ByteArrayOps.getFloat","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-byte-array-ops/get-float.html","searchKeys":["getFloat","inline fun getFloat(ary: ByteArray, index: Int): Float","com.google.flatbuffers.kotlin.ByteArrayOps.getFloat"]},{"name":"inline fun getInt(ary: ByteArray, index: Int): Int","description":"com.google.flatbuffers.kotlin.ByteArrayOps.getInt","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-byte-array-ops/get-int.html","searchKeys":["getInt","inline fun getInt(ary: ByteArray, index: Int): Int","com.google.flatbuffers.kotlin.ByteArrayOps.getInt"]},{"name":"inline fun getLong(ary: ByteArray, index: Int): Long","description":"com.google.flatbuffers.kotlin.ByteArrayOps.getLong","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-byte-array-ops/get-long.html","searchKeys":["getLong","inline fun getLong(ary: ByteArray, index: Int): Long","com.google.flatbuffers.kotlin.ByteArrayOps.getLong"]},{"name":"inline fun getShort(ary: ByteArray, index: Int): Short","description":"com.google.flatbuffers.kotlin.ByteArrayOps.getShort","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-byte-array-ops/get-short.html","searchKeys":["getShort","inline fun getShort(ary: ByteArray, index: Int): Short","com.google.flatbuffers.kotlin.ByteArrayOps.getShort"]},{"name":"inline fun getUByte(ary: ByteArray, index: Int): UByte","description":"com.google.flatbuffers.kotlin.ByteArrayOps.getUByte","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-byte-array-ops/get-u-byte.html","searchKeys":["getUByte","inline fun getUByte(ary: ByteArray, index: Int): UByte","com.google.flatbuffers.kotlin.ByteArrayOps.getUByte"]},{"name":"inline fun getUInt(ary: ByteArray, index: Int): UInt","description":"com.google.flatbuffers.kotlin.ByteArrayOps.getUInt","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-byte-array-ops/get-u-int.html","searchKeys":["getUInt","inline fun getUInt(ary: ByteArray, index: Int): UInt","com.google.flatbuffers.kotlin.ByteArrayOps.getUInt"]},{"name":"inline fun getULong(ary: ByteArray, index: Int): ULong","description":"com.google.flatbuffers.kotlin.ByteArrayOps.getULong","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-byte-array-ops/get-u-long.html","searchKeys":["getULong","inline fun getULong(ary: ByteArray, index: Int): ULong","com.google.flatbuffers.kotlin.ByteArrayOps.getULong"]},{"name":"inline fun getUShort(ary: ByteArray, index: Int): UShort","description":"com.google.flatbuffers.kotlin.ByteArrayOps.getUShort","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-byte-array-ops/get-u-short.html","searchKeys":["getUShort","inline fun getUShort(ary: ByteArray, index: Int): UShort","com.google.flatbuffers.kotlin.ByteArrayOps.getUShort"]},{"name":"inline fun isFourByte(b: Byte): Boolean","description":"com.google.flatbuffers.kotlin.Utf8.isFourByte","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-utf8/is-four-byte.html","searchKeys":["isFourByte","inline fun isFourByte(b: Byte): Boolean","com.google.flatbuffers.kotlin.Utf8.isFourByte"]},{"name":"inline fun isOneByte(b: Byte): Boolean","description":"com.google.flatbuffers.kotlin.Utf8.isOneByte","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-utf8/is-one-byte.html","searchKeys":["isOneByte","inline fun isOneByte(b: Byte): Boolean","com.google.flatbuffers.kotlin.Utf8.isOneByte"]},{"name":"inline fun isThreeBytes(b: Byte): Boolean","description":"com.google.flatbuffers.kotlin.Utf8.isThreeBytes","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-utf8/is-three-bytes.html","searchKeys":["isThreeBytes","inline fun isThreeBytes(b: Byte): Boolean","com.google.flatbuffers.kotlin.Utf8.isThreeBytes"]},{"name":"inline fun isTwoBytes(b: Byte): Boolean","description":"com.google.flatbuffers.kotlin.Utf8.isTwoBytes","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-utf8/is-two-bytes.html","searchKeys":["isTwoBytes","inline fun isTwoBytes(b: Byte): Boolean","com.google.flatbuffers.kotlin.Utf8.isTwoBytes"]},{"name":"inline fun max(other: BitWidth): BitWidth","description":"com.google.flatbuffers.kotlin.BitWidth.max","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-bit-width/max.html","searchKeys":["max","inline fun max(other: BitWidth): BitWidth","com.google.flatbuffers.kotlin.BitWidth.max"]},{"name":"inline fun putMap(key: String? = null, crossinline block: FlexBuffersBuilder.() -> Unit): Int","description":"com.google.flatbuffers.kotlin.FlexBuffersBuilder.putMap","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flex-buffers-builder/put-map.html","searchKeys":["putMap","inline fun putMap(key: String? = null, crossinline block: FlexBuffersBuilder.() -> Unit): Int","com.google.flatbuffers.kotlin.FlexBuffersBuilder.putMap"]},{"name":"inline fun putTypedVector(crossinline block: FlexBuffersBuilder.() -> Unit): Int","description":"com.google.flatbuffers.kotlin.FlexBuffersBuilder.putTypedVector","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flex-buffers-builder/put-typed-vector.html","searchKeys":["putTypedVector","inline fun putTypedVector(crossinline block: FlexBuffersBuilder.() -> Unit): Int","com.google.flatbuffers.kotlin.FlexBuffersBuilder.putTypedVector"]},{"name":"inline fun putVector(crossinline block: FlexBuffersBuilder.() -> Unit): Int","description":"com.google.flatbuffers.kotlin.FlexBuffersBuilder.putVector","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flex-buffers-builder/put-vector.html","searchKeys":["putVector","inline fun putVector(crossinline block: FlexBuffersBuilder.() -> Unit): Int","com.google.flatbuffers.kotlin.FlexBuffersBuilder.putVector"]},{"name":"inline fun setDouble(ary: ByteArray, index: Int, value: Double)","description":"com.google.flatbuffers.kotlin.ByteArrayOps.setDouble","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-byte-array-ops/set-double.html","searchKeys":["setDouble","inline fun setDouble(ary: ByteArray, index: Int, value: Double)","com.google.flatbuffers.kotlin.ByteArrayOps.setDouble"]},{"name":"inline fun setFloat(ary: ByteArray, index: Int, value: Float)","description":"com.google.flatbuffers.kotlin.ByteArrayOps.setFloat","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-byte-array-ops/set-float.html","searchKeys":["setFloat","inline fun setFloat(ary: ByteArray, index: Int, value: Float)","com.google.flatbuffers.kotlin.ByteArrayOps.setFloat"]},{"name":"inline fun setInt(ary: ByteArray, index: Int, value: Int)","description":"com.google.flatbuffers.kotlin.ByteArrayOps.setInt","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-byte-array-ops/set-int.html","searchKeys":["setInt","inline fun setInt(ary: ByteArray, index: Int, value: Int)","com.google.flatbuffers.kotlin.ByteArrayOps.setInt"]},{"name":"inline fun setLong(ary: ByteArray, index: Int, value: Long)","description":"com.google.flatbuffers.kotlin.ByteArrayOps.setLong","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-byte-array-ops/set-long.html","searchKeys":["setLong","inline fun setLong(ary: ByteArray, index: Int, value: Long)","com.google.flatbuffers.kotlin.ByteArrayOps.setLong"]},{"name":"inline fun setShort(ary: ByteArray, index: Int, value: Short)","description":"com.google.flatbuffers.kotlin.ByteArrayOps.setShort","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-byte-array-ops/set-short.html","searchKeys":["setShort","inline fun setShort(ary: ByteArray, index: Int, value: Short)","com.google.flatbuffers.kotlin.ByteArrayOps.setShort"]},{"name":"inline fun setUByte(ary: ByteArray, index: Int, value: UByte)","description":"com.google.flatbuffers.kotlin.ByteArrayOps.setUByte","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-byte-array-ops/set-u-byte.html","searchKeys":["setUByte","inline fun setUByte(ary: ByteArray, index: Int, value: UByte)","com.google.flatbuffers.kotlin.ByteArrayOps.setUByte"]},{"name":"inline fun setUInt(ary: ByteArray, index: Int, value: UInt)","description":"com.google.flatbuffers.kotlin.ByteArrayOps.setUInt","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-byte-array-ops/set-u-int.html","searchKeys":["setUInt","inline fun setUInt(ary: ByteArray, index: Int, value: UInt)","com.google.flatbuffers.kotlin.ByteArrayOps.setUInt"]},{"name":"inline fun setULong(ary: ByteArray, index: Int, value: ULong)","description":"com.google.flatbuffers.kotlin.ByteArrayOps.setULong","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-byte-array-ops/set-u-long.html","searchKeys":["setULong","inline fun setULong(ary: ByteArray, index: Int, value: ULong)","com.google.flatbuffers.kotlin.ByteArrayOps.setULong"]},{"name":"inline fun setUShort(ary: ByteArray, index: Int, value: UShort)","description":"com.google.flatbuffers.kotlin.ByteArrayOps.setUShort","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-byte-array-ops/set-u-short.html","searchKeys":["setUShort","inline fun setUShort(ary: ByteArray, index: Int, value: UShort)","com.google.flatbuffers.kotlin.ByteArrayOps.setUShort"]},{"name":"inline operator fun get(index: Int): Offset<T>","description":"com.google.flatbuffers.kotlin.OffsetArray.get","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-offset-array/get.html","searchKeys":["get","inline operator fun get(index: Int): Offset<T>","com.google.flatbuffers.kotlin.OffsetArray.get"]},{"name":"inline operator fun set(key: String? = null, value: Int)","description":"com.google.flatbuffers.kotlin.FlexBuffersBuilder.set","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flex-buffers-builder/set.html","searchKeys":["set","inline operator fun set(key: String? = null, value: Int)","com.google.flatbuffers.kotlin.FlexBuffersBuilder.set"]},{"name":"inline operator fun set(key: String? = null, value: Short)","description":"com.google.flatbuffers.kotlin.FlexBuffersBuilder.set","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flex-buffers-builder/set.html","searchKeys":["set","inline operator fun set(key: String? = null, value: Short)","com.google.flatbuffers.kotlin.FlexBuffersBuilder.set"]},{"name":"inline operator fun set(key: String? = null, value: UByte)","description":"com.google.flatbuffers.kotlin.FlexBuffersBuilder.set","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flex-buffers-builder/set.html","searchKeys":["set","inline operator fun set(key: String? = null, value: UByte)","com.google.flatbuffers.kotlin.FlexBuffersBuilder.set"]},{"name":"interface ReadBuffer","description":"com.google.flatbuffers.kotlin.ReadBuffer","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-read-buffer/index.html","searchKeys":["ReadBuffer","interface ReadBuffer","com.google.flatbuffers.kotlin.ReadBuffer"]},{"name":"interface ReadWriteBuffer : ReadBuffer","description":"com.google.flatbuffers.kotlin.ReadWriteBuffer","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-read-write-buffer/index.html","searchKeys":["ReadWriteBuffer","interface ReadWriteBuffer : ReadBuffer","com.google.flatbuffers.kotlin.ReadWriteBuffer"]},{"name":"object ByteArrayOps","description":"com.google.flatbuffers.kotlin.ByteArrayOps","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-byte-array-ops/index.html","searchKeys":["ByteArrayOps","object ByteArrayOps","com.google.flatbuffers.kotlin.ByteArrayOps"]},{"name":"object Companion","description":"com.google.flatbuffers.kotlin.FlexBuffersBuilder.Companion","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flex-buffers-builder/-companion/index.html","searchKeys":["Companion","object Companion","com.google.flatbuffers.kotlin.FlexBuffersBuilder.Companion"]},{"name":"object Companion","description":"com.google.flatbuffers.kotlin.Table.Companion","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-table/-companion/index.html","searchKeys":["Companion","object Companion","com.google.flatbuffers.kotlin.Table.Companion"]},{"name":"object Utf8","description":"com.google.flatbuffers.kotlin.Utf8","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-utf8/index.html","searchKeys":["Utf8","object Utf8","com.google.flatbuffers.kotlin.Utf8"]},{"name":"open class ArrayReadBuffer(buffer: ByteArray, offset: Int = 0, val limit: Int = buffer.size - offset) : ReadBuffer","description":"com.google.flatbuffers.kotlin.ArrayReadBuffer","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-array-read-buffer/index.html","searchKeys":["ArrayReadBuffer","open class ArrayReadBuffer(buffer: ByteArray, offset: Int = 0, val limit: Int = buffer.size - offset) : ReadBuffer","com.google.flatbuffers.kotlin.ArrayReadBuffer"]},{"name":"open class Blob : Sized","description":"com.google.flatbuffers.kotlin.Blob","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-blob/index.html","searchKeys":["Blob","open class Blob : Sized","com.google.flatbuffers.kotlin.Blob"]},{"name":"open class Sized","description":"com.google.flatbuffers.kotlin.Sized","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-sized/index.html","searchKeys":["Sized","open class Sized","com.google.flatbuffers.kotlin.Sized"]},{"name":"open class Struct","description":"com.google.flatbuffers.kotlin.Struct","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-struct/index.html","searchKeys":["Struct","open class Struct","com.google.flatbuffers.kotlin.Struct"]},{"name":"open class Table","description":"com.google.flatbuffers.kotlin.Table","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-table/index.html","searchKeys":["Table","open class Table","com.google.flatbuffers.kotlin.Table"]},{"name":"open class TypedVector(elementType: FlexBufferType, val buffer: ReadBuffer, val end: Int, val byteWidth: ByteWidth) : Vector","description":"com.google.flatbuffers.kotlin.TypedVector","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-typed-vector/index.html","searchKeys":["TypedVector","open class TypedVector(elementType: FlexBufferType, val buffer: ReadBuffer, val end: Int, val byteWidth: ByteWidth) : Vector","com.google.flatbuffers.kotlin.TypedVector"]},{"name":"open class Vector : Sized, Collection<Reference> ","description":"com.google.flatbuffers.kotlin.Vector","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-vector/index.html","searchKeys":["Vector","open class Vector : Sized, Collection<Reference> ","com.google.flatbuffers.kotlin.Vector"]},{"name":"open fun keysCompare(o1: Offset<*>, o2: Offset<*>, buffer: ReadWriteBuffer): Int","description":"com.google.flatbuffers.kotlin.Table.keysCompare","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-table/keys-compare.html","searchKeys":["keysCompare","open fun keysCompare(o1: Offset<*>, o2: Offset<*>, buffer: ReadWriteBuffer): Int","com.google.flatbuffers.kotlin.Table.keysCompare"]},{"name":"open fun requestAdditionalCapacity(additional: Int, copyAtEnd: Boolean = false): Int","description":"com.google.flatbuffers.kotlin.ReadWriteBuffer.requestAdditionalCapacity","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-read-write-buffer/request-additional-capacity.html","searchKeys":["requestAdditionalCapacity","open fun requestAdditionalCapacity(additional: Int, copyAtEnd: Boolean = false): Int","com.google.flatbuffers.kotlin.ReadWriteBuffer.requestAdditionalCapacity"]},{"name":"open operator fun get(index: Int): Reference","description":"com.google.flatbuffers.kotlin.Vector.get","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-vector/get.html","searchKeys":["get","open operator fun get(index: Int): Reference","com.google.flatbuffers.kotlin.Vector.get"]},{"name":"open operator override fun contains(element: Reference): Boolean","description":"com.google.flatbuffers.kotlin.Vector.contains","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-vector/contains.html","searchKeys":["contains","open operator override fun contains(element: Reference): Boolean","com.google.flatbuffers.kotlin.Vector.contains"]},{"name":"open operator override fun equals(other: Any?): Boolean","description":"com.google.flatbuffers.kotlin.Reference.equals","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-reference/equals.html","searchKeys":["equals","open operator override fun equals(other: Any?): Boolean","com.google.flatbuffers.kotlin.Reference.equals"]},{"name":"open operator override fun get(index: Int): Byte","description":"com.google.flatbuffers.kotlin.ArrayReadBuffer.get","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-array-read-buffer/get.html","searchKeys":["get","open operator override fun get(index: Int): Byte","com.google.flatbuffers.kotlin.ArrayReadBuffer.get"]},{"name":"open operator override fun get(index: Int): Reference","description":"com.google.flatbuffers.kotlin.TypedVector.get","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-typed-vector/get.html","searchKeys":["get","open operator override fun get(index: Int): Reference","com.google.flatbuffers.kotlin.TypedVector.get"]},{"name":"open operator override fun get(key: Key): Reference","description":"com.google.flatbuffers.kotlin.Map.get","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-map/get.html","searchKeys":["get","open operator override fun get(key: Key): Reference","com.google.flatbuffers.kotlin.Map.get"]},{"name":"open operator override fun iterator(): Iterator<Reference>","description":"com.google.flatbuffers.kotlin.Vector.iterator","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-vector/iterator.html","searchKeys":["iterator","open operator override fun iterator(): Iterator<Reference>","com.google.flatbuffers.kotlin.Vector.iterator"]},{"name":"open operator override fun set(dstIndex: Int, src: ReadBuffer, srcStart: Int, srcLength: Int)","description":"com.google.flatbuffers.kotlin.ArrayReadWriteBuffer.set","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-array-read-write-buffer/set.html","searchKeys":["set","open operator override fun set(dstIndex: Int, src: ReadBuffer, srcStart: Int, srcLength: Int)","com.google.flatbuffers.kotlin.ArrayReadWriteBuffer.set"]},{"name":"open operator override fun set(index: Int, value: Boolean)","description":"com.google.flatbuffers.kotlin.ArrayReadWriteBuffer.set","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-array-read-write-buffer/set.html","searchKeys":["set","open operator override fun set(index: Int, value: Boolean)","com.google.flatbuffers.kotlin.ArrayReadWriteBuffer.set"]},{"name":"open operator override fun set(index: Int, value: Byte)","description":"com.google.flatbuffers.kotlin.ArrayReadWriteBuffer.set","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-array-read-write-buffer/set.html","searchKeys":["set","open operator override fun set(index: Int, value: Byte)","com.google.flatbuffers.kotlin.ArrayReadWriteBuffer.set"]},{"name":"open operator override fun set(index: Int, value: Double)","description":"com.google.flatbuffers.kotlin.ArrayReadWriteBuffer.set","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-array-read-write-buffer/set.html","searchKeys":["set","open operator override fun set(index: Int, value: Double)","com.google.flatbuffers.kotlin.ArrayReadWriteBuffer.set"]},{"name":"open operator override fun set(index: Int, value: Float)","description":"com.google.flatbuffers.kotlin.ArrayReadWriteBuffer.set","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-array-read-write-buffer/set.html","searchKeys":["set","open operator override fun set(index: Int, value: Float)","com.google.flatbuffers.kotlin.ArrayReadWriteBuffer.set"]},{"name":"open operator override fun set(index: Int, value: Int)","description":"com.google.flatbuffers.kotlin.ArrayReadWriteBuffer.set","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-array-read-write-buffer/set.html","searchKeys":["set","open operator override fun set(index: Int, value: Int)","com.google.flatbuffers.kotlin.ArrayReadWriteBuffer.set"]},{"name":"open operator override fun set(index: Int, value: Long)","description":"com.google.flatbuffers.kotlin.ArrayReadWriteBuffer.set","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-array-read-write-buffer/set.html","searchKeys":["set","open operator override fun set(index: Int, value: Long)","com.google.flatbuffers.kotlin.ArrayReadWriteBuffer.set"]},{"name":"open operator override fun set(index: Int, value: Short)","description":"com.google.flatbuffers.kotlin.ArrayReadWriteBuffer.set","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-array-read-write-buffer/set.html","searchKeys":["set","open operator override fun set(index: Int, value: Short)","com.google.flatbuffers.kotlin.ArrayReadWriteBuffer.set"]},{"name":"open operator override fun set(index: Int, value: UByte)","description":"com.google.flatbuffers.kotlin.ArrayReadWriteBuffer.set","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-array-read-write-buffer/set.html","searchKeys":["set","open operator override fun set(index: Int, value: UByte)","com.google.flatbuffers.kotlin.ArrayReadWriteBuffer.set"]},{"name":"open operator override fun set(index: Int, value: UInt)","description":"com.google.flatbuffers.kotlin.ArrayReadWriteBuffer.set","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-array-read-write-buffer/set.html","searchKeys":["set","open operator override fun set(index: Int, value: UInt)","com.google.flatbuffers.kotlin.ArrayReadWriteBuffer.set"]},{"name":"open operator override fun set(index: Int, value: ULong)","description":"com.google.flatbuffers.kotlin.ArrayReadWriteBuffer.set","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-array-read-write-buffer/set.html","searchKeys":["set","open operator override fun set(index: Int, value: ULong)","com.google.flatbuffers.kotlin.ArrayReadWriteBuffer.set"]},{"name":"open operator override fun set(index: Int, value: UShort)","description":"com.google.flatbuffers.kotlin.ArrayReadWriteBuffer.set","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-array-read-write-buffer/set.html","searchKeys":["set","open operator override fun set(index: Int, value: UShort)","com.google.flatbuffers.kotlin.ArrayReadWriteBuffer.set"]},{"name":"open override fun clear()","description":"com.google.flatbuffers.kotlin.ArrayReadWriteBuffer.clear","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-array-read-write-buffer/clear.html","searchKeys":["clear","open override fun clear()","com.google.flatbuffers.kotlin.ArrayReadWriteBuffer.clear"]},{"name":"open override fun containsAll(elements: Collection<Reference>): Boolean","description":"com.google.flatbuffers.kotlin.Vector.containsAll","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-vector/contains-all.html","searchKeys":["containsAll","open override fun containsAll(elements: Collection<Reference>): Boolean","com.google.flatbuffers.kotlin.Vector.containsAll"]},{"name":"open override fun containsKey(key: Key): Boolean","description":"com.google.flatbuffers.kotlin.Map.containsKey","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-map/contains-key.html","searchKeys":["containsKey","open override fun containsKey(key: Key): Boolean","com.google.flatbuffers.kotlin.Map.containsKey"]},{"name":"open override fun containsValue(value: Reference): Boolean","description":"com.google.flatbuffers.kotlin.Map.containsValue","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-map/contains-value.html","searchKeys":["containsValue","open override fun containsValue(value: Reference): Boolean","com.google.flatbuffers.kotlin.Map.containsValue"]},{"name":"open override fun data(): ByteArray","description":"com.google.flatbuffers.kotlin.ArrayReadBuffer.data","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-array-read-buffer/data.html","searchKeys":["data","open override fun data(): ByteArray","com.google.flatbuffers.kotlin.ArrayReadBuffer.data"]},{"name":"open override fun fill(value: Byte, start: Int, end: Int)","description":"com.google.flatbuffers.kotlin.ArrayReadWriteBuffer.fill","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-array-read-write-buffer/fill.html","searchKeys":["fill","open override fun fill(value: Byte, start: Int, end: Int)","com.google.flatbuffers.kotlin.ArrayReadWriteBuffer.fill"]},{"name":"open override fun findFirst(value: Byte, start: Int, end: Int): Int","description":"com.google.flatbuffers.kotlin.ArrayReadBuffer.findFirst","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-array-read-buffer/find-first.html","searchKeys":["findFirst","open override fun findFirst(value: Byte, start: Int, end: Int): Int","com.google.flatbuffers.kotlin.ArrayReadBuffer.findFirst"]},{"name":"open override fun getBoolean(index: Int): Boolean","description":"com.google.flatbuffers.kotlin.ArrayReadBuffer.getBoolean","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-array-read-buffer/get-boolean.html","searchKeys":["getBoolean","open override fun getBoolean(index: Int): Boolean","com.google.flatbuffers.kotlin.ArrayReadBuffer.getBoolean"]},{"name":"open override fun getBytes(array: ByteArray, start: Int, length: Int)","description":"com.google.flatbuffers.kotlin.ArrayReadBuffer.getBytes","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-array-read-buffer/get-bytes.html","searchKeys":["getBytes","open override fun getBytes(array: ByteArray, start: Int, length: Int)","com.google.flatbuffers.kotlin.ArrayReadBuffer.getBytes"]},{"name":"open override fun getDouble(index: Int): Double","description":"com.google.flatbuffers.kotlin.ArrayReadBuffer.getDouble","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-array-read-buffer/get-double.html","searchKeys":["getDouble","open override fun getDouble(index: Int): Double","com.google.flatbuffers.kotlin.ArrayReadBuffer.getDouble"]},{"name":"open override fun getFloat(index: Int): Float","description":"com.google.flatbuffers.kotlin.ArrayReadBuffer.getFloat","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-array-read-buffer/get-float.html","searchKeys":["getFloat","open override fun getFloat(index: Int): Float","com.google.flatbuffers.kotlin.ArrayReadBuffer.getFloat"]},{"name":"open override fun getInt(index: Int): Int","description":"com.google.flatbuffers.kotlin.ArrayReadBuffer.getInt","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-array-read-buffer/get-int.html","searchKeys":["getInt","open override fun getInt(index: Int): Int","com.google.flatbuffers.kotlin.ArrayReadBuffer.getInt"]},{"name":"open override fun getLong(index: Int): Long","description":"com.google.flatbuffers.kotlin.ArrayReadBuffer.getLong","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-array-read-buffer/get-long.html","searchKeys":["getLong","open override fun getLong(index: Int): Long","com.google.flatbuffers.kotlin.ArrayReadBuffer.getLong"]},{"name":"open override fun getShort(index: Int): Short","description":"com.google.flatbuffers.kotlin.ArrayReadBuffer.getShort","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-array-read-buffer/get-short.html","searchKeys":["getShort","open override fun getShort(index: Int): Short","com.google.flatbuffers.kotlin.ArrayReadBuffer.getShort"]},{"name":"open override fun getString(start: Int, size: Int): String","description":"com.google.flatbuffers.kotlin.ArrayReadBuffer.getString","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-array-read-buffer/get-string.html","searchKeys":["getString","open override fun getString(start: Int, size: Int): String","com.google.flatbuffers.kotlin.ArrayReadBuffer.getString"]},{"name":"open override fun getUByte(index: Int): UByte","description":"com.google.flatbuffers.kotlin.ArrayReadBuffer.getUByte","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-array-read-buffer/get-u-byte.html","searchKeys":["getUByte","open override fun getUByte(index: Int): UByte","com.google.flatbuffers.kotlin.ArrayReadBuffer.getUByte"]},{"name":"open override fun getUInt(index: Int): UInt","description":"com.google.flatbuffers.kotlin.ArrayReadBuffer.getUInt","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-array-read-buffer/get-u-int.html","searchKeys":["getUInt","open override fun getUInt(index: Int): UInt","com.google.flatbuffers.kotlin.ArrayReadBuffer.getUInt"]},{"name":"open override fun getULong(index: Int): ULong","description":"com.google.flatbuffers.kotlin.ArrayReadBuffer.getULong","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-array-read-buffer/get-u-long.html","searchKeys":["getULong","open override fun getULong(index: Int): ULong","com.google.flatbuffers.kotlin.ArrayReadBuffer.getULong"]},{"name":"open override fun getUShort(index: Int): UShort","description":"com.google.flatbuffers.kotlin.ArrayReadBuffer.getUShort","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-array-read-buffer/get-u-short.html","searchKeys":["getUShort","open override fun getUShort(index: Int): UShort","com.google.flatbuffers.kotlin.ArrayReadBuffer.getUShort"]},{"name":"open override fun hashCode(): Int","description":"com.google.flatbuffers.kotlin.Reference.hashCode","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-reference/hash-code.html","searchKeys":["hashCode","open override fun hashCode(): Int","com.google.flatbuffers.kotlin.Reference.hashCode"]},{"name":"open override fun isEmpty(): Boolean","description":"com.google.flatbuffers.kotlin.Map.isEmpty","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-map/is-empty.html","searchKeys":["isEmpty","open override fun isEmpty(): Boolean","com.google.flatbuffers.kotlin.Map.isEmpty"]},{"name":"open override fun isEmpty(): Boolean","description":"com.google.flatbuffers.kotlin.Vector.isEmpty","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-vector/is-empty.html","searchKeys":["isEmpty","open override fun isEmpty(): Boolean","com.google.flatbuffers.kotlin.Vector.isEmpty"]},{"name":"open override fun moveWrittenDataToEnd(capacity: Int): Int","description":"com.google.flatbuffers.kotlin.ArrayReadWriteBuffer.moveWrittenDataToEnd","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-array-read-write-buffer/move-written-data-to-end.html","searchKeys":["moveWrittenDataToEnd","open override fun moveWrittenDataToEnd(capacity: Int): Int","com.google.flatbuffers.kotlin.ArrayReadWriteBuffer.moveWrittenDataToEnd"]},{"name":"open override fun put(value: Boolean)","description":"com.google.flatbuffers.kotlin.ArrayReadWriteBuffer.put","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-array-read-write-buffer/put.html","searchKeys":["put","open override fun put(value: Boolean)","com.google.flatbuffers.kotlin.ArrayReadWriteBuffer.put"]},{"name":"open override fun put(value: Byte)","description":"com.google.flatbuffers.kotlin.ArrayReadWriteBuffer.put","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-array-read-write-buffer/put.html","searchKeys":["put","open override fun put(value: Byte)","com.google.flatbuffers.kotlin.ArrayReadWriteBuffer.put"]},{"name":"open override fun put(value: ByteArray, start: Int, length: Int)","description":"com.google.flatbuffers.kotlin.ArrayReadWriteBuffer.put","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-array-read-write-buffer/put.html","searchKeys":["put","open override fun put(value: ByteArray, start: Int, length: Int)","com.google.flatbuffers.kotlin.ArrayReadWriteBuffer.put"]},{"name":"open override fun put(value: CharSequence, encodedLength: Int): Int","description":"com.google.flatbuffers.kotlin.ArrayReadWriteBuffer.put","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-array-read-write-buffer/put.html","searchKeys":["put","open override fun put(value: CharSequence, encodedLength: Int): Int","com.google.flatbuffers.kotlin.ArrayReadWriteBuffer.put"]},{"name":"open override fun put(value: Double)","description":"com.google.flatbuffers.kotlin.ArrayReadWriteBuffer.put","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-array-read-write-buffer/put.html","searchKeys":["put","open override fun put(value: Double)","com.google.flatbuffers.kotlin.ArrayReadWriteBuffer.put"]},{"name":"open override fun put(value: Float)","description":"com.google.flatbuffers.kotlin.ArrayReadWriteBuffer.put","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-array-read-write-buffer/put.html","searchKeys":["put","open override fun put(value: Float)","com.google.flatbuffers.kotlin.ArrayReadWriteBuffer.put"]},{"name":"open override fun put(value: Int)","description":"com.google.flatbuffers.kotlin.ArrayReadWriteBuffer.put","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-array-read-write-buffer/put.html","searchKeys":["put","open override fun put(value: Int)","com.google.flatbuffers.kotlin.ArrayReadWriteBuffer.put"]},{"name":"open override fun put(value: Long)","description":"com.google.flatbuffers.kotlin.ArrayReadWriteBuffer.put","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-array-read-write-buffer/put.html","searchKeys":["put","open override fun put(value: Long)","com.google.flatbuffers.kotlin.ArrayReadWriteBuffer.put"]},{"name":"open override fun put(value: ReadBuffer, start: Int, length: Int)","description":"com.google.flatbuffers.kotlin.ArrayReadWriteBuffer.put","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-array-read-write-buffer/put.html","searchKeys":["put","open override fun put(value: ReadBuffer, start: Int, length: Int)","com.google.flatbuffers.kotlin.ArrayReadWriteBuffer.put"]},{"name":"open override fun put(value: Short)","description":"com.google.flatbuffers.kotlin.ArrayReadWriteBuffer.put","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-array-read-write-buffer/put.html","searchKeys":["put","open override fun put(value: Short)","com.google.flatbuffers.kotlin.ArrayReadWriteBuffer.put"]},{"name":"open override fun put(value: UByte)","description":"com.google.flatbuffers.kotlin.ArrayReadWriteBuffer.put","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-array-read-write-buffer/put.html","searchKeys":["put","open override fun put(value: UByte)","com.google.flatbuffers.kotlin.ArrayReadWriteBuffer.put"]},{"name":"open override fun put(value: UInt)","description":"com.google.flatbuffers.kotlin.ArrayReadWriteBuffer.put","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-array-read-write-buffer/put.html","searchKeys":["put","open override fun put(value: UInt)","com.google.flatbuffers.kotlin.ArrayReadWriteBuffer.put"]},{"name":"open override fun put(value: ULong)","description":"com.google.flatbuffers.kotlin.ArrayReadWriteBuffer.put","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-array-read-write-buffer/put.html","searchKeys":["put","open override fun put(value: ULong)","com.google.flatbuffers.kotlin.ArrayReadWriteBuffer.put"]},{"name":"open override fun put(value: UShort)","description":"com.google.flatbuffers.kotlin.ArrayReadWriteBuffer.put","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-array-read-write-buffer/put.html","searchKeys":["put","open override fun put(value: UShort)","com.google.flatbuffers.kotlin.ArrayReadWriteBuffer.put"]},{"name":"open override fun requestCapacity(capacity: Int, copyAtEnd: Boolean): Int","description":"com.google.flatbuffers.kotlin.ArrayReadWriteBuffer.requestCapacity","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-array-read-write-buffer/request-capacity.html","searchKeys":["requestCapacity","open override fun requestCapacity(capacity: Int, copyAtEnd: Boolean): Int","com.google.flatbuffers.kotlin.ArrayReadWriteBuffer.requestCapacity"]},{"name":"open override fun set(dstIndex: Int, src: ByteArray, srcStart: Int, srcLength: Int)","description":"com.google.flatbuffers.kotlin.ArrayReadWriteBuffer.set","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-array-read-write-buffer/set.html","searchKeys":["set","open override fun set(dstIndex: Int, src: ByteArray, srcStart: Int, srcLength: Int)","com.google.flatbuffers.kotlin.ArrayReadWriteBuffer.set"]},{"name":"open override fun slice(start: Int, size: Int): ReadBuffer","description":"com.google.flatbuffers.kotlin.ArrayReadBuffer.slice","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-array-read-buffer/slice.html","searchKeys":["slice","open override fun slice(start: Int, size: Int): ReadBuffer","com.google.flatbuffers.kotlin.ArrayReadBuffer.slice"]},{"name":"open override fun toString(): String","description":"com.google.flatbuffers.kotlin.Blob.toString","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-blob/to-string.html","searchKeys":["toString","open override fun toString(): String","com.google.flatbuffers.kotlin.Blob.toString"]},{"name":"open override fun toString(): String","description":"com.google.flatbuffers.kotlin.Key.toString","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-key/to-string.html","searchKeys":["toString","open override fun toString(): String","com.google.flatbuffers.kotlin.Key.toString"]},{"name":"open override fun toString(): String","description":"com.google.flatbuffers.kotlin.Reference.toString","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-reference/to-string.html","searchKeys":["toString","open override fun toString(): String","com.google.flatbuffers.kotlin.Reference.toString"]},{"name":"open override fun writeSlice(offset: Int, size: Int): ReadWriteBuffer","description":"com.google.flatbuffers.kotlin.ArrayReadWriteBuffer.writeSlice","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-array-read-write-buffer/write-slice.html","searchKeys":["writeSlice","open override fun writeSlice(offset: Int, size: Int): ReadWriteBuffer","com.google.flatbuffers.kotlin.ArrayReadWriteBuffer.writeSlice"]},{"name":"open override val capacity: Int","description":"com.google.flatbuffers.kotlin.ArrayReadWriteBuffer.capacity","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-array-read-write-buffer/capacity.html","searchKeys":["capacity","open override val capacity: Int","com.google.flatbuffers.kotlin.ArrayReadWriteBuffer.capacity"]},{"name":"open override val entries: Set<Map.Entry<Key, Reference>>","description":"com.google.flatbuffers.kotlin.Map.entries","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-map/entries.html","searchKeys":["entries","open override val entries: Set<Map.Entry<Key, Reference>>","com.google.flatbuffers.kotlin.Map.entries"]},{"name":"open override val key: Key","description":"com.google.flatbuffers.kotlin.Map.Entry.key","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-map/-entry/key.html","searchKeys":["key","open override val key: Key","com.google.flatbuffers.kotlin.Map.Entry.key"]},{"name":"open override val keys: Set<Key>","description":"com.google.flatbuffers.kotlin.Map.keys","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-map/keys.html","searchKeys":["keys","open override val keys: Set<Key>","com.google.flatbuffers.kotlin.Map.keys"]},{"name":"open override val limit: Int","description":"com.google.flatbuffers.kotlin.ArrayReadBuffer.limit","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-array-read-buffer/limit.html","searchKeys":["limit","open override val limit: Int","com.google.flatbuffers.kotlin.ArrayReadBuffer.limit"]},{"name":"open override val limit: Int","description":"com.google.flatbuffers.kotlin.ArrayReadWriteBuffer.limit","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-array-read-write-buffer/limit.html","searchKeys":["limit","open override val limit: Int","com.google.flatbuffers.kotlin.ArrayReadWriteBuffer.limit"]},{"name":"open override val value: Reference","description":"com.google.flatbuffers.kotlin.Map.Entry.value","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-map/-entry/value.html","searchKeys":["value","open override val value: Reference","com.google.flatbuffers.kotlin.Map.Entry.value"]},{"name":"open override val values: Collection<Reference>","description":"com.google.flatbuffers.kotlin.Map.values","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-map/values.html","searchKeys":["values","open override val values: Collection<Reference>","com.google.flatbuffers.kotlin.Map.values"]},{"name":"open override val writeLimit: Int","description":"com.google.flatbuffers.kotlin.ArrayReadWriteBuffer.writeLimit","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-array-read-write-buffer/write-limit.html","searchKeys":["writeLimit","open override val writeLimit: Int","com.google.flatbuffers.kotlin.ArrayReadWriteBuffer.writeLimit"]},{"name":"open override var writePosition: Int","description":"com.google.flatbuffers.kotlin.ArrayReadWriteBuffer.writePosition","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-array-read-write-buffer/write-position.html","searchKeys":["writePosition","open override var writePosition: Int","com.google.flatbuffers.kotlin.ArrayReadWriteBuffer.writePosition"]},{"name":"open val size: Int","description":"com.google.flatbuffers.kotlin.Sized.size","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-sized/size.html","searchKeys":["size","open val size: Int","com.google.flatbuffers.kotlin.Sized.size"]},{"name":"operator fun <T> Int.minus(other: Offset<T>): Int","description":"com.google.flatbuffers.kotlin.minus","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/minus.html","searchKeys":["minus","operator fun <T> Int.minus(other: Offset<T>): Int","com.google.flatbuffers.kotlin.minus"]},{"name":"operator fun <T> Offset<T>.minus(other: Int): Offset<T>","description":"com.google.flatbuffers.kotlin.minus","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/minus.html","searchKeys":["minus","operator fun <T> Offset<T>.minus(other: Int): Offset<T>","com.google.flatbuffers.kotlin.minus"]},{"name":"operator fun compareTo(other: FlexBufferType): Int","description":"com.google.flatbuffers.kotlin.FlexBufferType.compareTo","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flex-buffer-type/compare-to.html","searchKeys":["compareTo","operator fun compareTo(other: FlexBufferType): Int","com.google.flatbuffers.kotlin.FlexBufferType.compareTo"]},{"name":"operator fun contains(key: String): Boolean","description":"com.google.flatbuffers.kotlin.Map.contains","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-map/contains.html","searchKeys":["contains","operator fun contains(key: String): Boolean","com.google.flatbuffers.kotlin.Map.contains"]},{"name":"operator fun get(index: Int): Char","description":"com.google.flatbuffers.kotlin.Key.get","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-key/get.html","searchKeys":["get","operator fun get(index: Int): Char","com.google.flatbuffers.kotlin.Key.get"]},{"name":"operator fun get(index: Int): Reference","description":"com.google.flatbuffers.kotlin.Map.get","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-map/get.html","searchKeys":["get","operator fun get(index: Int): Reference","com.google.flatbuffers.kotlin.Map.get"]},{"name":"operator fun get(index: Int): Reference","description":"com.google.flatbuffers.kotlin.Reference.get","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-reference/get.html","searchKeys":["get","operator fun get(index: Int): Reference","com.google.flatbuffers.kotlin.Reference.get"]},{"name":"operator fun get(key: String): Reference","description":"com.google.flatbuffers.kotlin.Map.get","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-map/get.html","searchKeys":["get","operator fun get(key: String): Reference","com.google.flatbuffers.kotlin.Map.get"]},{"name":"operator fun get(key: String): Reference","description":"com.google.flatbuffers.kotlin.Reference.get","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-reference/get.html","searchKeys":["get","operator fun get(key: String): Reference","com.google.flatbuffers.kotlin.Reference.get"]},{"name":"operator fun get(pos: Int): Byte","description":"com.google.flatbuffers.kotlin.Blob.get","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-blob/get.html","searchKeys":["get","operator fun get(pos: Int): Byte","com.google.flatbuffers.kotlin.Blob.get"]},{"name":"operator fun minus(other: FlexBufferType): FlexBufferType","description":"com.google.flatbuffers.kotlin.FlexBufferType.minus","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flex-buffer-type/minus.html","searchKeys":["minus","operator fun minus(other: FlexBufferType): FlexBufferType","com.google.flatbuffers.kotlin.FlexBufferType.minus"]},{"name":"operator fun plus(other: FlexBufferType): FlexBufferType","description":"com.google.flatbuffers.kotlin.FlexBufferType.plus","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flex-buffer-type/plus.html","searchKeys":["plus","operator fun plus(other: FlexBufferType): FlexBufferType","com.google.flatbuffers.kotlin.FlexBufferType.plus"]},{"name":"operator fun set(key: String? = null, value: Boolean)","description":"com.google.flatbuffers.kotlin.FlexBuffersBuilder.set","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flex-buffers-builder/set.html","searchKeys":["set","operator fun set(key: String? = null, value: Boolean)","com.google.flatbuffers.kotlin.FlexBuffersBuilder.set"]},{"name":"operator fun set(key: String? = null, value: Byte)","description":"com.google.flatbuffers.kotlin.FlexBuffersBuilder.set","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flex-buffers-builder/set.html","searchKeys":["set","operator fun set(key: String? = null, value: Byte)","com.google.flatbuffers.kotlin.FlexBuffersBuilder.set"]},{"name":"operator fun set(key: String? = null, value: ByteArray): Int","description":"com.google.flatbuffers.kotlin.FlexBuffersBuilder.set","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flex-buffers-builder/set.html","searchKeys":["set","operator fun set(key: String? = null, value: ByteArray): Int","com.google.flatbuffers.kotlin.FlexBuffersBuilder.set"]},{"name":"operator fun set(key: String? = null, value: Double)","description":"com.google.flatbuffers.kotlin.FlexBuffersBuilder.set","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flex-buffers-builder/set.html","searchKeys":["set","operator fun set(key: String? = null, value: Double)","com.google.flatbuffers.kotlin.FlexBuffersBuilder.set"]},{"name":"operator fun set(key: String? = null, value: DoubleArray): Int","description":"com.google.flatbuffers.kotlin.FlexBuffersBuilder.set","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flex-buffers-builder/set.html","searchKeys":["set","operator fun set(key: String? = null, value: DoubleArray): Int","com.google.flatbuffers.kotlin.FlexBuffersBuilder.set"]},{"name":"operator fun set(key: String? = null, value: Float)","description":"com.google.flatbuffers.kotlin.FlexBuffersBuilder.set","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flex-buffers-builder/set.html","searchKeys":["set","operator fun set(key: String? = null, value: Float)","com.google.flatbuffers.kotlin.FlexBuffersBuilder.set"]},{"name":"operator fun set(key: String? = null, value: FloatArray): Int","description":"com.google.flatbuffers.kotlin.FlexBuffersBuilder.set","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flex-buffers-builder/set.html","searchKeys":["set","operator fun set(key: String? = null, value: FloatArray): Int","com.google.flatbuffers.kotlin.FlexBuffersBuilder.set"]},{"name":"operator fun set(key: String? = null, value: IntArray): Int","description":"com.google.flatbuffers.kotlin.FlexBuffersBuilder.set","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flex-buffers-builder/set.html","searchKeys":["set","operator fun set(key: String? = null, value: IntArray): Int","com.google.flatbuffers.kotlin.FlexBuffersBuilder.set"]},{"name":"operator fun set(key: String? = null, value: Long)","description":"com.google.flatbuffers.kotlin.FlexBuffersBuilder.set","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flex-buffers-builder/set.html","searchKeys":["set","operator fun set(key: String? = null, value: Long)","com.google.flatbuffers.kotlin.FlexBuffersBuilder.set"]},{"name":"operator fun set(key: String? = null, value: LongArray): Int","description":"com.google.flatbuffers.kotlin.FlexBuffersBuilder.set","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flex-buffers-builder/set.html","searchKeys":["set","operator fun set(key: String? = null, value: LongArray): Int","com.google.flatbuffers.kotlin.FlexBuffersBuilder.set"]},{"name":"operator fun set(key: String? = null, value: ShortArray): Int","description":"com.google.flatbuffers.kotlin.FlexBuffersBuilder.set","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flex-buffers-builder/set.html","searchKeys":["set","operator fun set(key: String? = null, value: ShortArray): Int","com.google.flatbuffers.kotlin.FlexBuffersBuilder.set"]},{"name":"operator fun set(key: String? = null, value: String): Int","description":"com.google.flatbuffers.kotlin.FlexBuffersBuilder.set","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flex-buffers-builder/set.html","searchKeys":["set","operator fun set(key: String? = null, value: String): Int","com.google.flatbuffers.kotlin.FlexBuffersBuilder.set"]},{"name":"operator fun set(key: String? = null, value: UByteArray): Int","description":"com.google.flatbuffers.kotlin.FlexBuffersBuilder.set","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flex-buffers-builder/set.html","searchKeys":["set","operator fun set(key: String? = null, value: UByteArray): Int","com.google.flatbuffers.kotlin.FlexBuffersBuilder.set"]},{"name":"operator fun set(key: String? = null, value: ULong)","description":"com.google.flatbuffers.kotlin.FlexBuffersBuilder.set","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flex-buffers-builder/set.html","searchKeys":["set","operator fun set(key: String? = null, value: ULong)","com.google.flatbuffers.kotlin.FlexBuffersBuilder.set"]},{"name":"operator fun set(key: String? = null, value: ULongArray): Int","description":"com.google.flatbuffers.kotlin.FlexBuffersBuilder.set","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flex-buffers-builder/set.html","searchKeys":["set","operator fun set(key: String? = null, value: ULongArray): Int","com.google.flatbuffers.kotlin.FlexBuffersBuilder.set"]},{"name":"operator fun set(key: String? = null, value: UShortArray): Int","description":"com.google.flatbuffers.kotlin.FlexBuffersBuilder.set","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flex-buffers-builder/set.html","searchKeys":["set","operator fun set(key: String? = null, value: UShortArray): Int","com.google.flatbuffers.kotlin.FlexBuffersBuilder.set"]},{"name":"typealias StringOffsetArray = OffsetArray<String>","description":"com.google.flatbuffers.kotlin.StringOffsetArray","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-string-offset-array/index.html","searchKeys":["StringOffsetArray","typealias StringOffsetArray = OffsetArray<String>","com.google.flatbuffers.kotlin.StringOffsetArray"]},{"name":"typealias UnionOffset = Offset<Any>","description":"com.google.flatbuffers.kotlin.UnionOffset","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-union-offset/index.html","searchKeys":["UnionOffset","typealias UnionOffset = Offset<Any>","com.google.flatbuffers.kotlin.UnionOffset"]},{"name":"typealias UnionOffsetArray = OffsetArray<Any>","description":"com.google.flatbuffers.kotlin.UnionOffsetArray","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-union-offset-array/index.html","searchKeys":["UnionOffsetArray","typealias UnionOffsetArray = OffsetArray<Any>","com.google.flatbuffers.kotlin.UnionOffsetArray"]},{"name":"val <T> T.value: T","description":"com.google.flatbuffers.kotlin.value","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/value.html","searchKeys":["value","val <T> T.value: T","com.google.flatbuffers.kotlin.value"]},{"name":"val buffer: ReadBuffer","description":"com.google.flatbuffers.kotlin.Key.buffer","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-key/buffer.html","searchKeys":["buffer","val buffer: ReadBuffer","com.google.flatbuffers.kotlin.Key.buffer"]},{"name":"val buffer: ReadBuffer","description":"com.google.flatbuffers.kotlin.Sized.buffer","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-sized/buffer.html","searchKeys":["buffer","val buffer: ReadBuffer","com.google.flatbuffers.kotlin.Sized.buffer"]},{"name":"val buffer: ReadWriteBuffer","description":"com.google.flatbuffers.kotlin.FlexBuffersBuilder.buffer","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flex-buffers-builder/buffer.html","searchKeys":["buffer","val buffer: ReadWriteBuffer","com.google.flatbuffers.kotlin.FlexBuffersBuilder.buffer"]},{"name":"val byteWidth: ByteWidth","description":"com.google.flatbuffers.kotlin.Sized.byteWidth","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-sized/byte-width.html","searchKeys":["byteWidth","val byteWidth: ByteWidth","com.google.flatbuffers.kotlin.Sized.byteWidth"]},{"name":"val emptyBuffer: ReadWriteBuffer","description":"com.google.flatbuffers.kotlin.emptyBuffer","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/empty-buffer.html","searchKeys":["emptyBuffer","val emptyBuffer: ReadWriteBuffer","com.google.flatbuffers.kotlin.emptyBuffer"]},{"name":"val end: Int","description":"com.google.flatbuffers.kotlin.Key.end","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-key/end.html","searchKeys":["end","val end: Int","com.google.flatbuffers.kotlin.Key.end"]},{"name":"val end: Int","description":"com.google.flatbuffers.kotlin.Sized.end","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-sized/end.html","searchKeys":["end","val end: Int","com.google.flatbuffers.kotlin.Sized.end"]},{"name":"val isBlob: Boolean","description":"com.google.flatbuffers.kotlin.Reference.isBlob","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-reference/is-blob.html","searchKeys":["isBlob","val isBlob: Boolean","com.google.flatbuffers.kotlin.Reference.isBlob"]},{"name":"val isBoolean: Boolean","description":"com.google.flatbuffers.kotlin.Reference.isBoolean","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-reference/is-boolean.html","searchKeys":["isBoolean","val isBoolean: Boolean","com.google.flatbuffers.kotlin.Reference.isBoolean"]},{"name":"val isFloat: Boolean","description":"com.google.flatbuffers.kotlin.Reference.isFloat","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-reference/is-float.html","searchKeys":["isFloat","val isFloat: Boolean","com.google.flatbuffers.kotlin.Reference.isFloat"]},{"name":"val isInt: Boolean","description":"com.google.flatbuffers.kotlin.Reference.isInt","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-reference/is-int.html","searchKeys":["isInt","val isInt: Boolean","com.google.flatbuffers.kotlin.Reference.isInt"]},{"name":"val isIntOrUInt: Boolean","description":"com.google.flatbuffers.kotlin.Reference.isIntOrUInt","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-reference/is-int-or-u-int.html","searchKeys":["isIntOrUInt","val isIntOrUInt: Boolean","com.google.flatbuffers.kotlin.Reference.isIntOrUInt"]},{"name":"val isKey: Boolean","description":"com.google.flatbuffers.kotlin.Reference.isKey","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-reference/is-key.html","searchKeys":["isKey","val isKey: Boolean","com.google.flatbuffers.kotlin.Reference.isKey"]},{"name":"val isMap: Boolean","description":"com.google.flatbuffers.kotlin.Reference.isMap","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-reference/is-map.html","searchKeys":["isMap","val isMap: Boolean","com.google.flatbuffers.kotlin.Reference.isMap"]},{"name":"val isNull: Boolean","description":"com.google.flatbuffers.kotlin.Reference.isNull","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-reference/is-null.html","searchKeys":["isNull","val isNull: Boolean","com.google.flatbuffers.kotlin.Reference.isNull"]},{"name":"val isNumeric: Boolean","description":"com.google.flatbuffers.kotlin.Reference.isNumeric","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-reference/is-numeric.html","searchKeys":["isNumeric","val isNumeric: Boolean","com.google.flatbuffers.kotlin.Reference.isNumeric"]},{"name":"val isString: Boolean","description":"com.google.flatbuffers.kotlin.Reference.isString","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-reference/is-string.html","searchKeys":["isString","val isString: Boolean","com.google.flatbuffers.kotlin.Reference.isString"]},{"name":"val isTypedVector: Boolean","description":"com.google.flatbuffers.kotlin.Reference.isTypedVector","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-reference/is-typed-vector.html","searchKeys":["isTypedVector","val isTypedVector: Boolean","com.google.flatbuffers.kotlin.Reference.isTypedVector"]},{"name":"val isUInt: Boolean","description":"com.google.flatbuffers.kotlin.Reference.isUInt","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-reference/is-u-int.html","searchKeys":["isUInt","val isUInt: Boolean","com.google.flatbuffers.kotlin.Reference.isUInt"]},{"name":"val isVector: Boolean","description":"com.google.flatbuffers.kotlin.Reference.isVector","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-reference/is-vector.html","searchKeys":["isVector","val isVector: Boolean","com.google.flatbuffers.kotlin.Reference.isVector"]},{"name":"val size: Int","description":"com.google.flatbuffers.kotlin.OffsetArray.size","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-offset-array/size.html","searchKeys":["size","val size: Int","com.google.flatbuffers.kotlin.OffsetArray.size"]},{"name":"val sizeInBytes: Int","description":"com.google.flatbuffers.kotlin.Key.sizeInBytes","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-key/size-in-bytes.html","searchKeys":["sizeInBytes","val sizeInBytes: Int","com.google.flatbuffers.kotlin.Key.sizeInBytes"]},{"name":"val sizeInChars: Int","description":"com.google.flatbuffers.kotlin.Key.sizeInChars","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-key/size-in-chars.html","searchKeys":["sizeInChars","val sizeInChars: Int","com.google.flatbuffers.kotlin.Key.sizeInChars"]},{"name":"val start: Int","description":"com.google.flatbuffers.kotlin.Key.start","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-key/start.html","searchKeys":["start","val start: Int","com.google.flatbuffers.kotlin.Key.start"]},{"name":"val type: FlexBufferType","description":"com.google.flatbuffers.kotlin.Reference.type","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-reference/type.html","searchKeys":["type","val type: FlexBufferType","com.google.flatbuffers.kotlin.Reference.type"]},{"name":"val value: Int","description":"com.google.flatbuffers.kotlin.BitWidth.value","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-bit-width/value.html","searchKeys":["value","val value: Int","com.google.flatbuffers.kotlin.BitWidth.value"]},{"name":"val value: Int","description":"com.google.flatbuffers.kotlin.ByteWidth.value","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-byte-width/value.html","searchKeys":["value","val value: Int","com.google.flatbuffers.kotlin.ByteWidth.value"]},{"name":"val value: Int","description":"com.google.flatbuffers.kotlin.FlexBufferType.value","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flex-buffer-type/value.html","searchKeys":["value","val value: Int","com.google.flatbuffers.kotlin.FlexBufferType.value"]},{"name":"val value: Int","description":"com.google.flatbuffers.kotlin.Offset.value","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-offset/value.html","searchKeys":["value","val value: Int","com.google.flatbuffers.kotlin.Offset.value"]},{"name":"val value: Int","description":"com.google.flatbuffers.kotlin.VectorOffset.value","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-vector-offset/value.html","searchKeys":["value","val value: Int","com.google.flatbuffers.kotlin.VectorOffset.value"]},{"name":"val value: IntArray","description":"com.google.flatbuffers.kotlin.OffsetArray.value","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-offset-array/value.html","searchKeys":["value","val value: IntArray","com.google.flatbuffers.kotlin.OffsetArray.value"]},{"name":"value class BitWidth(val value: Int)","description":"com.google.flatbuffers.kotlin.BitWidth","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-bit-width/index.html","searchKeys":["BitWidth","value class BitWidth(val value: Int)","com.google.flatbuffers.kotlin.BitWidth"]},{"name":"value class ByteWidth(val value: Int)","description":"com.google.flatbuffers.kotlin.ByteWidth","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-byte-width/index.html","searchKeys":["ByteWidth","value class ByteWidth(val value: Int)","com.google.flatbuffers.kotlin.ByteWidth"]},{"name":"value class FlexBufferType(val value: Int)","description":"com.google.flatbuffers.kotlin.FlexBufferType","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-flex-buffer-type/index.html","searchKeys":["FlexBufferType","value class FlexBufferType(val value: Int)","com.google.flatbuffers.kotlin.FlexBufferType"]},{"name":"value class Offset<T>(val value: Int)","description":"com.google.flatbuffers.kotlin.Offset","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-offset/index.html","searchKeys":["Offset","value class Offset<T>(val value: Int)","com.google.flatbuffers.kotlin.Offset"]},{"name":"value class OffsetArray<T>(val value: IntArray)","description":"com.google.flatbuffers.kotlin.OffsetArray","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-offset-array/index.html","searchKeys":["OffsetArray","value class OffsetArray<T>(val value: IntArray)","com.google.flatbuffers.kotlin.OffsetArray"]},{"name":"value class VectorOffset<T>(val value: Int)","description":"com.google.flatbuffers.kotlin.VectorOffset","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-vector-offset/index.html","searchKeys":["VectorOffset","value class VectorOffset<T>(val value: Int)","com.google.flatbuffers.kotlin.VectorOffset"]},{"name":"var bb: ReadWriteBuffer","description":"com.google.flatbuffers.kotlin.Table.bb","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-table/bb.html","searchKeys":["bb","var bb: ReadWriteBuffer","com.google.flatbuffers.kotlin.Table.bb"]},{"name":"var bufferPos: Int","description":"com.google.flatbuffers.kotlin.Table.bufferPos","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-table/buffer-pos.html","searchKeys":["bufferPos","var bufferPos: Int","com.google.flatbuffers.kotlin.Table.bufferPos"]},{"name":"var output: FlexBuffersBuilder","description":"com.google.flatbuffers.kotlin.JSONParser.output","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-j-s-o-n-parser/output.html","searchKeys":["output","var output: FlexBuffersBuilder","com.google.flatbuffers.kotlin.JSONParser.output"]},{"name":"var vtableSize: Int","description":"com.google.flatbuffers.kotlin.Table.vtableSize","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-table/vtable-size.html","searchKeys":["vtableSize","var vtableSize: Int","com.google.flatbuffers.kotlin.Table.vtableSize"]},{"name":"var vtableStart: Int","description":"com.google.flatbuffers.kotlin.Table.vtableStart","location":"flatbuffers-kotlin/com.google.flatbuffers.kotlin/-table/vtable-start.html","searchKeys":["vtableStart","var vtableStart: Int","com.google.flatbuffers.kotlin.Table.vtableStart"]},{"name":"abstract class KeyValueStore<Controller>(controller: Controller, val name: String) : Adapter<Controller> ","description":"dev.shibasis.reaktor.io.adapters.KeyValueStore","location":"reaktor-db/dev.shibasis.reaktor.io.adapters/-key-value-store/index.html","searchKeys":["KeyValueStore","abstract class KeyValueStore<Controller>(controller: Controller, val name: String) : Adapter<Controller> ","dev.shibasis.reaktor.io.adapters.KeyValueStore"]},{"name":"abstract suspend fun clear()","description":"dev.shibasis.reaktor.io.adapters.KeyValueStore.clear","location":"reaktor-db/dev.shibasis.reaktor.io.adapters/-key-value-store/clear.html","searchKeys":["clear","abstract suspend fun clear()","dev.shibasis.reaktor.io.adapters.KeyValueStore.clear"]},{"name":"abstract suspend fun get(key: String): String?","description":"dev.shibasis.reaktor.io.adapters.KeyValueStore.get","location":"reaktor-db/dev.shibasis.reaktor.io.adapters/-key-value-store/get.html","searchKeys":["get","abstract suspend fun get(key: String): String?","dev.shibasis.reaktor.io.adapters.KeyValueStore.get"]},{"name":"abstract suspend fun remove(key: String)","description":"dev.shibasis.reaktor.io.adapters.KeyValueStore.remove","location":"reaktor-db/dev.shibasis.reaktor.io.adapters/-key-value-store/remove.html","searchKeys":["remove","abstract suspend fun remove(key: String)","dev.shibasis.reaktor.io.adapters.KeyValueStore.remove"]},{"name":"abstract suspend fun set(key: String, value: String)","description":"dev.shibasis.reaktor.io.adapters.KeyValueStore.set","location":"reaktor-db/dev.shibasis.reaktor.io.adapters/-key-value-store/set.html","searchKeys":["set","abstract suspend fun set(key: String, value: String)","dev.shibasis.reaktor.io.adapters.KeyValueStore.set"]},{"name":"class JetpackKeyValueStore<Controller>(controller: Controller, name: String, fileAdapter: FileAdapter<*>) : KeyValueStore<Controller> ","description":"dev.shibasis.reaktor.io.adapters.JetpackKeyValueStore","location":"reaktor-db/dev.shibasis.reaktor.io.adapters/[android]-jetpack-key-value-store/index.html","searchKeys":["JetpackKeyValueStore","class JetpackKeyValueStore<Controller>(controller: Controller, name: String, fileAdapter: FileAdapter<*>) : KeyValueStore<Controller> ","dev.shibasis.reaktor.io.adapters.JetpackKeyValueStore"]},{"name":"class JetpackKeyValueStore<Controller>(controller: Controller, name: String, fileAdapter: FileAdapter<*>) : KeyValueStore<Controller> ","description":"dev.shibasis.reaktor.io.adapters.JetpackKeyValueStore","location":"reaktor-db/dev.shibasis.reaktor.io.adapters/[ios]-jetpack-key-value-store/index.html","searchKeys":["JetpackKeyValueStore","class JetpackKeyValueStore<Controller>(controller: Controller, name: String, fileAdapter: FileAdapter<*>) : KeyValueStore<Controller> ","dev.shibasis.reaktor.io.adapters.JetpackKeyValueStore"]},{"name":"class SQLAdapter","description":"dev.shibasis.reaktor.io.adapters.SQLAdapter","location":"reaktor-db/dev.shibasis.reaktor.io.adapters/-s-q-l-adapter/index.html","searchKeys":["SQLAdapter","class SQLAdapter","dev.shibasis.reaktor.io.adapters.SQLAdapter"]},{"name":"constructor()","description":"dev.shibasis.reaktor.io.adapters.SQLAdapter.SQLAdapter","location":"reaktor-db/dev.shibasis.reaktor.io.adapters/-s-q-l-adapter/-s-q-l-adapter.html","searchKeys":["SQLAdapter","constructor()","dev.shibasis.reaktor.io.adapters.SQLAdapter.SQLAdapter"]},{"name":"constructor(controller: Controller, name: String)","description":"dev.shibasis.reaktor.io.adapters.KeyValueStore.KeyValueStore","location":"reaktor-db/dev.shibasis.reaktor.io.adapters/-key-value-store/-key-value-store.html","searchKeys":["KeyValueStore","constructor(controller: Controller, name: String)","dev.shibasis.reaktor.io.adapters.KeyValueStore.KeyValueStore"]},{"name":"constructor(controller: Controller, name: String, fileAdapter: FileAdapter<*>)","description":"dev.shibasis.reaktor.io.adapters.JetpackKeyValueStore.JetpackKeyValueStore","location":"reaktor-db/dev.shibasis.reaktor.io.adapters/[android]-jetpack-key-value-store/-jetpack-key-value-store.html","searchKeys":["JetpackKeyValueStore","constructor(controller: Controller, name: String, fileAdapter: FileAdapter<*>)","dev.shibasis.reaktor.io.adapters.JetpackKeyValueStore.JetpackKeyValueStore"]},{"name":"constructor(controller: Controller, name: String, fileAdapter: FileAdapter<*>)","description":"dev.shibasis.reaktor.io.adapters.JetpackKeyValueStore.JetpackKeyValueStore","location":"reaktor-db/dev.shibasis.reaktor.io.adapters/[ios]-jetpack-key-value-store/-jetpack-key-value-store.html","searchKeys":["JetpackKeyValueStore","constructor(controller: Controller, name: String, fileAdapter: FileAdapter<*>)","dev.shibasis.reaktor.io.adapters.JetpackKeyValueStore.JetpackKeyValueStore"]},{"name":"interface BlockingStore","description":"dev.shibasis.reaktor.io.adapters.KeyValueStore.BlockingStore","location":"reaktor-db/dev.shibasis.reaktor.io.adapters/-key-value-store/-blocking-store/index.html","searchKeys":["BlockingStore","interface BlockingStore","dev.shibasis.reaktor.io.adapters.KeyValueStore.BlockingStore"]},{"name":"interface EncryptedStore","description":"dev.shibasis.reaktor.io.adapters.KeyValueStore.EncryptedStore","location":"reaktor-db/dev.shibasis.reaktor.io.adapters/-key-value-store/-encrypted-store/index.html","searchKeys":["EncryptedStore","interface EncryptedStore","dev.shibasis.reaktor.io.adapters.KeyValueStore.EncryptedStore"]},{"name":"interface TypedStore","description":"dev.shibasis.reaktor.io.adapters.KeyValueStore.TypedStore","location":"reaktor-db/dev.shibasis.reaktor.io.adapters/-key-value-store/-typed-store/index.html","searchKeys":["TypedStore","interface TypedStore","dev.shibasis.reaktor.io.adapters.KeyValueStore.TypedStore"]},{"name":"open suspend override fun clear()","description":"dev.shibasis.reaktor.io.adapters.JetpackKeyValueStore.clear","location":"reaktor-db/dev.shibasis.reaktor.io.adapters/[android]-jetpack-key-value-store/clear.html","searchKeys":["clear","open suspend override fun clear()","dev.shibasis.reaktor.io.adapters.JetpackKeyValueStore.clear"]},{"name":"open suspend override fun clear()","description":"dev.shibasis.reaktor.io.adapters.JetpackKeyValueStore.clear","location":"reaktor-db/dev.shibasis.reaktor.io.adapters/[ios]-jetpack-key-value-store/clear.html","searchKeys":["clear","open suspend override fun clear()","dev.shibasis.reaktor.io.adapters.JetpackKeyValueStore.clear"]},{"name":"open suspend override fun get(key: String): String?","description":"dev.shibasis.reaktor.io.adapters.JetpackKeyValueStore.get","location":"reaktor-db/dev.shibasis.reaktor.io.adapters/[android]-jetpack-key-value-store/get.html","searchKeys":["get","open suspend override fun get(key: String): String?","dev.shibasis.reaktor.io.adapters.JetpackKeyValueStore.get"]},{"name":"open suspend override fun get(key: String): String?","description":"dev.shibasis.reaktor.io.adapters.JetpackKeyValueStore.get","location":"reaktor-db/dev.shibasis.reaktor.io.adapters/[ios]-jetpack-key-value-store/get.html","searchKeys":["get","open suspend override fun get(key: String): String?","dev.shibasis.reaktor.io.adapters.JetpackKeyValueStore.get"]},{"name":"open suspend override fun remove(key: String)","description":"dev.shibasis.reaktor.io.adapters.JetpackKeyValueStore.remove","location":"reaktor-db/dev.shibasis.reaktor.io.adapters/[android]-jetpack-key-value-store/remove.html","searchKeys":["remove","open suspend override fun remove(key: String)","dev.shibasis.reaktor.io.adapters.JetpackKeyValueStore.remove"]},{"name":"open suspend override fun remove(key: String)","description":"dev.shibasis.reaktor.io.adapters.JetpackKeyValueStore.remove","location":"reaktor-db/dev.shibasis.reaktor.io.adapters/[ios]-jetpack-key-value-store/remove.html","searchKeys":["remove","open suspend override fun remove(key: String)","dev.shibasis.reaktor.io.adapters.JetpackKeyValueStore.remove"]},{"name":"open suspend override fun set(key: String, value: String)","description":"dev.shibasis.reaktor.io.adapters.JetpackKeyValueStore.set","location":"reaktor-db/dev.shibasis.reaktor.io.adapters/[android]-jetpack-key-value-store/set.html","searchKeys":["set","open suspend override fun set(key: String, value: String)","dev.shibasis.reaktor.io.adapters.JetpackKeyValueStore.set"]},{"name":"open suspend override fun set(key: String, value: String)","description":"dev.shibasis.reaktor.io.adapters.JetpackKeyValueStore.set","location":"reaktor-db/dev.shibasis.reaktor.io.adapters/[ios]-jetpack-key-value-store/set.html","searchKeys":["set","open suspend override fun set(key: String, value: String)","dev.shibasis.reaktor.io.adapters.JetpackKeyValueStore.set"]},{"name":"val dataStore: DataStore<Preferences>","description":"dev.shibasis.reaktor.io.adapters.JetpackKeyValueStore.dataStore","location":"reaktor-db/dev.shibasis.reaktor.io.adapters/[android]-jetpack-key-value-store/data-store.html","searchKeys":["dataStore","val dataStore: DataStore<Preferences>","dev.shibasis.reaktor.io.adapters.JetpackKeyValueStore.dataStore"]},{"name":"val dataStore: DataStore<Preferences>","description":"dev.shibasis.reaktor.io.adapters.JetpackKeyValueStore.dataStore","location":"reaktor-db/dev.shibasis.reaktor.io.adapters/[ios]-jetpack-key-value-store/data-store.html","searchKeys":["dataStore","val dataStore: DataStore<Preferences>","dev.shibasis.reaktor.io.adapters.JetpackKeyValueStore.dataStore"]},{"name":"val name: String","description":"dev.shibasis.reaktor.io.adapters.KeyValueStore.name","location":"reaktor-db/dev.shibasis.reaktor.io.adapters/-key-value-store/name.html","searchKeys":["name","val name: String","dev.shibasis.reaktor.io.adapters.KeyValueStore.name"]},{"name":"var Feature.KeyValueStore: KeyValueStore<*>?","description":"dev.shibasis.reaktor.io.adapters.KeyValueStore","location":"reaktor-db/dev.shibasis.reaktor.io.adapters/-key-value-store.html","searchKeys":["KeyValueStore","var Feature.KeyValueStore: KeyValueStore<*>?","dev.shibasis.reaktor.io.adapters.KeyValueStore"]},{"name":"ACCEPTED","description":"dev.shibasis.reaktor.core.network.StatusCode.ACCEPTED","location":"reaktor-core/dev.shibasis.reaktor.core.network/-status-code/-a-c-c-e-p-t-e-d/index.html","searchKeys":["ACCEPTED","ACCEPTED","dev.shibasis.reaktor.core.network.StatusCode.ACCEPTED"]},{"name":"ALREADY_REPORTED","description":"dev.shibasis.reaktor.core.network.StatusCode.ALREADY_REPORTED","location":"reaktor-core/dev.shibasis.reaktor.core.network/-status-code/-a-l-r-e-a-d-y_-r-e-p-o-r-t-e-d/index.html","searchKeys":["ALREADY_REPORTED","ALREADY_REPORTED","dev.shibasis.reaktor.core.network.StatusCode.ALREADY_REPORTED"]},{"name":"ANDROID","description":"dev.shibasis.reaktor.core.framework.PlatformType.ANDROID","location":"reaktor-core/dev.shibasis.reaktor.core.framework/-platform-type/-a-n-d-r-o-i-d/index.html","searchKeys":["ANDROID","ANDROID","dev.shibasis.reaktor.core.framework.PlatformType.ANDROID"]},{"name":"BAD_GATEWAY","description":"dev.shibasis.reaktor.core.network.StatusCode.BAD_GATEWAY","location":"reaktor-core/dev.shibasis.reaktor.core.network/-status-code/-b-a-d_-g-a-t-e-w-a-y/index.html","searchKeys":["BAD_GATEWAY","BAD_GATEWAY","dev.shibasis.reaktor.core.network.StatusCode.BAD_GATEWAY"]},{"name":"BAD_REQUEST","description":"dev.shibasis.reaktor.core.network.StatusCode.BAD_REQUEST","location":"reaktor-core/dev.shibasis.reaktor.core.network/-status-code/-b-a-d_-r-e-q-u-e-s-t/index.html","searchKeys":["BAD_REQUEST","BAD_REQUEST","dev.shibasis.reaktor.core.network.StatusCode.BAD_REQUEST"]},{"name":"CONFLICT","description":"dev.shibasis.reaktor.core.network.StatusCode.CONFLICT","location":"reaktor-core/dev.shibasis.reaktor.core.network/-status-code/-c-o-n-f-l-i-c-t/index.html","searchKeys":["CONFLICT","CONFLICT","dev.shibasis.reaktor.core.network.StatusCode.CONFLICT"]},{"name":"CONTINUE","description":"dev.shibasis.reaktor.core.network.StatusCode.CONTINUE","location":"reaktor-core/dev.shibasis.reaktor.core.network/-status-code/-c-o-n-t-i-n-u-e/index.html","searchKeys":["CONTINUE","CONTINUE","dev.shibasis.reaktor.core.network.StatusCode.CONTINUE"]},{"name":"CREATED","description":"dev.shibasis.reaktor.core.network.StatusCode.CREATED","location":"reaktor-core/dev.shibasis.reaktor.core.network/-status-code/-c-r-e-a-t-e-d/index.html","searchKeys":["CREATED","CREATED","dev.shibasis.reaktor.core.network.StatusCode.CREATED"]},{"name":"DARWIN","description":"dev.shibasis.reaktor.core.framework.PlatformType.DARWIN","location":"reaktor-core/dev.shibasis.reaktor.core.framework/-platform-type/-d-a-r-w-i-n/index.html","searchKeys":["DARWIN","DARWIN","dev.shibasis.reaktor.core.framework.PlatformType.DARWIN"]},{"name":"EXPECTATION_FAILED","description":"dev.shibasis.reaktor.core.network.StatusCode.EXPECTATION_FAILED","location":"reaktor-core/dev.shibasis.reaktor.core.network/-status-code/-e-x-p-e-c-t-a-t-i-o-n_-f-a-i-l-e-d/index.html","searchKeys":["EXPECTATION_FAILED","EXPECTATION_FAILED","dev.shibasis.reaktor.core.network.StatusCode.EXPECTATION_FAILED"]},{"name":"FAILED_DEPENDENCY","description":"dev.shibasis.reaktor.core.network.StatusCode.FAILED_DEPENDENCY","location":"reaktor-core/dev.shibasis.reaktor.core.network/-status-code/-f-a-i-l-e-d_-d-e-p-e-n-d-e-n-c-y/index.html","searchKeys":["FAILED_DEPENDENCY","FAILED_DEPENDENCY","dev.shibasis.reaktor.core.network.StatusCode.FAILED_DEPENDENCY"]},{"name":"FORBIDDEN","description":"dev.shibasis.reaktor.core.network.StatusCode.FORBIDDEN","location":"reaktor-core/dev.shibasis.reaktor.core.network/-status-code/-f-o-r-b-i-d-d-e-n/index.html","searchKeys":["FORBIDDEN","FORBIDDEN","dev.shibasis.reaktor.core.network.StatusCode.FORBIDDEN"]},{"name":"FOUND","description":"dev.shibasis.reaktor.core.network.StatusCode.FOUND","location":"reaktor-core/dev.shibasis.reaktor.core.network/-status-code/-f-o-u-n-d/index.html","searchKeys":["FOUND","FOUND","dev.shibasis.reaktor.core.network.StatusCode.FOUND"]},{"name":"GATEWAY_TIMEOUT","description":"dev.shibasis.reaktor.core.network.StatusCode.GATEWAY_TIMEOUT","location":"reaktor-core/dev.shibasis.reaktor.core.network/-status-code/-g-a-t-e-w-a-y_-t-i-m-e-o-u-t/index.html","searchKeys":["GATEWAY_TIMEOUT","GATEWAY_TIMEOUT","dev.shibasis.reaktor.core.network.StatusCode.GATEWAY_TIMEOUT"]},{"name":"GONE","description":"dev.shibasis.reaktor.core.network.StatusCode.GONE","location":"reaktor-core/dev.shibasis.reaktor.core.network/-status-code/-g-o-n-e/index.html","searchKeys":["GONE","GONE","dev.shibasis.reaktor.core.network.StatusCode.GONE"]},{"name":"HTTP_VERSION_NOT_SUPPORTED","description":"dev.shibasis.reaktor.core.network.StatusCode.HTTP_VERSION_NOT_SUPPORTED","location":"reaktor-core/dev.shibasis.reaktor.core.network/-status-code/-h-t-t-p_-v-e-r-s-i-o-n_-n-o-t_-s-u-p-p-o-r-t-e-d/index.html","searchKeys":["HTTP_VERSION_NOT_SUPPORTED","HTTP_VERSION_NOT_SUPPORTED","dev.shibasis.reaktor.core.network.StatusCode.HTTP_VERSION_NOT_SUPPORTED"]},{"name":"IM_A_TEAPOT","description":"dev.shibasis.reaktor.core.network.StatusCode.IM_A_TEAPOT","location":"reaktor-core/dev.shibasis.reaktor.core.network/-status-code/-i-m_-a_-t-e-a-p-o-t/index.html","searchKeys":["IM_A_TEAPOT","IM_A_TEAPOT","dev.shibasis.reaktor.core.network.StatusCode.IM_A_TEAPOT"]},{"name":"IM_USED","description":"dev.shibasis.reaktor.core.network.StatusCode.IM_USED","location":"reaktor-core/dev.shibasis.reaktor.core.network/-status-code/-i-m_-u-s-e-d/index.html","searchKeys":["IM_USED","IM_USED","dev.shibasis.reaktor.core.network.StatusCode.IM_USED"]},{"name":"INSUFFICIENT_STORAGE","description":"dev.shibasis.reaktor.core.network.StatusCode.INSUFFICIENT_STORAGE","location":"reaktor-core/dev.shibasis.reaktor.core.network/-status-code/-i-n-s-u-f-f-i-c-i-e-n-t_-s-t-o-r-a-g-e/index.html","searchKeys":["INSUFFICIENT_STORAGE","INSUFFICIENT_STORAGE","dev.shibasis.reaktor.core.network.StatusCode.INSUFFICIENT_STORAGE"]},{"name":"INTERNAL_SERVER_ERROR","description":"dev.shibasis.reaktor.core.network.StatusCode.INTERNAL_SERVER_ERROR","location":"reaktor-core/dev.shibasis.reaktor.core.network/-status-code/-i-n-t-e-r-n-a-l_-s-e-r-v-e-r_-e-r-r-o-r/index.html","searchKeys":["INTERNAL_SERVER_ERROR","INTERNAL_SERVER_ERROR","dev.shibasis.reaktor.core.network.StatusCode.INTERNAL_SERVER_ERROR"]},{"name":"JVM","description":"dev.shibasis.reaktor.core.framework.PlatformType.JVM","location":"reaktor-core/dev.shibasis.reaktor.core.framework/-platform-type/-j-v-m/index.html","searchKeys":["JVM","JVM","dev.shibasis.reaktor.core.framework.PlatformType.JVM"]},{"name":"LENGTH_REQUIRED","description":"dev.shibasis.reaktor.core.network.StatusCode.LENGTH_REQUIRED","location":"reaktor-core/dev.shibasis.reaktor.core.network/-status-code/-l-e-n-g-t-h_-r-e-q-u-i-r-e-d/index.html","searchKeys":["LENGTH_REQUIRED","LENGTH_REQUIRED","dev.shibasis.reaktor.core.network.StatusCode.LENGTH_REQUIRED"]},{"name":"LOCKED","description":"dev.shibasis.reaktor.core.network.StatusCode.LOCKED","location":"reaktor-core/dev.shibasis.reaktor.core.network/-status-code/-l-o-c-k-e-d/index.html","searchKeys":["LOCKED","LOCKED","dev.shibasis.reaktor.core.network.StatusCode.LOCKED"]},{"name":"LOOP_DETECTED","description":"dev.shibasis.reaktor.core.network.StatusCode.LOOP_DETECTED","location":"reaktor-core/dev.shibasis.reaktor.core.network/-status-code/-l-o-o-p_-d-e-t-e-c-t-e-d/index.html","searchKeys":["LOOP_DETECTED","LOOP_DETECTED","dev.shibasis.reaktor.core.network.StatusCode.LOOP_DETECTED"]},{"name":"METHOD_NOT_ALLOWED","description":"dev.shibasis.reaktor.core.network.StatusCode.METHOD_NOT_ALLOWED","location":"reaktor-core/dev.shibasis.reaktor.core.network/-status-code/-m-e-t-h-o-d_-n-o-t_-a-l-l-o-w-e-d/index.html","searchKeys":["METHOD_NOT_ALLOWED","METHOD_NOT_ALLOWED","dev.shibasis.reaktor.core.network.StatusCode.METHOD_NOT_ALLOWED"]},{"name":"MISDIRECTED_REQUEST","description":"dev.shibasis.reaktor.core.network.StatusCode.MISDIRECTED_REQUEST","location":"reaktor-core/dev.shibasis.reaktor.core.network/-status-code/-m-i-s-d-i-r-e-c-t-e-d_-r-e-q-u-e-s-t/index.html","searchKeys":["MISDIRECTED_REQUEST","MISDIRECTED_REQUEST","dev.shibasis.reaktor.core.network.StatusCode.MISDIRECTED_REQUEST"]},{"name":"MOVED_PERMANENTLY","description":"dev.shibasis.reaktor.core.network.StatusCode.MOVED_PERMANENTLY","location":"reaktor-core/dev.shibasis.reaktor.core.network/-status-code/-m-o-v-e-d_-p-e-r-m-a-n-e-n-t-l-y/index.html","searchKeys":["MOVED_PERMANENTLY","MOVED_PERMANENTLY","dev.shibasis.reaktor.core.network.StatusCode.MOVED_PERMANENTLY"]},{"name":"MULTIPLE_CHOICES","description":"dev.shibasis.reaktor.core.network.StatusCode.MULTIPLE_CHOICES","location":"reaktor-core/dev.shibasis.reaktor.core.network/-status-code/-m-u-l-t-i-p-l-e_-c-h-o-i-c-e-s/index.html","searchKeys":["MULTIPLE_CHOICES","MULTIPLE_CHOICES","dev.shibasis.reaktor.core.network.StatusCode.MULTIPLE_CHOICES"]},{"name":"MULTI_STATUS","description":"dev.shibasis.reaktor.core.network.StatusCode.MULTI_STATUS","location":"reaktor-core/dev.shibasis.reaktor.core.network/-status-code/-m-u-l-t-i_-s-t-a-t-u-s/index.html","searchKeys":["MULTI_STATUS","MULTI_STATUS","dev.shibasis.reaktor.core.network.StatusCode.MULTI_STATUS"]},{"name":"NETWORK_AUTHENTICATION_REQUIRED","description":"dev.shibasis.reaktor.core.network.StatusCode.NETWORK_AUTHENTICATION_REQUIRED","location":"reaktor-core/dev.shibasis.reaktor.core.network/-status-code/-n-e-t-w-o-r-k_-a-u-t-h-e-n-t-i-c-a-t-i-o-n_-r-e-q-u-i-r-e-d/index.html","searchKeys":["NETWORK_AUTHENTICATION_REQUIRED","NETWORK_AUTHENTICATION_REQUIRED","dev.shibasis.reaktor.core.network.StatusCode.NETWORK_AUTHENTICATION_REQUIRED"]},{"name":"NON_AUTHORITATIVE_INFORMATION","description":"dev.shibasis.reaktor.core.network.StatusCode.NON_AUTHORITATIVE_INFORMATION","location":"reaktor-core/dev.shibasis.reaktor.core.network/-status-code/-n-o-n_-a-u-t-h-o-r-i-t-a-t-i-v-e_-i-n-f-o-r-m-a-t-i-o-n/index.html","searchKeys":["NON_AUTHORITATIVE_INFORMATION","NON_AUTHORITATIVE_INFORMATION","dev.shibasis.reaktor.core.network.StatusCode.NON_AUTHORITATIVE_INFORMATION"]},{"name":"NOT_ACCEPTABLE","description":"dev.shibasis.reaktor.core.network.StatusCode.NOT_ACCEPTABLE","location":"reaktor-core/dev.shibasis.reaktor.core.network/-status-code/-n-o-t_-a-c-c-e-p-t-a-b-l-e/index.html","searchKeys":["NOT_ACCEPTABLE","NOT_ACCEPTABLE","dev.shibasis.reaktor.core.network.StatusCode.NOT_ACCEPTABLE"]},{"name":"NOT_EXTENDED","description":"dev.shibasis.reaktor.core.network.StatusCode.NOT_EXTENDED","location":"reaktor-core/dev.shibasis.reaktor.core.network/-status-code/-n-o-t_-e-x-t-e-n-d-e-d/index.html","searchKeys":["NOT_EXTENDED","NOT_EXTENDED","dev.shibasis.reaktor.core.network.StatusCode.NOT_EXTENDED"]},{"name":"NOT_FOUND","description":"dev.shibasis.reaktor.core.network.StatusCode.NOT_FOUND","location":"reaktor-core/dev.shibasis.reaktor.core.network/-status-code/-n-o-t_-f-o-u-n-d/index.html","searchKeys":["NOT_FOUND","NOT_FOUND","dev.shibasis.reaktor.core.network.StatusCode.NOT_FOUND"]},{"name":"NOT_IMPLEMENTED","description":"dev.shibasis.reaktor.core.network.StatusCode.NOT_IMPLEMENTED","location":"reaktor-core/dev.shibasis.reaktor.core.network/-status-code/-n-o-t_-i-m-p-l-e-m-e-n-t-e-d/index.html","searchKeys":["NOT_IMPLEMENTED","NOT_IMPLEMENTED","dev.shibasis.reaktor.core.network.StatusCode.NOT_IMPLEMENTED"]},{"name":"NOT_MODIFIED","description":"dev.shibasis.reaktor.core.network.StatusCode.NOT_MODIFIED","location":"reaktor-core/dev.shibasis.reaktor.core.network/-status-code/-n-o-t_-m-o-d-i-f-i-e-d/index.html","searchKeys":["NOT_MODIFIED","NOT_MODIFIED","dev.shibasis.reaktor.core.network.StatusCode.NOT_MODIFIED"]},{"name":"NO_CONTENT","description":"dev.shibasis.reaktor.core.network.StatusCode.NO_CONTENT","location":"reaktor-core/dev.shibasis.reaktor.core.network/-status-code/-n-o_-c-o-n-t-e-n-t/index.html","searchKeys":["NO_CONTENT","NO_CONTENT","dev.shibasis.reaktor.core.network.StatusCode.NO_CONTENT"]},{"name":"OK","description":"dev.shibasis.reaktor.core.network.StatusCode.OK","location":"reaktor-core/dev.shibasis.reaktor.core.network/-status-code/-o-k/index.html","searchKeys":["OK","OK","dev.shibasis.reaktor.core.network.StatusCode.OK"]},{"name":"PARTIAL_CONTENT","description":"dev.shibasis.reaktor.core.network.StatusCode.PARTIAL_CONTENT","location":"reaktor-core/dev.shibasis.reaktor.core.network/-status-code/-p-a-r-t-i-a-l_-c-o-n-t-e-n-t/index.html","searchKeys":["PARTIAL_CONTENT","PARTIAL_CONTENT","dev.shibasis.reaktor.core.network.StatusCode.PARTIAL_CONTENT"]},{"name":"PAYLOAD_TOO_LARGE","description":"dev.shibasis.reaktor.core.network.StatusCode.PAYLOAD_TOO_LARGE","location":"reaktor-core/dev.shibasis.reaktor.core.network/-status-code/-p-a-y-l-o-a-d_-t-o-o_-l-a-r-g-e/index.html","searchKeys":["PAYLOAD_TOO_LARGE","PAYLOAD_TOO_LARGE","dev.shibasis.reaktor.core.network.StatusCode.PAYLOAD_TOO_LARGE"]},{"name":"PAYMENT_REQUIRED","description":"dev.shibasis.reaktor.core.network.StatusCode.PAYMENT_REQUIRED","location":"reaktor-core/dev.shibasis.reaktor.core.network/-status-code/-p-a-y-m-e-n-t_-r-e-q-u-i-r-e-d/index.html","searchKeys":["PAYMENT_REQUIRED","PAYMENT_REQUIRED","dev.shibasis.reaktor.core.network.StatusCode.PAYMENT_REQUIRED"]},{"name":"PERMANENT_REDIRECT","description":"dev.shibasis.reaktor.core.network.StatusCode.PERMANENT_REDIRECT","location":"reaktor-core/dev.shibasis.reaktor.core.network/-status-code/-p-e-r-m-a-n-e-n-t_-r-e-d-i-r-e-c-t/index.html","searchKeys":["PERMANENT_REDIRECT","PERMANENT_REDIRECT","dev.shibasis.reaktor.core.network.StatusCode.PERMANENT_REDIRECT"]},{"name":"PRECONDITION_FAILED","description":"dev.shibasis.reaktor.core.network.StatusCode.PRECONDITION_FAILED","location":"reaktor-core/dev.shibasis.reaktor.core.network/-status-code/-p-r-e-c-o-n-d-i-t-i-o-n_-f-a-i-l-e-d/index.html","searchKeys":["PRECONDITION_FAILED","PRECONDITION_FAILED","dev.shibasis.reaktor.core.network.StatusCode.PRECONDITION_FAILED"]},{"name":"PRECONDITION_REQUIRED","description":"dev.shibasis.reaktor.core.network.StatusCode.PRECONDITION_REQUIRED","location":"reaktor-core/dev.shibasis.reaktor.core.network/-status-code/-p-r-e-c-o-n-d-i-t-i-o-n_-r-e-q-u-i-r-e-d/index.html","searchKeys":["PRECONDITION_REQUIRED","PRECONDITION_REQUIRED","dev.shibasis.reaktor.core.network.StatusCode.PRECONDITION_REQUIRED"]},{"name":"PROCESSING","description":"dev.shibasis.reaktor.core.network.StatusCode.PROCESSING","location":"reaktor-core/dev.shibasis.reaktor.core.network/-status-code/-p-r-o-c-e-s-s-i-n-g/index.html","searchKeys":["PROCESSING","PROCESSING","dev.shibasis.reaktor.core.network.StatusCode.PROCESSING"]},{"name":"PROXY_AUTHENTICATION_REQUIRED","description":"dev.shibasis.reaktor.core.network.StatusCode.PROXY_AUTHENTICATION_REQUIRED","location":"reaktor-core/dev.shibasis.reaktor.core.network/-status-code/-p-r-o-x-y_-a-u-t-h-e-n-t-i-c-a-t-i-o-n_-r-e-q-u-i-r-e-d/index.html","searchKeys":["PROXY_AUTHENTICATION_REQUIRED","PROXY_AUTHENTICATION_REQUIRED","dev.shibasis.reaktor.core.network.StatusCode.PROXY_AUTHENTICATION_REQUIRED"]},{"name":"RANGE_NOT_SATISFIABLE","description":"dev.shibasis.reaktor.core.network.StatusCode.RANGE_NOT_SATISFIABLE","location":"reaktor-core/dev.shibasis.reaktor.core.network/-status-code/-r-a-n-g-e_-n-o-t_-s-a-t-i-s-f-i-a-b-l-e/index.html","searchKeys":["RANGE_NOT_SATISFIABLE","RANGE_NOT_SATISFIABLE","dev.shibasis.reaktor.core.network.StatusCode.RANGE_NOT_SATISFIABLE"]},{"name":"REQUEST_HEADER_FIELDS_TOO_LARGE","description":"dev.shibasis.reaktor.core.network.StatusCode.REQUEST_HEADER_FIELDS_TOO_LARGE","location":"reaktor-core/dev.shibasis.reaktor.core.network/-status-code/-r-e-q-u-e-s-t_-h-e-a-d-e-r_-f-i-e-l-d-s_-t-o-o_-l-a-r-g-e/index.html","searchKeys":["REQUEST_HEADER_FIELDS_TOO_LARGE","REQUEST_HEADER_FIELDS_TOO_LARGE","dev.shibasis.reaktor.core.network.StatusCode.REQUEST_HEADER_FIELDS_TOO_LARGE"]},{"name":"REQUEST_TIMEOUT","description":"dev.shibasis.reaktor.core.network.StatusCode.REQUEST_TIMEOUT","location":"reaktor-core/dev.shibasis.reaktor.core.network/-status-code/-r-e-q-u-e-s-t_-t-i-m-e-o-u-t/index.html","searchKeys":["REQUEST_TIMEOUT","REQUEST_TIMEOUT","dev.shibasis.reaktor.core.network.StatusCode.REQUEST_TIMEOUT"]},{"name":"RESET_CONTENT","description":"dev.shibasis.reaktor.core.network.StatusCode.RESET_CONTENT","location":"reaktor-core/dev.shibasis.reaktor.core.network/-status-code/-r-e-s-e-t_-c-o-n-t-e-n-t/index.html","searchKeys":["RESET_CONTENT","RESET_CONTENT","dev.shibasis.reaktor.core.network.StatusCode.RESET_CONTENT"]},{"name":"SEE_OTHER","description":"dev.shibasis.reaktor.core.network.StatusCode.SEE_OTHER","location":"reaktor-core/dev.shibasis.reaktor.core.network/-status-code/-s-e-e_-o-t-h-e-r/index.html","searchKeys":["SEE_OTHER","SEE_OTHER","dev.shibasis.reaktor.core.network.StatusCode.SEE_OTHER"]},{"name":"SERVICE_UNAVAILABLE","description":"dev.shibasis.reaktor.core.network.StatusCode.SERVICE_UNAVAILABLE","location":"reaktor-core/dev.shibasis.reaktor.core.network/-status-code/-s-e-r-v-i-c-e_-u-n-a-v-a-i-l-a-b-l-e/index.html","searchKeys":["SERVICE_UNAVAILABLE","SERVICE_UNAVAILABLE","dev.shibasis.reaktor.core.network.StatusCode.SERVICE_UNAVAILABLE"]},{"name":"SWITCHING_PROTOCOLS","description":"dev.shibasis.reaktor.core.network.StatusCode.SWITCHING_PROTOCOLS","location":"reaktor-core/dev.shibasis.reaktor.core.network/-status-code/-s-w-i-t-c-h-i-n-g_-p-r-o-t-o-c-o-l-s/index.html","searchKeys":["SWITCHING_PROTOCOLS","SWITCHING_PROTOCOLS","dev.shibasis.reaktor.core.network.StatusCode.SWITCHING_PROTOCOLS"]},{"name":"TEMPORARY_REDIRECT","description":"dev.shibasis.reaktor.core.network.StatusCode.TEMPORARY_REDIRECT","location":"reaktor-core/dev.shibasis.reaktor.core.network/-status-code/-t-e-m-p-o-r-a-r-y_-r-e-d-i-r-e-c-t/index.html","searchKeys":["TEMPORARY_REDIRECT","TEMPORARY_REDIRECT","dev.shibasis.reaktor.core.network.StatusCode.TEMPORARY_REDIRECT"]},{"name":"TOO_EARLY","description":"dev.shibasis.reaktor.core.network.StatusCode.TOO_EARLY","location":"reaktor-core/dev.shibasis.reaktor.core.network/-status-code/-t-o-o_-e-a-r-l-y/index.html","searchKeys":["TOO_EARLY","TOO_EARLY","dev.shibasis.reaktor.core.network.StatusCode.TOO_EARLY"]},{"name":"TOO_MANY_REQUESTS","description":"dev.shibasis.reaktor.core.network.StatusCode.TOO_MANY_REQUESTS","location":"reaktor-core/dev.shibasis.reaktor.core.network/-status-code/-t-o-o_-m-a-n-y_-r-e-q-u-e-s-t-s/index.html","searchKeys":["TOO_MANY_REQUESTS","TOO_MANY_REQUESTS","dev.shibasis.reaktor.core.network.StatusCode.TOO_MANY_REQUESTS"]},{"name":"UNAUTHORIZED","description":"dev.shibasis.reaktor.core.network.StatusCode.UNAUTHORIZED","location":"reaktor-core/dev.shibasis.reaktor.core.network/-status-code/-u-n-a-u-t-h-o-r-i-z-e-d/index.html","searchKeys":["UNAUTHORIZED","UNAUTHORIZED","dev.shibasis.reaktor.core.network.StatusCode.UNAUTHORIZED"]},{"name":"UNAVAILABLE_FOR_LEGAL_REASONS","description":"dev.shibasis.reaktor.core.network.StatusCode.UNAVAILABLE_FOR_LEGAL_REASONS","location":"reaktor-core/dev.shibasis.reaktor.core.network/-status-code/-u-n-a-v-a-i-l-a-b-l-e_-f-o-r_-l-e-g-a-l_-r-e-a-s-o-n-s/index.html","searchKeys":["UNAVAILABLE_FOR_LEGAL_REASONS","UNAVAILABLE_FOR_LEGAL_REASONS","dev.shibasis.reaktor.core.network.StatusCode.UNAVAILABLE_FOR_LEGAL_REASONS"]},{"name":"UNPROCESSABLE_ENTITY","description":"dev.shibasis.reaktor.core.network.StatusCode.UNPROCESSABLE_ENTITY","location":"reaktor-core/dev.shibasis.reaktor.core.network/-status-code/-u-n-p-r-o-c-e-s-s-a-b-l-e_-e-n-t-i-t-y/index.html","searchKeys":["UNPROCESSABLE_ENTITY","UNPROCESSABLE_ENTITY","dev.shibasis.reaktor.core.network.StatusCode.UNPROCESSABLE_ENTITY"]},{"name":"UNSUPPORTED_MEDIA_TYPE","description":"dev.shibasis.reaktor.core.network.StatusCode.UNSUPPORTED_MEDIA_TYPE","location":"reaktor-core/dev.shibasis.reaktor.core.network/-status-code/-u-n-s-u-p-p-o-r-t-e-d_-m-e-d-i-a_-t-y-p-e/index.html","searchKeys":["UNSUPPORTED_MEDIA_TYPE","UNSUPPORTED_MEDIA_TYPE","dev.shibasis.reaktor.core.network.StatusCode.UNSUPPORTED_MEDIA_TYPE"]},{"name":"UPGRADE_REQUIRED","description":"dev.shibasis.reaktor.core.network.StatusCode.UPGRADE_REQUIRED","location":"reaktor-core/dev.shibasis.reaktor.core.network/-status-code/-u-p-g-r-a-d-e_-r-e-q-u-i-r-e-d/index.html","searchKeys":["UPGRADE_REQUIRED","UPGRADE_REQUIRED","dev.shibasis.reaktor.core.network.StatusCode.UPGRADE_REQUIRED"]},{"name":"URI_TOO_LONG","description":"dev.shibasis.reaktor.core.network.StatusCode.URI_TOO_LONG","location":"reaktor-core/dev.shibasis.reaktor.core.network/-status-code/-u-r-i_-t-o-o_-l-o-n-g/index.html","searchKeys":["URI_TOO_LONG","URI_TOO_LONG","dev.shibasis.reaktor.core.network.StatusCode.URI_TOO_LONG"]},{"name":"USE_PROXY","description":"dev.shibasis.reaktor.core.network.StatusCode.USE_PROXY","location":"reaktor-core/dev.shibasis.reaktor.core.network/-status-code/-u-s-e_-p-r-o-x-y/index.html","searchKeys":["USE_PROXY","USE_PROXY","dev.shibasis.reaktor.core.network.StatusCode.USE_PROXY"]},{"name":"VARIANT_ALSO_NEGOTIATES","description":"dev.shibasis.reaktor.core.network.StatusCode.VARIANT_ALSO_NEGOTIATES","location":"reaktor-core/dev.shibasis.reaktor.core.network/-status-code/-v-a-r-i-a-n-t_-a-l-s-o_-n-e-g-o-t-i-a-t-e-s/index.html","searchKeys":["VARIANT_ALSO_NEGOTIATES","VARIANT_ALSO_NEGOTIATES","dev.shibasis.reaktor.core.network.StatusCode.VARIANT_ALSO_NEGOTIATES"]},{"name":"WEB","description":"dev.shibasis.reaktor.core.framework.PlatformType.WEB","location":"reaktor-core/dev.shibasis.reaktor.core.framework/-platform-type/-w-e-b/index.html","searchKeys":["WEB","WEB","dev.shibasis.reaktor.core.framework.PlatformType.WEB"]},{"name":"WORKER","description":"dev.shibasis.reaktor.core.framework.PlatformType.WORKER","location":"reaktor-core/dev.shibasis.reaktor.core.framework/-platform-type/-w-o-r-k-e-r/index.html","searchKeys":["WORKER","WORKER","dev.shibasis.reaktor.core.framework.PlatformType.WORKER"]},{"name":"abstract class BaseActivity : ComponentActivity","description":"dev.shibasis.reaktor.core.framework.BaseActivity","location":"reaktor-core/dev.shibasis.reaktor.core.framework/-base-activity/index.html","searchKeys":["BaseActivity","abstract class BaseActivity : ComponentActivity","dev.shibasis.reaktor.core.framework.BaseActivity"]},{"name":"abstract class PermissionAdapter<Controller>(controller: Controller) : Adapter<Controller> ","description":"dev.shibasis.reaktor.core.adapters.PermissionAdapter","location":"reaktor-core/dev.shibasis.reaktor.core.adapters/-permission-adapter/index.html","searchKeys":["PermissionAdapter","abstract class PermissionAdapter<Controller>(controller: Controller) : Adapter<Controller> ","dev.shibasis.reaktor.core.adapters.PermissionAdapter"]},{"name":"abstract class StorageAdapter<Controller>(controller: Controller) : Adapter<Controller> ","description":"dev.shibasis.reaktor.core.adapters.StorageAdapter","location":"reaktor-core/dev.shibasis.reaktor.core.adapters/-storage-adapter/index.html","searchKeys":["StorageAdapter","abstract class StorageAdapter<Controller>(controller: Controller) : Adapter<Controller> ","dev.shibasis.reaktor.core.adapters.StorageAdapter"]},{"name":"abstract fun <Args : Array<Any>> setInterval(callback: (args: Args) -> Unit, msDelay: Number = definedExternally, vararg args: Args): Number","description":"dev.shibasis.reaktor.core.server.cloudflare.ServiceWorkerGlobalScope.setInterval","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-service-worker-global-scope/set-interval.html","searchKeys":["setInterval","abstract fun <Args : Array<Any>> setInterval(callback: (args: Args) -> Unit, msDelay: Number = definedExternally, vararg args: Args): Number","dev.shibasis.reaktor.core.server.cloudflare.ServiceWorkerGlobalScope.setInterval"]},{"name":"abstract fun <Args : Array<Any>> setTimeout(callback: (args: Args) -> Unit, msDelay: Number = definedExternally, vararg args: Args): Number","description":"dev.shibasis.reaktor.core.server.cloudflare.ServiceWorkerGlobalScope.setTimeout","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-service-worker-global-scope/set-timeout.html","searchKeys":["setTimeout","abstract fun <Args : Array<Any>> setTimeout(callback: (args: Args) -> Unit, msDelay: Number = definedExternally, vararg args: Args): Number","dev.shibasis.reaktor.core.server.cloudflare.ServiceWorkerGlobalScope.setTimeout"]},{"name":"abstract fun <Metadata> getWithMetadata(key: Key): Promise<KVNamespaceGetWithMetadataResult<String, Metadata>>","description":"dev.shibasis.reaktor.core.server.cloudflare.KVNamespace.getWithMetadata","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-k-v-namespace/get-with-metadata.html","searchKeys":["getWithMetadata","abstract fun <Metadata> getWithMetadata(key: Key): Promise<KVNamespaceGetWithMetadataResult<String, Metadata>>","dev.shibasis.reaktor.core.server.cloudflare.KVNamespace.getWithMetadata"]},{"name":"abstract fun <Metadata> getWithMetadata(key: Key, options: KVNamespaceGetOptions<String>): dynamic","description":"dev.shibasis.reaktor.core.server.cloudflare.KVNamespace.getWithMetadata","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-k-v-namespace/get-with-metadata.html","searchKeys":["getWithMetadata","abstract fun <Metadata> getWithMetadata(key: Key, options: KVNamespaceGetOptions<String>): dynamic","dev.shibasis.reaktor.core.server.cloudflare.KVNamespace.getWithMetadata"]},{"name":"abstract fun <Metadata> getWithMetadata(key: Key, options: KVNamespaceGetOptionsPartial<Nothing?> = definedExternally): Promise<KVNamespaceGetWithMetadataResult<String, Metadata>>","description":"dev.shibasis.reaktor.core.server.cloudflare.KVNamespace.getWithMetadata","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-k-v-namespace/get-with-metadata.html","searchKeys":["getWithMetadata","abstract fun <Metadata> getWithMetadata(key: Key, options: KVNamespaceGetOptionsPartial<Nothing?> = definedExternally): Promise<KVNamespaceGetWithMetadataResult<String, Metadata>>","dev.shibasis.reaktor.core.server.cloudflare.KVNamespace.getWithMetadata"]},{"name":"abstract fun <Metadata> getWithMetadata(key: Key, type: String): dynamic","description":"dev.shibasis.reaktor.core.server.cloudflare.KVNamespace.getWithMetadata","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-k-v-namespace/get-with-metadata.html","searchKeys":["getWithMetadata","abstract fun <Metadata> getWithMetadata(key: Key, type: String): dynamic","dev.shibasis.reaktor.core.server.cloudflare.KVNamespace.getWithMetadata"]},{"name":"abstract fun <T : Any> put(entries: Record<String, T>): Promise<Unit>","description":"dev.shibasis.reaktor.core.server.cloudflare.DurableObjectStorage.put","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-durable-object-storage/put.html","searchKeys":["put","abstract fun <T : Any> put(entries: Record<String, T>): Promise<Unit>","dev.shibasis.reaktor.core.server.cloudflare.DurableObjectStorage.put"]},{"name":"abstract fun <T : Any> put(entries: Record<String, T>): Promise<Unit>","description":"dev.shibasis.reaktor.core.server.cloudflare.DurableObjectTransaction.put","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-durable-object-transaction/put.html","searchKeys":["put","abstract fun <T : Any> put(entries: Record<String, T>): Promise<Unit>","dev.shibasis.reaktor.core.server.cloudflare.DurableObjectTransaction.put"]},{"name":"abstract fun <T : Any> put(entries: Record<String, T>, options: DurableObjectPutOptions = definedExternally): Promise<Unit>","description":"dev.shibasis.reaktor.core.server.cloudflare.DurableObjectStorage.put","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-durable-object-storage/put.html","searchKeys":["put","abstract fun <T : Any> put(entries: Record<String, T>, options: DurableObjectPutOptions = definedExternally): Promise<Unit>","dev.shibasis.reaktor.core.server.cloudflare.DurableObjectStorage.put"]},{"name":"abstract fun <T : Any> put(entries: Record<String, T>, options: DurableObjectPutOptions = definedExternally): Promise<Unit>","description":"dev.shibasis.reaktor.core.server.cloudflare.DurableObjectTransaction.put","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-durable-object-transaction/put.html","searchKeys":["put","abstract fun <T : Any> put(entries: Record<String, T>, options: DurableObjectPutOptions = definedExternally): Promise<Unit>","dev.shibasis.reaktor.core.server.cloudflare.DurableObjectTransaction.put"]},{"name":"abstract fun <T> blockConcurrencyWhile(callback: () -> Promise<T>): Promise<T>","description":"dev.shibasis.reaktor.core.server.cloudflare.DurableObjectState.blockConcurrencyWhile","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-durable-object-state/block-concurrency-while.html","searchKeys":["blockConcurrencyWhile","abstract fun <T> blockConcurrencyWhile(callback: () -> Promise<T>): Promise<T>","dev.shibasis.reaktor.core.server.cloudflare.DurableObjectState.blockConcurrencyWhile"]},{"name":"abstract fun <T> fetchDependency(id: Int): T?","description":"dev.shibasis.reaktor.core.framework.DependencyModule.fetchDependency","location":"reaktor-core/dev.shibasis.reaktor.core.framework/-dependency-module/fetch-dependency.html","searchKeys":["fetchDependency","abstract fun <T> fetchDependency(id: Int): T?","dev.shibasis.reaktor.core.framework.DependencyModule.fetchDependency"]},{"name":"abstract fun <T> get(key: String): Promise<T?>","description":"dev.shibasis.reaktor.core.server.cloudflare.DurableObjectStorage.get","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-durable-object-storage/get.html","searchKeys":["get","abstract fun <T> get(key: String): Promise<T?>","dev.shibasis.reaktor.core.server.cloudflare.DurableObjectStorage.get"]},{"name":"abstract fun <T> get(key: String): Promise<T?>","description":"dev.shibasis.reaktor.core.server.cloudflare.DurableObjectTransaction.get","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-durable-object-transaction/get.html","searchKeys":["get","abstract fun <T> get(key: String): Promise<T?>","dev.shibasis.reaktor.core.server.cloudflare.DurableObjectTransaction.get"]},{"name":"abstract fun <T> get(key: String, options: DurableObjectGetOptions = definedExternally): Promise<T?>","description":"dev.shibasis.reaktor.core.server.cloudflare.DurableObjectStorage.get","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-durable-object-storage/get.html","searchKeys":["get","abstract fun <T> get(key: String, options: DurableObjectGetOptions = definedExternally): Promise<T?>","dev.shibasis.reaktor.core.server.cloudflare.DurableObjectStorage.get"]},{"name":"abstract fun <T> get(key: String, options: DurableObjectGetOptions = definedExternally): Promise<T?>","description":"dev.shibasis.reaktor.core.server.cloudflare.DurableObjectTransaction.get","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-durable-object-transaction/get.html","searchKeys":["get","abstract fun <T> get(key: String, options: DurableObjectGetOptions = definedExternally): Promise<T?>","dev.shibasis.reaktor.core.server.cloudflare.DurableObjectTransaction.get"]},{"name":"abstract fun <T> get(keys: Array<String>): Promise<Map<String, T>>","description":"dev.shibasis.reaktor.core.server.cloudflare.DurableObjectStorage.get","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-durable-object-storage/get.html","searchKeys":["get","abstract fun <T> get(keys: Array<String>): Promise<Map<String, T>>","dev.shibasis.reaktor.core.server.cloudflare.DurableObjectStorage.get"]},{"name":"abstract fun <T> get(keys: Array<String>): Promise<Map<String, T>>","description":"dev.shibasis.reaktor.core.server.cloudflare.DurableObjectTransaction.get","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-durable-object-transaction/get.html","searchKeys":["get","abstract fun <T> get(keys: Array<String>): Promise<Map<String, T>>","dev.shibasis.reaktor.core.server.cloudflare.DurableObjectTransaction.get"]},{"name":"abstract fun <T> get(keys: Array<String>, options: DurableObjectGetOptions = definedExternally): Promise<Map<String, T>>","description":"dev.shibasis.reaktor.core.server.cloudflare.DurableObjectStorage.get","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-durable-object-storage/get.html","searchKeys":["get","abstract fun <T> get(keys: Array<String>, options: DurableObjectGetOptions = definedExternally): Promise<Map<String, T>>","dev.shibasis.reaktor.core.server.cloudflare.DurableObjectStorage.get"]},{"name":"abstract fun <T> get(keys: Array<String>, options: DurableObjectGetOptions = definedExternally): Promise<Map<String, T>>","description":"dev.shibasis.reaktor.core.server.cloudflare.DurableObjectTransaction.get","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-durable-object-transaction/get.html","searchKeys":["get","abstract fun <T> get(keys: Array<String>, options: DurableObjectGetOptions = definedExternally): Promise<Map<String, T>>","dev.shibasis.reaktor.core.server.cloudflare.DurableObjectTransaction.get"]},{"name":"abstract fun <T> json(): Promise<T>","description":"dev.shibasis.reaktor.core.server.cloudflare.R2ObjectBody.json","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-r2-object-body/json.html","searchKeys":["json","abstract fun <T> json(): Promise<T>","dev.shibasis.reaktor.core.server.cloudflare.R2ObjectBody.json"]},{"name":"abstract fun <T> list(options: DurableObjectListOptions = definedExternally): Promise<Map<String, T>>","description":"dev.shibasis.reaktor.core.server.cloudflare.DurableObjectStorage.list","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-durable-object-storage/list.html","searchKeys":["list","abstract fun <T> list(options: DurableObjectListOptions = definedExternally): Promise<Map<String, T>>","dev.shibasis.reaktor.core.server.cloudflare.DurableObjectStorage.list"]},{"name":"abstract fun <T> list(options: DurableObjectListOptions = definedExternally): Promise<Map<String, T>>","description":"dev.shibasis.reaktor.core.server.cloudflare.DurableObjectTransaction.list","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-durable-object-transaction/list.html","searchKeys":["list","abstract fun <T> list(options: DurableObjectListOptions = definedExternally): Promise<Map<String, T>>","dev.shibasis.reaktor.core.server.cloudflare.DurableObjectTransaction.list"]},{"name":"abstract fun <T> pipeThrough(transform: ReadableWritablePair<T, R>, options: StreamPipeOptions = definedExternally): ReadableStream<T>","description":"dev.shibasis.reaktor.core.server.cloudflare.ReadableStream.pipeThrough","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-readable-stream/pipe-through.html","searchKeys":["pipeThrough","abstract fun <T> pipeThrough(transform: ReadableWritablePair<T, R>, options: StreamPipeOptions = definedExternally): ReadableStream<T>","dev.shibasis.reaktor.core.server.cloudflare.ReadableStream.pipeThrough"]},{"name":"abstract fun <T> put(key: String, value: T): Promise<Unit>","description":"dev.shibasis.reaktor.core.server.cloudflare.DurableObjectStorage.put","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-durable-object-storage/put.html","searchKeys":["put","abstract fun <T> put(key: String, value: T): Promise<Unit>","dev.shibasis.reaktor.core.server.cloudflare.DurableObjectStorage.put"]},{"name":"abstract fun <T> put(key: String, value: T): Promise<Unit>","description":"dev.shibasis.reaktor.core.server.cloudflare.DurableObjectTransaction.put","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-durable-object-transaction/put.html","searchKeys":["put","abstract fun <T> put(key: String, value: T): Promise<Unit>","dev.shibasis.reaktor.core.server.cloudflare.DurableObjectTransaction.put"]},{"name":"abstract fun <T> put(key: String, value: T, options: DurableObjectPutOptions = definedExternally): Promise<Unit>","description":"dev.shibasis.reaktor.core.server.cloudflare.DurableObjectStorage.put","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-durable-object-storage/put.html","searchKeys":["put","abstract fun <T> put(key: String, value: T, options: DurableObjectPutOptions = definedExternally): Promise<Unit>","dev.shibasis.reaktor.core.server.cloudflare.DurableObjectStorage.put"]},{"name":"abstract fun <T> put(key: String, value: T, options: DurableObjectPutOptions = definedExternally): Promise<Unit>","description":"dev.shibasis.reaktor.core.server.cloudflare.DurableObjectTransaction.put","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-durable-object-transaction/put.html","searchKeys":["put","abstract fun <T> put(key: String, value: T, options: DurableObjectPutOptions = definedExternally): Promise<Unit>","dev.shibasis.reaktor.core.server.cloudflare.DurableObjectTransaction.put"]},{"name":"abstract fun <T> storeDependency(id: Int, dependency: T)","description":"dev.shibasis.reaktor.core.framework.DependencyModule.storeDependency","location":"reaktor-core/dev.shibasis.reaktor.core.framework/-dependency-module/store-dependency.html","searchKeys":["storeDependency","abstract fun <T> storeDependency(id: Int, dependency: T)","dev.shibasis.reaktor.core.framework.DependencyModule.storeDependency"]},{"name":"abstract fun <T> structuredClone(value: T, options: StructuredSerializeOptions = definedExternally): T","description":"dev.shibasis.reaktor.core.server.cloudflare.ServiceWorkerGlobalScope.structuredClone","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-service-worker-global-scope/structured-clone.html","searchKeys":["structuredClone","abstract fun <T> structuredClone(value: T, options: StructuredSerializeOptions = definedExternally): T","dev.shibasis.reaktor.core.server.cloudflare.ServiceWorkerGlobalScope.structuredClone"]},{"name":"abstract fun <T> transaction(closure: (txn: DurableObjectTransaction) -> Promise<T>): Promise<T>","description":"dev.shibasis.reaktor.core.server.cloudflare.DurableObjectStorage.transaction","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-durable-object-storage/transaction.html","searchKeys":["transaction","abstract fun <T> transaction(closure: (txn: DurableObjectTransaction) -> Promise<T>): Promise<T>","dev.shibasis.reaktor.core.server.cloudflare.DurableObjectStorage.transaction"]},{"name":"abstract fun <T> transactionSync(closure: () -> T): T","description":"dev.shibasis.reaktor.core.server.cloudflare.DurableObjectStorage.transactionSync","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-durable-object-storage/transaction-sync.html","searchKeys":["transactionSync","abstract fun <T> transactionSync(closure: () -> T): T","dev.shibasis.reaktor.core.server.cloudflare.DurableObjectStorage.transactionSync"]},{"name":"abstract fun abort(): Promise<Unit>","description":"dev.shibasis.reaktor.core.server.cloudflare.R2MultipartUpload.abort","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-r2-multipart-upload/abort.html","searchKeys":["abort","abstract fun abort(): Promise<Unit>","dev.shibasis.reaktor.core.server.cloudflare.R2MultipartUpload.abort"]},{"name":"abstract fun acceptWebSocket(ws: WebSocket, tags: Array<String> = definedExternally)","description":"dev.shibasis.reaktor.core.server.cloudflare.DurableObjectState.acceptWebSocket","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-durable-object-state/accept-web-socket.html","searchKeys":["acceptWebSocket","abstract fun acceptWebSocket(ws: WebSocket, tags: Array<String> = definedExternally)","dev.shibasis.reaktor.core.server.cloudflare.DurableObjectState.acceptWebSocket"]},{"name":"abstract fun ack()","description":"dev.shibasis.reaktor.core.server.cloudflare.Message.ack","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-message/ack.html","searchKeys":["ack","abstract fun ack()","dev.shibasis.reaktor.core.server.cloudflare.Message.ack"]},{"name":"abstract fun ackAll()","description":"dev.shibasis.reaktor.core.server.cloudflare.MessageBatch.ackAll","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-message-batch/ack-all.html","searchKeys":["ackAll","abstract fun ackAll()","dev.shibasis.reaktor.core.server.cloudflare.MessageBatch.ackAll"]},{"name":"abstract fun ackAll()","description":"dev.shibasis.reaktor.core.server.cloudflare.QueueEvent.ackAll","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-queue-event/ack-all.html","searchKeys":["ackAll","abstract fun ackAll()","dev.shibasis.reaktor.core.server.cloudflare.QueueEvent.ackAll"]},{"name":"abstract fun after(content: String, options: ContentOptions = definedExternally): Comment","description":"dev.shibasis.reaktor.core.server.cloudflare.Comment.after","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-comment/after.html","searchKeys":["after","abstract fun after(content: String, options: ContentOptions = definedExternally): Comment","dev.shibasis.reaktor.core.server.cloudflare.Comment.after"]},{"name":"abstract fun after(content: String, options: ContentOptions = definedExternally): Element","description":"dev.shibasis.reaktor.core.server.cloudflare.Element.after","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-element/after.html","searchKeys":["after","abstract fun after(content: String, options: ContentOptions = definedExternally): Element","dev.shibasis.reaktor.core.server.cloudflare.Element.after"]},{"name":"abstract fun after(content: String, options: ContentOptions = definedExternally): EndTag","description":"dev.shibasis.reaktor.core.server.cloudflare.EndTag.after","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-end-tag/after.html","searchKeys":["after","abstract fun after(content: String, options: ContentOptions = definedExternally): EndTag","dev.shibasis.reaktor.core.server.cloudflare.EndTag.after"]},{"name":"abstract fun after(content: String, options: ContentOptions = definedExternally): Text","description":"dev.shibasis.reaktor.core.server.cloudflare.Text.after","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-text/after.html","searchKeys":["after","abstract fun after(content: String, options: ContentOptions = definedExternally): Text","dev.shibasis.reaktor.core.server.cloudflare.Text.after"]},{"name":"abstract fun append(content: String, options: ContentOptions = definedExternally): DocumentEnd","description":"dev.shibasis.reaktor.core.server.cloudflare.DocumentEnd.append","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-document-end/append.html","searchKeys":["append","abstract fun append(content: String, options: ContentOptions = definedExternally): DocumentEnd","dev.shibasis.reaktor.core.server.cloudflare.DocumentEnd.append"]},{"name":"abstract fun append(content: String, options: ContentOptions = definedExternally): Element","description":"dev.shibasis.reaktor.core.server.cloudflare.Element.append","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-element/append.html","searchKeys":["append","abstract fun append(content: String, options: ContentOptions = definedExternally): Element","dev.shibasis.reaktor.core.server.cloudflare.Element.append"]},{"name":"abstract fun arrayBuffer(): Promise<ArrayBuffer>","description":"dev.shibasis.reaktor.core.server.cloudflare.R2ObjectBody.arrayBuffer","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-r2-object-body/array-buffer.html","searchKeys":["arrayBuffer","abstract fun arrayBuffer(): Promise<ArrayBuffer>","dev.shibasis.reaktor.core.server.cloudflare.R2ObjectBody.arrayBuffer"]},{"name":"abstract fun atob(data: String): String","description":"dev.shibasis.reaktor.core.server.cloudflare.ServiceWorkerGlobalScope.atob","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-service-worker-global-scope/atob.html","searchKeys":["atob","abstract fun atob(data: String): String","dev.shibasis.reaktor.core.server.cloudflare.ServiceWorkerGlobalScope.atob"]},{"name":"abstract fun before(content: String, options: ContentOptions = definedExternally): Comment","description":"dev.shibasis.reaktor.core.server.cloudflare.Comment.before","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-comment/before.html","searchKeys":["before","abstract fun before(content: String, options: ContentOptions = definedExternally): Comment","dev.shibasis.reaktor.core.server.cloudflare.Comment.before"]},{"name":"abstract fun before(content: String, options: ContentOptions = definedExternally): Element","description":"dev.shibasis.reaktor.core.server.cloudflare.Element.before","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-element/before.html","searchKeys":["before","abstract fun before(content: String, options: ContentOptions = definedExternally): Element","dev.shibasis.reaktor.core.server.cloudflare.Element.before"]},{"name":"abstract fun before(content: String, options: ContentOptions = definedExternally): EndTag","description":"dev.shibasis.reaktor.core.server.cloudflare.EndTag.before","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-end-tag/before.html","searchKeys":["before","abstract fun before(content: String, options: ContentOptions = definedExternally): EndTag","dev.shibasis.reaktor.core.server.cloudflare.EndTag.before"]},{"name":"abstract fun before(content: String, options: ContentOptions = definedExternally): Text","description":"dev.shibasis.reaktor.core.server.cloudflare.Text.before","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-text/before.html","searchKeys":["before","abstract fun before(content: String, options: ContentOptions = definedExternally): Text","dev.shibasis.reaktor.core.server.cloudflare.Text.before"]},{"name":"abstract fun blob(): Promise<Blob>","description":"dev.shibasis.reaktor.core.server.cloudflare.R2ObjectBody.blob","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-r2-object-body/blob.html","searchKeys":["blob","abstract fun blob(): Promise<Blob>","dev.shibasis.reaktor.core.server.cloudflare.R2ObjectBody.blob"]},{"name":"abstract fun btoa(data: String): String","description":"dev.shibasis.reaktor.core.server.cloudflare.ServiceWorkerGlobalScope.btoa","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-service-worker-global-scope/btoa.html","searchKeys":["btoa","abstract fun btoa(data: String): String","dev.shibasis.reaktor.core.server.cloudflare.ServiceWorkerGlobalScope.btoa"]},{"name":"abstract fun cancel(reason: Any = definedExternally): Promise<Unit>","description":"dev.shibasis.reaktor.core.server.cloudflare.ReadableStream.cancel","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-readable-stream/cancel.html","searchKeys":["cancel","abstract fun cancel(reason: Any = definedExternally): Promise<Unit>","dev.shibasis.reaktor.core.server.cloudflare.ReadableStream.cancel"]},{"name":"abstract fun clear()","description":"dev.shibasis.reaktor.core.server.cloudflare.Console.clear","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-console/clear.html","searchKeys":["clear","abstract fun clear()","dev.shibasis.reaktor.core.server.cloudflare.Console.clear"]},{"name":"abstract fun clearInterval(timeoutId: Number?)","description":"dev.shibasis.reaktor.core.server.cloudflare.ServiceWorkerGlobalScope.clearInterval","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-service-worker-global-scope/clear-interval.html","searchKeys":["clearInterval","abstract fun clearInterval(timeoutId: Number?)","dev.shibasis.reaktor.core.server.cloudflare.ServiceWorkerGlobalScope.clearInterval"]},{"name":"abstract fun clearTimeout(timeoutId: Number?)","description":"dev.shibasis.reaktor.core.server.cloudflare.ServiceWorkerGlobalScope.clearTimeout","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-service-worker-global-scope/clear-timeout.html","searchKeys":["clearTimeout","abstract fun clearTimeout(timeoutId: Number?)","dev.shibasis.reaktor.core.server.cloudflare.ServiceWorkerGlobalScope.clearTimeout"]},{"name":"abstract fun close()","description":"dev.shibasis.reaktor.core.server.cloudflare.ReadableByteStreamController.close","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-readable-byte-stream-controller/close.html","searchKeys":["close","abstract fun close()","dev.shibasis.reaktor.core.server.cloudflare.ReadableByteStreamController.close"]},{"name":"abstract fun close()","description":"dev.shibasis.reaktor.core.server.cloudflare.ReadableStreamDefaultController.close","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-readable-stream-default-controller/close.html","searchKeys":["close","abstract fun close()","dev.shibasis.reaktor.core.server.cloudflare.ReadableStreamDefaultController.close"]},{"name":"abstract fun complete(uploadedParts: Array<R2UploadedPart>): Promise<R2Object>","description":"dev.shibasis.reaktor.core.server.cloudflare.R2MultipartUpload.complete","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-r2-multipart-upload/complete.html","searchKeys":["complete","abstract fun complete(uploadedParts: Array<R2UploadedPart>): Promise<R2Object>","dev.shibasis.reaktor.core.server.cloudflare.R2MultipartUpload.complete"]},{"name":"abstract fun count(label: String = definedExternally)","description":"dev.shibasis.reaktor.core.server.cloudflare.Console.count","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-console/count.html","searchKeys":["count","abstract fun count(label: String = definedExternally)","dev.shibasis.reaktor.core.server.cloudflare.Console.count"]},{"name":"abstract fun countReset(label: String = definedExternally)","description":"dev.shibasis.reaktor.core.server.cloudflare.Console.countReset","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-console/count-reset.html","searchKeys":["countReset","abstract fun countReset(label: String = definedExternally)","dev.shibasis.reaktor.core.server.cloudflare.Console.countReset"]},{"name":"abstract fun createId(): Int","description":"dev.shibasis.reaktor.core.framework.DependencyModule.createId","location":"reaktor-core/dev.shibasis.reaktor.core.framework/-dependency-module/create-id.html","searchKeys":["createId","abstract fun createId(): Int","dev.shibasis.reaktor.core.framework.DependencyModule.createId"]},{"name":"abstract fun debug(vararg data: Any)","description":"dev.shibasis.reaktor.core.server.cloudflare.Console.debug","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-console/debug.html","searchKeys":["debug","abstract fun debug(vararg data: Any)","dev.shibasis.reaktor.core.server.cloudflare.Console.debug"]},{"name":"abstract fun delete(key: Key): Promise<Unit>","description":"dev.shibasis.reaktor.core.server.cloudflare.KVNamespace.delete","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-k-v-namespace/delete.html","searchKeys":["delete","abstract fun delete(key: Key): Promise<Unit>","dev.shibasis.reaktor.core.server.cloudflare.KVNamespace.delete"]},{"name":"abstract fun delete(key: String): Promise<Boolean>","description":"dev.shibasis.reaktor.core.server.cloudflare.DurableObjectStorage.delete","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-durable-object-storage/delete.html","searchKeys":["delete","abstract fun delete(key: String): Promise<Boolean>","dev.shibasis.reaktor.core.server.cloudflare.DurableObjectStorage.delete"]},{"name":"abstract fun delete(key: String): Promise<Boolean>","description":"dev.shibasis.reaktor.core.server.cloudflare.DurableObjectTransaction.delete","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-durable-object-transaction/delete.html","searchKeys":["delete","abstract fun delete(key: String): Promise<Boolean>","dev.shibasis.reaktor.core.server.cloudflare.DurableObjectTransaction.delete"]},{"name":"abstract fun delete(key: String, options: DurableObjectPutOptions = definedExternally): Promise<Boolean>","description":"dev.shibasis.reaktor.core.server.cloudflare.DurableObjectStorage.delete","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-durable-object-storage/delete.html","searchKeys":["delete","abstract fun delete(key: String, options: DurableObjectPutOptions = definedExternally): Promise<Boolean>","dev.shibasis.reaktor.core.server.cloudflare.DurableObjectStorage.delete"]},{"name":"abstract fun delete(key: String, options: DurableObjectPutOptions = definedExternally): Promise<Boolean>","description":"dev.shibasis.reaktor.core.server.cloudflare.DurableObjectTransaction.delete","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-durable-object-transaction/delete.html","searchKeys":["delete","abstract fun delete(key: String, options: DurableObjectPutOptions = definedExternally): Promise<Boolean>","dev.shibasis.reaktor.core.server.cloudflare.DurableObjectTransaction.delete"]},{"name":"abstract fun delete(keys: Array<String>): Promise<Number>","description":"dev.shibasis.reaktor.core.server.cloudflare.DurableObjectStorage.delete","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-durable-object-storage/delete.html","searchKeys":["delete","abstract fun delete(keys: Array<String>): Promise<Number>","dev.shibasis.reaktor.core.server.cloudflare.DurableObjectStorage.delete"]},{"name":"abstract fun delete(keys: Array<String>): Promise<Number>","description":"dev.shibasis.reaktor.core.server.cloudflare.DurableObjectTransaction.delete","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-durable-object-transaction/delete.html","searchKeys":["delete","abstract fun delete(keys: Array<String>): Promise<Number>","dev.shibasis.reaktor.core.server.cloudflare.DurableObjectTransaction.delete"]},{"name":"abstract fun delete(keys: Array<String>, options: DurableObjectPutOptions = definedExternally): Promise<Number>","description":"dev.shibasis.reaktor.core.server.cloudflare.DurableObjectStorage.delete","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-durable-object-storage/delete.html","searchKeys":["delete","abstract fun delete(keys: Array<String>, options: DurableObjectPutOptions = definedExternally): Promise<Number>","dev.shibasis.reaktor.core.server.cloudflare.DurableObjectStorage.delete"]},{"name":"abstract fun delete(keys: Array<String>, options: DurableObjectPutOptions = definedExternally): Promise<Number>","description":"dev.shibasis.reaktor.core.server.cloudflare.DurableObjectTransaction.delete","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-durable-object-transaction/delete.html","searchKeys":["delete","abstract fun delete(keys: Array<String>, options: DurableObjectPutOptions = definedExternally): Promise<Number>","dev.shibasis.reaktor.core.server.cloudflare.DurableObjectTransaction.delete"]},{"name":"abstract fun deleteAlarm(options: DurableObjectSetAlarmOptions = definedExternally): Promise<Unit>","description":"dev.shibasis.reaktor.core.server.cloudflare.DurableObjectStorage.deleteAlarm","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-durable-object-storage/delete-alarm.html","searchKeys":["deleteAlarm","abstract fun deleteAlarm(options: DurableObjectSetAlarmOptions = definedExternally): Promise<Unit>","dev.shibasis.reaktor.core.server.cloudflare.DurableObjectStorage.deleteAlarm"]},{"name":"abstract fun deleteAlarm(options: DurableObjectSetAlarmOptions = definedExternally): Promise<Unit>","description":"dev.shibasis.reaktor.core.server.cloudflare.DurableObjectTransaction.deleteAlarm","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-durable-object-transaction/delete-alarm.html","searchKeys":["deleteAlarm","abstract fun deleteAlarm(options: DurableObjectSetAlarmOptions = definedExternally): Promise<Unit>","dev.shibasis.reaktor.core.server.cloudflare.DurableObjectTransaction.deleteAlarm"]},{"name":"abstract fun deleteAll(options: DurableObjectPutOptions = definedExternally): Promise<Unit>","description":"dev.shibasis.reaktor.core.server.cloudflare.DurableObjectStorage.deleteAll","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-durable-object-storage/delete-all.html","searchKeys":["deleteAll","abstract fun deleteAll(options: DurableObjectPutOptions = definedExternally): Promise<Unit>","dev.shibasis.reaktor.core.server.cloudflare.DurableObjectStorage.deleteAll"]},{"name":"abstract fun dir(item: Any = definedExternally, options: Any = definedExternally)","description":"dev.shibasis.reaktor.core.server.cloudflare.Console.dir","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-console/dir.html","searchKeys":["dir","abstract fun dir(item: Any = definedExternally, options: Any = definedExternally)","dev.shibasis.reaktor.core.server.cloudflare.Console.dir"]},{"name":"abstract fun dirxml(vararg data: Any)","description":"dev.shibasis.reaktor.core.server.cloudflare.Console.dirxml","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-console/dirxml.html","searchKeys":["dirxml","abstract fun dirxml(vararg data: Any)","dev.shibasis.reaktor.core.server.cloudflare.Console.dirxml"]},{"name":"abstract fun enqueue(chunk: ArrayBuffer)","description":"dev.shibasis.reaktor.core.server.cloudflare.ReadableByteStreamController.enqueue","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-readable-byte-stream-controller/enqueue.html","searchKeys":["enqueue","abstract fun enqueue(chunk: ArrayBuffer)","dev.shibasis.reaktor.core.server.cloudflare.ReadableByteStreamController.enqueue"]},{"name":"abstract fun enqueue(chunk: ArrayBufferView)","description":"dev.shibasis.reaktor.core.server.cloudflare.ReadableByteStreamController.enqueue","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-readable-byte-stream-controller/enqueue.html","searchKeys":["enqueue","abstract fun enqueue(chunk: ArrayBufferView)","dev.shibasis.reaktor.core.server.cloudflare.ReadableByteStreamController.enqueue"]},{"name":"abstract fun enqueue(chunk: R = definedExternally)","description":"dev.shibasis.reaktor.core.server.cloudflare.ReadableStreamDefaultController.enqueue","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-readable-stream-default-controller/enqueue.html","searchKeys":["enqueue","abstract fun enqueue(chunk: R = definedExternally)","dev.shibasis.reaktor.core.server.cloudflare.ReadableStreamDefaultController.enqueue"]},{"name":"abstract fun equals(other: DurableObjectId): Boolean","description":"dev.shibasis.reaktor.core.server.cloudflare.DurableObjectId.equals","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-durable-object-id/equals.html","searchKeys":["equals","abstract fun equals(other: DurableObjectId): Boolean","dev.shibasis.reaktor.core.server.cloudflare.DurableObjectId.equals"]},{"name":"abstract fun error(reason: Any = definedExternally)","description":"dev.shibasis.reaktor.core.server.cloudflare.WritableStreamDefaultController.error","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-writable-stream-default-controller/error.html","searchKeys":["error","abstract fun error(reason: Any = definedExternally)","dev.shibasis.reaktor.core.server.cloudflare.WritableStreamDefaultController.error"]},{"name":"abstract fun error(reason: Any)","description":"dev.shibasis.reaktor.core.server.cloudflare.ReadableByteStreamController.error","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-readable-byte-stream-controller/error.html","searchKeys":["error","abstract fun error(reason: Any)","dev.shibasis.reaktor.core.server.cloudflare.ReadableByteStreamController.error"]},{"name":"abstract fun error(reason: Any)","description":"dev.shibasis.reaktor.core.server.cloudflare.ReadableStreamDefaultController.error","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-readable-stream-default-controller/error.html","searchKeys":["error","abstract fun error(reason: Any)","dev.shibasis.reaktor.core.server.cloudflare.ReadableStreamDefaultController.error"]},{"name":"abstract fun error(vararg data: Any)","description":"dev.shibasis.reaktor.core.server.cloudflare.Console.error","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-console/error.html","searchKeys":["error","abstract fun error(vararg data: Any)","dev.shibasis.reaktor.core.server.cloudflare.Console.error"]},{"name":"abstract fun fetch(input: Request<Any, Any>): Promise<Response>","description":"dev.shibasis.reaktor.core.server.cloudflare.ServiceWorkerGlobalScope.fetch","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-service-worker-global-scope/fetch.html","searchKeys":["fetch","abstract fun fetch(input: Request<Any, Any>): Promise<Response>","dev.shibasis.reaktor.core.server.cloudflare.ServiceWorkerGlobalScope.fetch"]},{"name":"abstract fun fetch(input: Request<Any, Any>, init: RequestInit<RequestInitCfProperties> = definedExternally): Promise<Response>","description":"dev.shibasis.reaktor.core.server.cloudflare.ServiceWorkerGlobalScope.fetch","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-service-worker-global-scope/fetch.html","searchKeys":["fetch","abstract fun fetch(input: Request<Any, Any>, init: RequestInit<RequestInitCfProperties> = definedExternally): Promise<Response>","dev.shibasis.reaktor.core.server.cloudflare.ServiceWorkerGlobalScope.fetch"]},{"name":"abstract fun fetch(input: String): Promise<Response>","description":"dev.shibasis.reaktor.core.server.cloudflare.ServiceWorkerGlobalScope.fetch","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-service-worker-global-scope/fetch.html","searchKeys":["fetch","abstract fun fetch(input: String): Promise<Response>","dev.shibasis.reaktor.core.server.cloudflare.ServiceWorkerGlobalScope.fetch"]},{"name":"abstract fun fetch(input: String, init: RequestInit<RequestInitCfProperties> = definedExternally): Promise<Response>","description":"dev.shibasis.reaktor.core.server.cloudflare.ServiceWorkerGlobalScope.fetch","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-service-worker-global-scope/fetch.html","searchKeys":["fetch","abstract fun fetch(input: String, init: RequestInit<RequestInitCfProperties> = definedExternally): Promise<Response>","dev.shibasis.reaktor.core.server.cloudflare.ServiceWorkerGlobalScope.fetch"]},{"name":"abstract fun fetch(input: URL): Promise<Response>","description":"dev.shibasis.reaktor.core.server.cloudflare.ServiceWorkerGlobalScope.fetch","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-service-worker-global-scope/fetch.html","searchKeys":["fetch","abstract fun fetch(input: URL): Promise<Response>","dev.shibasis.reaktor.core.server.cloudflare.ServiceWorkerGlobalScope.fetch"]},{"name":"abstract fun fetch(input: URL, init: RequestInit<RequestInitCfProperties> = definedExternally): Promise<Response>","description":"dev.shibasis.reaktor.core.server.cloudflare.ServiceWorkerGlobalScope.fetch","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-service-worker-global-scope/fetch.html","searchKeys":["fetch","abstract fun fetch(input: URL, init: RequestInit<RequestInitCfProperties> = definedExternally): Promise<Response>","dev.shibasis.reaktor.core.server.cloudflare.ServiceWorkerGlobalScope.fetch"]},{"name":"abstract fun fetch(request: Request, env: Env, ctx: ExecutionContext): Promise<Response>","description":"dev.shibasis.reaktor.core.cloudflare.CloudflareWorker.fetch","location":"reaktor-core/dev.shibasis.reaktor.core.cloudflare/-cloudflare-worker/fetch.html","searchKeys":["fetch","abstract fun fetch(request: Request, env: Env, ctx: ExecutionContext): Promise<Response>","dev.shibasis.reaktor.core.cloudflare.CloudflareWorker.fetch"]},{"name":"abstract fun fetch(request: Request__0): dynamic","description":"dev.shibasis.reaktor.core.server.cloudflare.DurableObject.fetch","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-durable-object/fetch.html","searchKeys":["fetch","abstract fun fetch(request: Request__0): dynamic","dev.shibasis.reaktor.core.server.cloudflare.DurableObject.fetch"]},{"name":"abstract fun forward(rcptTo: String, headers: Headers = definedExternally): Promise<Unit>","description":"dev.shibasis.reaktor.core.server.cloudflare.ForwardableEmailMessage.forward","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-forwardable-email-message/forward.html","searchKeys":["forward","abstract fun forward(rcptTo: String, headers: Headers = definedExternally): Promise<Unit>","dev.shibasis.reaktor.core.server.cloudflare.ForwardableEmailMessage.forward"]},{"name":"abstract fun fromTrace(item: TraceItem): TraceMetrics","description":"dev.shibasis.reaktor.core.server.cloudflare.UnsafeTraceMetrics.fromTrace","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-unsafe-trace-metrics/from-trace.html","searchKeys":["fromTrace","abstract fun fromTrace(item: TraceItem): TraceMetrics","dev.shibasis.reaktor.core.server.cloudflare.UnsafeTraceMetrics.fromTrace"]},{"name":"abstract fun get(id: DurableObjectId, options: DurableObjectNamespaceGetDurableObjectOptions = definedExternally): DurableObjectStub","description":"dev.shibasis.reaktor.core.server.cloudflare.DurableObjectNamespace.get","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-durable-object-namespace/get.html","searchKeys":["get","abstract fun get(id: DurableObjectId, options: DurableObjectNamespaceGetDurableObjectOptions = definedExternally): DurableObjectStub","dev.shibasis.reaktor.core.server.cloudflare.DurableObjectNamespace.get"]},{"name":"abstract fun get(key: Key): dynamic","description":"dev.shibasis.reaktor.core.server.cloudflare.KVNamespace.get","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-k-v-namespace/get.html","searchKeys":["get","abstract fun get(key: Key): dynamic","dev.shibasis.reaktor.core.server.cloudflare.KVNamespace.get"]},{"name":"abstract fun get(key: Key, options: KVNamespaceGetOptions<String> = definedExternally): dynamic","description":"dev.shibasis.reaktor.core.server.cloudflare.KVNamespace.get","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-k-v-namespace/get.html","searchKeys":["get","abstract fun get(key: Key, options: KVNamespaceGetOptions<String> = definedExternally): dynamic","dev.shibasis.reaktor.core.server.cloudflare.KVNamespace.get"]},{"name":"abstract fun get(key: Key, options: KVNamespaceGetOptionsPartial<Nothing?> = definedExternally): Promise<String?>","description":"dev.shibasis.reaktor.core.server.cloudflare.KVNamespace.get","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-k-v-namespace/get.html","searchKeys":["get","abstract fun get(key: Key, options: KVNamespaceGetOptionsPartial<Nothing?> = definedExternally): Promise<String?>","dev.shibasis.reaktor.core.server.cloudflare.KVNamespace.get"]},{"name":"abstract fun get(key: Key, type: String): dynamic","description":"dev.shibasis.reaktor.core.server.cloudflare.KVNamespace.get","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-k-v-namespace/get.html","searchKeys":["get","abstract fun get(key: Key, type: String): dynamic","dev.shibasis.reaktor.core.server.cloudflare.KVNamespace.get"]},{"name":"abstract fun get(name: String, args: Json = definedExternally, options: DynamicDispatchOptions = definedExternally): Fetcher","description":"dev.shibasis.reaktor.core.server.cloudflare.DispatchNamespace.get","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-dispatch-namespace/get.html","searchKeys":["get","abstract fun get(name: String, args: Json = definedExternally, options: DynamicDispatchOptions = definedExternally): Fetcher","dev.shibasis.reaktor.core.server.cloudflare.DispatchNamespace.get"]},{"name":"abstract fun getAlarm(options: DurableObjectGetAlarmOptions = definedExternally): Promise<Number?>","description":"dev.shibasis.reaktor.core.server.cloudflare.DurableObjectStorage.getAlarm","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-durable-object-storage/get-alarm.html","searchKeys":["getAlarm","abstract fun getAlarm(options: DurableObjectGetAlarmOptions = definedExternally): Promise<Number?>","dev.shibasis.reaktor.core.server.cloudflare.DurableObjectStorage.getAlarm"]},{"name":"abstract fun getAlarm(options: DurableObjectGetAlarmOptions = definedExternally): Promise<Number?>","description":"dev.shibasis.reaktor.core.server.cloudflare.DurableObjectTransaction.getAlarm","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-durable-object-transaction/get-alarm.html","searchKeys":["getAlarm","abstract fun getAlarm(options: DurableObjectGetAlarmOptions = definedExternally): Promise<Number?>","dev.shibasis.reaktor.core.server.cloudflare.DurableObjectTransaction.getAlarm"]},{"name":"abstract fun getAttribute(name: String): String?","description":"dev.shibasis.reaktor.core.server.cloudflare.Element.getAttribute","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-element/get-attribute.html","searchKeys":["getAttribute","abstract fun getAttribute(name: String): String?","dev.shibasis.reaktor.core.server.cloudflare.Element.getAttribute"]},{"name":"abstract fun getReader(): ReadableStreamDefaultReader<R>","description":"dev.shibasis.reaktor.core.server.cloudflare.ReadableStream.getReader","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-readable-stream/get-reader.html","searchKeys":["getReader","abstract fun getReader(): ReadableStreamDefaultReader<R>","dev.shibasis.reaktor.core.server.cloudflare.ReadableStream.getReader"]},{"name":"abstract fun getReader(options: ReadableStreamGetReaderOptions): ReadableStreamBYOBReader","description":"dev.shibasis.reaktor.core.server.cloudflare.ReadableStream.getReader","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-readable-stream/get-reader.html","searchKeys":["getReader","abstract fun getReader(options: ReadableStreamGetReaderOptions): ReadableStreamBYOBReader","dev.shibasis.reaktor.core.server.cloudflare.ReadableStream.getReader"]},{"name":"abstract fun getUnredacted(): TraceItemFetchEventInfoRequest","description":"dev.shibasis.reaktor.core.server.cloudflare.TraceItemFetchEventInfoRequest.getUnredacted","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-trace-item-fetch-event-info-request/get-unredacted.html","searchKeys":["getUnredacted","abstract fun getUnredacted(): TraceItemFetchEventInfoRequest","dev.shibasis.reaktor.core.server.cloudflare.TraceItemFetchEventInfoRequest.getUnredacted"]},{"name":"abstract fun getWebSocketAutoResponse(): WebSocketRequestResponsePair?","description":"dev.shibasis.reaktor.core.server.cloudflare.DurableObjectState.getWebSocketAutoResponse","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-durable-object-state/get-web-socket-auto-response.html","searchKeys":["getWebSocketAutoResponse","abstract fun getWebSocketAutoResponse(): WebSocketRequestResponsePair?","dev.shibasis.reaktor.core.server.cloudflare.DurableObjectState.getWebSocketAutoResponse"]},{"name":"abstract fun getWebSocketAutoResponseTimestamp(ws: WebSocket): Date?","description":"dev.shibasis.reaktor.core.server.cloudflare.DurableObjectState.getWebSocketAutoResponseTimestamp","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-durable-object-state/get-web-socket-auto-response-timestamp.html","searchKeys":["getWebSocketAutoResponseTimestamp","abstract fun getWebSocketAutoResponseTimestamp(ws: WebSocket): Date?","dev.shibasis.reaktor.core.server.cloudflare.DurableObjectState.getWebSocketAutoResponseTimestamp"]},{"name":"abstract fun getWebSockets(tag: String = definedExternally): Array<WebSocket>","description":"dev.shibasis.reaktor.core.server.cloudflare.DurableObjectState.getWebSockets","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-durable-object-state/get-web-sockets.html","searchKeys":["getWebSockets","abstract fun getWebSockets(tag: String = definedExternally): Array<WebSocket>","dev.shibasis.reaktor.core.server.cloudflare.DurableObjectState.getWebSockets"]},{"name":"abstract fun group(vararg data: Any)","description":"dev.shibasis.reaktor.core.server.cloudflare.Console.group","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-console/group.html","searchKeys":["group","abstract fun group(vararg data: Any)","dev.shibasis.reaktor.core.server.cloudflare.Console.group"]},{"name":"abstract fun groupCollapsed(vararg data: Any)","description":"dev.shibasis.reaktor.core.server.cloudflare.Console.groupCollapsed","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-console/group-collapsed.html","searchKeys":["groupCollapsed","abstract fun groupCollapsed(vararg data: Any)","dev.shibasis.reaktor.core.server.cloudflare.Console.groupCollapsed"]},{"name":"abstract fun groupEnd()","description":"dev.shibasis.reaktor.core.server.cloudflare.Console.groupEnd","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-console/group-end.html","searchKeys":["groupEnd","abstract fun groupEnd()","dev.shibasis.reaktor.core.server.cloudflare.Console.groupEnd"]},{"name":"abstract fun handleEvent(event: EventType)","description":"dev.shibasis.reaktor.core.server.cloudflare.EventListenerObject.handleEvent","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-event-listener-object/handle-event.html","searchKeys":["handleEvent","abstract fun handleEvent(event: EventType)","dev.shibasis.reaktor.core.server.cloudflare.EventListenerObject.handleEvent"]},{"name":"abstract fun hasAttribute(name: String): Boolean","description":"dev.shibasis.reaktor.core.server.cloudflare.Element.hasAttribute","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-element/has-attribute.html","searchKeys":["hasAttribute","abstract fun hasAttribute(name: String): Boolean","dev.shibasis.reaktor.core.server.cloudflare.Element.hasAttribute"]},{"name":"abstract fun idFromName(name: String): DurableObjectId","description":"dev.shibasis.reaktor.core.server.cloudflare.DurableObjectNamespace.idFromName","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-durable-object-namespace/id-from-name.html","searchKeys":["idFromName","abstract fun idFromName(name: String): DurableObjectId","dev.shibasis.reaktor.core.server.cloudflare.DurableObjectNamespace.idFromName"]},{"name":"abstract fun idFromString(id: String): DurableObjectId","description":"dev.shibasis.reaktor.core.server.cloudflare.DurableObjectNamespace.idFromString","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-durable-object-namespace/id-from-string.html","searchKeys":["idFromString","abstract fun idFromString(id: String): DurableObjectId","dev.shibasis.reaktor.core.server.cloudflare.DurableObjectNamespace.idFromString"]},{"name":"abstract fun info(vararg data: Any)","description":"dev.shibasis.reaktor.core.server.cloudflare.Console.info","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-console/info.html","searchKeys":["info","abstract fun info(vararg data: Any)","dev.shibasis.reaktor.core.server.cloudflare.Console.info"]},{"name":"abstract fun jurisdiction(jurisdiction: String): DurableObjectNamespace","description":"dev.shibasis.reaktor.core.server.cloudflare.DurableObjectNamespace.jurisdiction","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-durable-object-namespace/jurisdiction.html","searchKeys":["jurisdiction","abstract fun jurisdiction(jurisdiction: String): DurableObjectNamespace","dev.shibasis.reaktor.core.server.cloudflare.DurableObjectNamespace.jurisdiction"]},{"name":"abstract fun list(options: KVNamespaceListOptions = definedExternally): Promise<dynamic>","description":"dev.shibasis.reaktor.core.server.cloudflare.KVNamespace.list","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-k-v-namespace/list.html","searchKeys":["list","abstract fun list(options: KVNamespaceListOptions = definedExternally): Promise<dynamic>","dev.shibasis.reaktor.core.server.cloudflare.KVNamespace.list"]},{"name":"abstract fun log(vararg data: Any)","description":"dev.shibasis.reaktor.core.server.cloudflare.Console.log","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-console/log.html","searchKeys":["log","abstract fun log(vararg data: Any)","dev.shibasis.reaktor.core.server.cloudflare.Console.log"]},{"name":"abstract fun newUniqueId(options: DurableObjectNamespaceNewUniqueIdOptions = definedExternally): DurableObjectId","description":"dev.shibasis.reaktor.core.server.cloudflare.DurableObjectNamespace.newUniqueId","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-durable-object-namespace/new-unique-id.html","searchKeys":["newUniqueId","abstract fun newUniqueId(options: DurableObjectNamespaceNewUniqueIdOptions = definedExternally): DurableObjectId","dev.shibasis.reaktor.core.server.cloudflare.DurableObjectNamespace.newUniqueId"]},{"name":"abstract fun noRetry()","description":"dev.shibasis.reaktor.core.server.cloudflare.ScheduledController.noRetry","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-scheduled-controller/no-retry.html","searchKeys":["noRetry","abstract fun noRetry()","dev.shibasis.reaktor.core.server.cloudflare.ScheduledController.noRetry"]},{"name":"abstract fun now(): Number","description":"dev.shibasis.reaktor.core.server.cloudflare.Performance.now","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-performance/now.html","searchKeys":["now","abstract fun now(): Number","dev.shibasis.reaktor.core.server.cloudflare.Performance.now"]},{"name":"abstract fun onEndTag(handler: (tag: EndTag) -> Any)","description":"dev.shibasis.reaktor.core.server.cloudflare.Element.onEndTag","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-element/on-end-tag.html","searchKeys":["onEndTag","abstract fun onEndTag(handler: (tag: EndTag) -> Any)","dev.shibasis.reaktor.core.server.cloudflare.Element.onEndTag"]},{"name":"abstract fun passThroughOnException()","description":"dev.shibasis.reaktor.core.server.cloudflare.ExecutionContext.passThroughOnException","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-execution-context/pass-through-on-exception.html","searchKeys":["passThroughOnException","abstract fun passThroughOnException()","dev.shibasis.reaktor.core.server.cloudflare.ExecutionContext.passThroughOnException"]},{"name":"abstract fun pipeTo(destination: WritableStream<R>, options: StreamPipeOptions = definedExternally): Promise<Unit>","description":"dev.shibasis.reaktor.core.server.cloudflare.ReadableStream.pipeTo","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-readable-stream/pipe-to.html","searchKeys":["pipeTo","abstract fun pipeTo(destination: WritableStream<R>, options: StreamPipeOptions = definedExternally): Promise<Unit>","dev.shibasis.reaktor.core.server.cloudflare.ReadableStream.pipeTo"]},{"name":"abstract fun prepend(content: String, options: ContentOptions = definedExternally): Element","description":"dev.shibasis.reaktor.core.server.cloudflare.Element.prepend","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-element/prepend.html","searchKeys":["prepend","abstract fun prepend(content: String, options: ContentOptions = definedExternally): Element","dev.shibasis.reaktor.core.server.cloudflare.Element.prepend"]},{"name":"abstract fun put(key: Key, value: ArrayBuffer): Promise<Unit>","description":"dev.shibasis.reaktor.core.server.cloudflare.KVNamespace.put","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-k-v-namespace/put.html","searchKeys":["put","abstract fun put(key: Key, value: ArrayBuffer): Promise<Unit>","dev.shibasis.reaktor.core.server.cloudflare.KVNamespace.put"]},{"name":"abstract fun put(key: Key, value: ArrayBuffer, options: KVNamespacePutOptions = definedExternally): Promise<Unit>","description":"dev.shibasis.reaktor.core.server.cloudflare.KVNamespace.put","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-k-v-namespace/put.html","searchKeys":["put","abstract fun put(key: Key, value: ArrayBuffer, options: KVNamespacePutOptions = definedExternally): Promise<Unit>","dev.shibasis.reaktor.core.server.cloudflare.KVNamespace.put"]},{"name":"abstract fun put(key: Key, value: ArrayBufferView): Promise<Unit>","description":"dev.shibasis.reaktor.core.server.cloudflare.KVNamespace.put","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-k-v-namespace/put.html","searchKeys":["put","abstract fun put(key: Key, value: ArrayBufferView): Promise<Unit>","dev.shibasis.reaktor.core.server.cloudflare.KVNamespace.put"]},{"name":"abstract fun put(key: Key, value: ArrayBufferView, options: KVNamespacePutOptions = definedExternally): Promise<Unit>","description":"dev.shibasis.reaktor.core.server.cloudflare.KVNamespace.put","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-k-v-namespace/put.html","searchKeys":["put","abstract fun put(key: Key, value: ArrayBufferView, options: KVNamespacePutOptions = definedExternally): Promise<Unit>","dev.shibasis.reaktor.core.server.cloudflare.KVNamespace.put"]},{"name":"abstract fun put(key: Key, value: ReadableStream<Uint8Array>): Promise<Unit>","description":"dev.shibasis.reaktor.core.server.cloudflare.KVNamespace.put","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-k-v-namespace/put.html","searchKeys":["put","abstract fun put(key: Key, value: ReadableStream<Uint8Array>): Promise<Unit>","dev.shibasis.reaktor.core.server.cloudflare.KVNamespace.put"]},{"name":"abstract fun put(key: Key, value: ReadableStream<Uint8Array>, options: KVNamespacePutOptions = definedExternally): Promise<Unit>","description":"dev.shibasis.reaktor.core.server.cloudflare.KVNamespace.put","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-k-v-namespace/put.html","searchKeys":["put","abstract fun put(key: Key, value: ReadableStream<Uint8Array>, options: KVNamespacePutOptions = definedExternally): Promise<Unit>","dev.shibasis.reaktor.core.server.cloudflare.KVNamespace.put"]},{"name":"abstract fun put(key: Key, value: String): Promise<Unit>","description":"dev.shibasis.reaktor.core.server.cloudflare.KVNamespace.put","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-k-v-namespace/put.html","searchKeys":["put","abstract fun put(key: Key, value: String): Promise<Unit>","dev.shibasis.reaktor.core.server.cloudflare.KVNamespace.put"]},{"name":"abstract fun put(key: Key, value: String, options: KVNamespacePutOptions = definedExternally): Promise<Unit>","description":"dev.shibasis.reaktor.core.server.cloudflare.KVNamespace.put","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-k-v-namespace/put.html","searchKeys":["put","abstract fun put(key: Key, value: String, options: KVNamespacePutOptions = definedExternally): Promise<Unit>","dev.shibasis.reaktor.core.server.cloudflare.KVNamespace.put"]},{"name":"abstract fun queueMicrotask(task: Function<*>)","description":"dev.shibasis.reaktor.core.server.cloudflare.ServiceWorkerGlobalScope.queueMicrotask","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-service-worker-global-scope/queue-microtask.html","searchKeys":["queueMicrotask","abstract fun queueMicrotask(task: Function<*>)","dev.shibasis.reaktor.core.server.cloudflare.ServiceWorkerGlobalScope.queueMicrotask"]},{"name":"abstract fun remove(): Comment","description":"dev.shibasis.reaktor.core.server.cloudflare.Comment.remove","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-comment/remove.html","searchKeys":["remove","abstract fun remove(): Comment","dev.shibasis.reaktor.core.server.cloudflare.Comment.remove"]},{"name":"abstract fun remove(): Element","description":"dev.shibasis.reaktor.core.server.cloudflare.Element.remove","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-element/remove.html","searchKeys":["remove","abstract fun remove(): Element","dev.shibasis.reaktor.core.server.cloudflare.Element.remove"]},{"name":"abstract fun remove(): EndTag","description":"dev.shibasis.reaktor.core.server.cloudflare.EndTag.remove","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-end-tag/remove.html","searchKeys":["remove","abstract fun remove(): EndTag","dev.shibasis.reaktor.core.server.cloudflare.EndTag.remove"]},{"name":"abstract fun remove(): Text","description":"dev.shibasis.reaktor.core.server.cloudflare.Text.remove","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-text/remove.html","searchKeys":["remove","abstract fun remove(): Text","dev.shibasis.reaktor.core.server.cloudflare.Text.remove"]},{"name":"abstract fun removeAndKeepContent(): Element","description":"dev.shibasis.reaktor.core.server.cloudflare.Element.removeAndKeepContent","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-element/remove-and-keep-content.html","searchKeys":["removeAndKeepContent","abstract fun removeAndKeepContent(): Element","dev.shibasis.reaktor.core.server.cloudflare.Element.removeAndKeepContent"]},{"name":"abstract fun removeAttribute(name: String): Element","description":"dev.shibasis.reaktor.core.server.cloudflare.Element.removeAttribute","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-element/remove-attribute.html","searchKeys":["removeAttribute","abstract fun removeAttribute(name: String): Element","dev.shibasis.reaktor.core.server.cloudflare.Element.removeAttribute"]},{"name":"abstract fun replace(content: String, options: ContentOptions = definedExternally): Comment","description":"dev.shibasis.reaktor.core.server.cloudflare.Comment.replace","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-comment/replace.html","searchKeys":["replace","abstract fun replace(content: String, options: ContentOptions = definedExternally): Comment","dev.shibasis.reaktor.core.server.cloudflare.Comment.replace"]},{"name":"abstract fun replace(content: String, options: ContentOptions = definedExternally): Element","description":"dev.shibasis.reaktor.core.server.cloudflare.Element.replace","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-element/replace.html","searchKeys":["replace","abstract fun replace(content: String, options: ContentOptions = definedExternally): Element","dev.shibasis.reaktor.core.server.cloudflare.Element.replace"]},{"name":"abstract fun replace(content: String, options: ContentOptions = definedExternally): Text","description":"dev.shibasis.reaktor.core.server.cloudflare.Text.replace","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-text/replace.html","searchKeys":["replace","abstract fun replace(content: String, options: ContentOptions = definedExternally): Text","dev.shibasis.reaktor.core.server.cloudflare.Text.replace"]},{"name":"abstract fun respond(bytesWritten: Number)","description":"dev.shibasis.reaktor.core.server.cloudflare.ReadableStreamBYOBRequest.respond","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-readable-stream-b-y-o-b-request/respond.html","searchKeys":["respond","abstract fun respond(bytesWritten: Number)","dev.shibasis.reaktor.core.server.cloudflare.ReadableStreamBYOBRequest.respond"]},{"name":"abstract fun respondWithNewView(view: ArrayBuffer)","description":"dev.shibasis.reaktor.core.server.cloudflare.ReadableStreamBYOBRequest.respondWithNewView","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-readable-stream-b-y-o-b-request/respond-with-new-view.html","searchKeys":["respondWithNewView","abstract fun respondWithNewView(view: ArrayBuffer)","dev.shibasis.reaktor.core.server.cloudflare.ReadableStreamBYOBRequest.respondWithNewView"]},{"name":"abstract fun respondWithNewView(view: ArrayBufferView)","description":"dev.shibasis.reaktor.core.server.cloudflare.ReadableStreamBYOBRequest.respondWithNewView","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-readable-stream-b-y-o-b-request/respond-with-new-view.html","searchKeys":["respondWithNewView","abstract fun respondWithNewView(view: ArrayBufferView)","dev.shibasis.reaktor.core.server.cloudflare.ReadableStreamBYOBRequest.respondWithNewView"]},{"name":"abstract fun retry()","description":"dev.shibasis.reaktor.core.server.cloudflare.Message.retry","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-message/retry.html","searchKeys":["retry","abstract fun retry()","dev.shibasis.reaktor.core.server.cloudflare.Message.retry"]},{"name":"abstract fun retryAll()","description":"dev.shibasis.reaktor.core.server.cloudflare.MessageBatch.retryAll","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-message-batch/retry-all.html","searchKeys":["retryAll","abstract fun retryAll()","dev.shibasis.reaktor.core.server.cloudflare.MessageBatch.retryAll"]},{"name":"abstract fun retryAll()","description":"dev.shibasis.reaktor.core.server.cloudflare.QueueEvent.retryAll","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-queue-event/retry-all.html","searchKeys":["retryAll","abstract fun retryAll()","dev.shibasis.reaktor.core.server.cloudflare.QueueEvent.retryAll"]},{"name":"abstract fun rollback()","description":"dev.shibasis.reaktor.core.server.cloudflare.DurableObjectTransaction.rollback","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-durable-object-transaction/rollback.html","searchKeys":["rollback","abstract fun rollback()","dev.shibasis.reaktor.core.server.cloudflare.DurableObjectTransaction.rollback"]},{"name":"abstract fun send(message: Body): Promise<Unit>","description":"dev.shibasis.reaktor.core.server.cloudflare.Queue.send","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-queue/send.html","searchKeys":["send","abstract fun send(message: Body): Promise<Unit>","dev.shibasis.reaktor.core.server.cloudflare.Queue.send"]},{"name":"abstract fun send(message: EmailMessage): Promise<Unit>","description":"dev.shibasis.reaktor.core.server.cloudflare.SendEmail.send","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-send-email/send.html","searchKeys":["send","abstract fun send(message: EmailMessage): Promise<Unit>","dev.shibasis.reaktor.core.server.cloudflare.SendEmail.send"]},{"name":"abstract fun sendBatch(messages: Iterable<MessageSendRequest<Body>>): Promise<Unit>","description":"dev.shibasis.reaktor.core.server.cloudflare.Queue.sendBatch","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-queue/send-batch.html","searchKeys":["sendBatch","abstract fun sendBatch(messages: Iterable<MessageSendRequest<Body>>): Promise<Unit>","dev.shibasis.reaktor.core.server.cloudflare.Queue.sendBatch"]},{"name":"abstract fun setAlarm(scheduledTime: Date): Promise<Unit>","description":"dev.shibasis.reaktor.core.server.cloudflare.DurableObjectStorage.setAlarm","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-durable-object-storage/set-alarm.html","searchKeys":["setAlarm","abstract fun setAlarm(scheduledTime: Date): Promise<Unit>","dev.shibasis.reaktor.core.server.cloudflare.DurableObjectStorage.setAlarm"]},{"name":"abstract fun setAlarm(scheduledTime: Date): Promise<Unit>","description":"dev.shibasis.reaktor.core.server.cloudflare.DurableObjectTransaction.setAlarm","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-durable-object-transaction/set-alarm.html","searchKeys":["setAlarm","abstract fun setAlarm(scheduledTime: Date): Promise<Unit>","dev.shibasis.reaktor.core.server.cloudflare.DurableObjectTransaction.setAlarm"]},{"name":"abstract fun setAlarm(scheduledTime: Date, options: DurableObjectSetAlarmOptions = definedExternally): Promise<Unit>","description":"dev.shibasis.reaktor.core.server.cloudflare.DurableObjectStorage.setAlarm","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-durable-object-storage/set-alarm.html","searchKeys":["setAlarm","abstract fun setAlarm(scheduledTime: Date, options: DurableObjectSetAlarmOptions = definedExternally): Promise<Unit>","dev.shibasis.reaktor.core.server.cloudflare.DurableObjectStorage.setAlarm"]},{"name":"abstract fun setAlarm(scheduledTime: Date, options: DurableObjectSetAlarmOptions = definedExternally): Promise<Unit>","description":"dev.shibasis.reaktor.core.server.cloudflare.DurableObjectTransaction.setAlarm","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-durable-object-transaction/set-alarm.html","searchKeys":["setAlarm","abstract fun setAlarm(scheduledTime: Date, options: DurableObjectSetAlarmOptions = definedExternally): Promise<Unit>","dev.shibasis.reaktor.core.server.cloudflare.DurableObjectTransaction.setAlarm"]},{"name":"abstract fun setAlarm(scheduledTime: Number): Promise<Unit>","description":"dev.shibasis.reaktor.core.server.cloudflare.DurableObjectStorage.setAlarm","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-durable-object-storage/set-alarm.html","searchKeys":["setAlarm","abstract fun setAlarm(scheduledTime: Number): Promise<Unit>","dev.shibasis.reaktor.core.server.cloudflare.DurableObjectStorage.setAlarm"]},{"name":"abstract fun setAlarm(scheduledTime: Number): Promise<Unit>","description":"dev.shibasis.reaktor.core.server.cloudflare.DurableObjectTransaction.setAlarm","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-durable-object-transaction/set-alarm.html","searchKeys":["setAlarm","abstract fun setAlarm(scheduledTime: Number): Promise<Unit>","dev.shibasis.reaktor.core.server.cloudflare.DurableObjectTransaction.setAlarm"]},{"name":"abstract fun setAlarm(scheduledTime: Number, options: DurableObjectSetAlarmOptions = definedExternally): Promise<Unit>","description":"dev.shibasis.reaktor.core.server.cloudflare.DurableObjectStorage.setAlarm","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-durable-object-storage/set-alarm.html","searchKeys":["setAlarm","abstract fun setAlarm(scheduledTime: Number, options: DurableObjectSetAlarmOptions = definedExternally): Promise<Unit>","dev.shibasis.reaktor.core.server.cloudflare.DurableObjectStorage.setAlarm"]},{"name":"abstract fun setAlarm(scheduledTime: Number, options: DurableObjectSetAlarmOptions = definedExternally): Promise<Unit>","description":"dev.shibasis.reaktor.core.server.cloudflare.DurableObjectTransaction.setAlarm","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-durable-object-transaction/set-alarm.html","searchKeys":["setAlarm","abstract fun setAlarm(scheduledTime: Number, options: DurableObjectSetAlarmOptions = definedExternally): Promise<Unit>","dev.shibasis.reaktor.core.server.cloudflare.DurableObjectTransaction.setAlarm"]},{"name":"abstract fun setAttribute(name: String, value: String): Element","description":"dev.shibasis.reaktor.core.server.cloudflare.Element.setAttribute","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-element/set-attribute.html","searchKeys":["setAttribute","abstract fun setAttribute(name: String, value: String): Element","dev.shibasis.reaktor.core.server.cloudflare.Element.setAttribute"]},{"name":"abstract fun setInnerContent(content: String, options: ContentOptions = definedExternally): Element","description":"dev.shibasis.reaktor.core.server.cloudflare.Element.setInnerContent","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-element/set-inner-content.html","searchKeys":["setInnerContent","abstract fun setInnerContent(content: String, options: ContentOptions = definedExternally): Element","dev.shibasis.reaktor.core.server.cloudflare.Element.setInnerContent"]},{"name":"abstract fun setInterval(callback: (args: Any) -> Unit): Number","description":"dev.shibasis.reaktor.core.server.cloudflare.ServiceWorkerGlobalScope.setInterval","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-service-worker-global-scope/set-interval.html","searchKeys":["setInterval","abstract fun setInterval(callback: (args: Any) -> Unit): Number","dev.shibasis.reaktor.core.server.cloudflare.ServiceWorkerGlobalScope.setInterval"]},{"name":"abstract fun setInterval(callback: (args: Any) -> Unit, msDelay: Number = definedExternally): Number","description":"dev.shibasis.reaktor.core.server.cloudflare.ServiceWorkerGlobalScope.setInterval","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-service-worker-global-scope/set-interval.html","searchKeys":["setInterval","abstract fun setInterval(callback: (args: Any) -> Unit, msDelay: Number = definedExternally): Number","dev.shibasis.reaktor.core.server.cloudflare.ServiceWorkerGlobalScope.setInterval"]},{"name":"abstract fun setReject(reason: String)","description":"dev.shibasis.reaktor.core.server.cloudflare.ForwardableEmailMessage.setReject","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-forwardable-email-message/set-reject.html","searchKeys":["setReject","abstract fun setReject(reason: String)","dev.shibasis.reaktor.core.server.cloudflare.ForwardableEmailMessage.setReject"]},{"name":"abstract fun setTimeout(callback: (args: Any) -> Unit): Number","description":"dev.shibasis.reaktor.core.server.cloudflare.ServiceWorkerGlobalScope.setTimeout","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-service-worker-global-scope/set-timeout.html","searchKeys":["setTimeout","abstract fun setTimeout(callback: (args: Any) -> Unit): Number","dev.shibasis.reaktor.core.server.cloudflare.ServiceWorkerGlobalScope.setTimeout"]},{"name":"abstract fun setTimeout(callback: (args: Any) -> Unit, msDelay: Number = definedExternally): Number","description":"dev.shibasis.reaktor.core.server.cloudflare.ServiceWorkerGlobalScope.setTimeout","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-service-worker-global-scope/set-timeout.html","searchKeys":["setTimeout","abstract fun setTimeout(callback: (args: Any) -> Unit, msDelay: Number = definedExternally): Number","dev.shibasis.reaktor.core.server.cloudflare.ServiceWorkerGlobalScope.setTimeout"]},{"name":"abstract fun setWebSocketAutoResponse(maybeReqResp: WebSocketRequestResponsePair = definedExternally)","description":"dev.shibasis.reaktor.core.server.cloudflare.DurableObjectState.setWebSocketAutoResponse","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-durable-object-state/set-web-socket-auto-response.html","searchKeys":["setWebSocketAutoResponse","abstract fun setWebSocketAutoResponse(maybeReqResp: WebSocketRequestResponsePair = definedExternally)","dev.shibasis.reaktor.core.server.cloudflare.DurableObjectState.setWebSocketAutoResponse"]},{"name":"abstract fun sync(): Promise<Unit>","description":"dev.shibasis.reaktor.core.server.cloudflare.DurableObjectStorage.sync","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-durable-object-storage/sync.html","searchKeys":["sync","abstract fun sync(): Promise<Unit>","dev.shibasis.reaktor.core.server.cloudflare.DurableObjectStorage.sync"]},{"name":"abstract fun table(tabularData: Any = definedExternally, properties: Array<String> = definedExternally)","description":"dev.shibasis.reaktor.core.server.cloudflare.Console.table","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-console/table.html","searchKeys":["table","abstract fun table(tabularData: Any = definedExternally, properties: Array<String> = definedExternally)","dev.shibasis.reaktor.core.server.cloudflare.Console.table"]},{"name":"abstract fun tee(): dynamic","description":"dev.shibasis.reaktor.core.server.cloudflare.ReadableStream.tee","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-readable-stream/tee.html","searchKeys":["tee","abstract fun tee(): dynamic","dev.shibasis.reaktor.core.server.cloudflare.ReadableStream.tee"]},{"name":"abstract fun test(): Int","description":"dev.shibasis.reaktor.core.adapters.StorageAdapter.test","location":"reaktor-core/dev.shibasis.reaktor.core.adapters/-storage-adapter/test.html","searchKeys":["test","abstract fun test(): Int","dev.shibasis.reaktor.core.adapters.StorageAdapter.test"]},{"name":"abstract fun text(): Promise<String>","description":"dev.shibasis.reaktor.core.server.cloudflare.R2ObjectBody.text","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-r2-object-body/text.html","searchKeys":["text","abstract fun text(): Promise<String>","dev.shibasis.reaktor.core.server.cloudflare.R2ObjectBody.text"]},{"name":"abstract fun time(label: String = definedExternally)","description":"dev.shibasis.reaktor.core.server.cloudflare.Console.time","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-console/time.html","searchKeys":["time","abstract fun time(label: String = definedExternally)","dev.shibasis.reaktor.core.server.cloudflare.Console.time"]},{"name":"abstract fun timeEnd(label: String = definedExternally)","description":"dev.shibasis.reaktor.core.server.cloudflare.Console.timeEnd","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-console/time-end.html","searchKeys":["timeEnd","abstract fun timeEnd(label: String = definedExternally)","dev.shibasis.reaktor.core.server.cloudflare.Console.timeEnd"]},{"name":"abstract fun timeLog(label: String = definedExternally, vararg data: Any)","description":"dev.shibasis.reaktor.core.server.cloudflare.Console.timeLog","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-console/time-log.html","searchKeys":["timeLog","abstract fun timeLog(label: String = definedExternally, vararg data: Any)","dev.shibasis.reaktor.core.server.cloudflare.Console.timeLog"]},{"name":"abstract fun timeStamp(label: String = definedExternally)","description":"dev.shibasis.reaktor.core.server.cloudflare.Console.timeStamp","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-console/time-stamp.html","searchKeys":["timeStamp","abstract fun timeStamp(label: String = definedExternally)","dev.shibasis.reaktor.core.server.cloudflare.Console.timeStamp"]},{"name":"abstract fun toJSON(): R2StringChecksums","description":"dev.shibasis.reaktor.core.server.cloudflare.R2Checksums.toJSON","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-r2-checksums/to-j-s-o-n.html","searchKeys":["toJSON","abstract fun toJSON(): R2StringChecksums","dev.shibasis.reaktor.core.server.cloudflare.R2Checksums.toJSON"]},{"name":"abstract fun trace(vararg data: Any)","description":"dev.shibasis.reaktor.core.server.cloudflare.Console.trace","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-console/trace.html","searchKeys":["trace","abstract fun trace(vararg data: Any)","dev.shibasis.reaktor.core.server.cloudflare.Console.trace"]},{"name":"abstract fun uploadPart(partNumber: Number, value: ArrayBuffer): Promise<R2UploadedPart>","description":"dev.shibasis.reaktor.core.server.cloudflare.R2MultipartUpload.uploadPart","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-r2-multipart-upload/upload-part.html","searchKeys":["uploadPart","abstract fun uploadPart(partNumber: Number, value: ArrayBuffer): Promise<R2UploadedPart>","dev.shibasis.reaktor.core.server.cloudflare.R2MultipartUpload.uploadPart"]},{"name":"abstract fun uploadPart(partNumber: Number, value: ArrayBufferView): Promise<R2UploadedPart>","description":"dev.shibasis.reaktor.core.server.cloudflare.R2MultipartUpload.uploadPart","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-r2-multipart-upload/upload-part.html","searchKeys":["uploadPart","abstract fun uploadPart(partNumber: Number, value: ArrayBufferView): Promise<R2UploadedPart>","dev.shibasis.reaktor.core.server.cloudflare.R2MultipartUpload.uploadPart"]},{"name":"abstract fun uploadPart(partNumber: Number, value: Blob): Promise<R2UploadedPart>","description":"dev.shibasis.reaktor.core.server.cloudflare.R2MultipartUpload.uploadPart","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-r2-multipart-upload/upload-part.html","searchKeys":["uploadPart","abstract fun uploadPart(partNumber: Number, value: Blob): Promise<R2UploadedPart>","dev.shibasis.reaktor.core.server.cloudflare.R2MultipartUpload.uploadPart"]},{"name":"abstract fun uploadPart(partNumber: Number, value: ReadableStream<Uint8Array>): Promise<R2UploadedPart>","description":"dev.shibasis.reaktor.core.server.cloudflare.R2MultipartUpload.uploadPart","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-r2-multipart-upload/upload-part.html","searchKeys":["uploadPart","abstract fun uploadPart(partNumber: Number, value: ReadableStream<Uint8Array>): Promise<R2UploadedPart>","dev.shibasis.reaktor.core.server.cloudflare.R2MultipartUpload.uploadPart"]},{"name":"abstract fun uploadPart(partNumber: Number, value: String): Promise<R2UploadedPart>","description":"dev.shibasis.reaktor.core.server.cloudflare.R2MultipartUpload.uploadPart","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-r2-multipart-upload/upload-part.html","searchKeys":["uploadPart","abstract fun uploadPart(partNumber: Number, value: String): Promise<R2UploadedPart>","dev.shibasis.reaktor.core.server.cloudflare.R2MultipartUpload.uploadPart"]},{"name":"abstract fun values(options: ReadableStreamValuesOptions = definedExternally): AsyncIterable<R>","description":"dev.shibasis.reaktor.core.server.cloudflare.ReadableStream.values","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-readable-stream/values.html","searchKeys":["values","abstract fun values(options: ReadableStreamValuesOptions = definedExternally): AsyncIterable<R>","dev.shibasis.reaktor.core.server.cloudflare.ReadableStream.values"]},{"name":"abstract fun wait(delay: Number, maybeOptions: SchedulerWaitOptions = definedExternally): Promise<Unit>","description":"dev.shibasis.reaktor.core.server.cloudflare.Scheduler.wait","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-scheduler/wait.html","searchKeys":["wait","abstract fun wait(delay: Number, maybeOptions: SchedulerWaitOptions = definedExternally): Promise<Unit>","dev.shibasis.reaktor.core.server.cloudflare.Scheduler.wait"]},{"name":"abstract fun waitUntil(promise: Promise<Any>)","description":"dev.shibasis.reaktor.core.server.cloudflare.DurableObjectState.waitUntil","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-durable-object-state/wait-until.html","searchKeys":["waitUntil","abstract fun waitUntil(promise: Promise<Any>)","dev.shibasis.reaktor.core.server.cloudflare.DurableObjectState.waitUntil"]},{"name":"abstract fun waitUntil(promise: Promise<Any>)","description":"dev.shibasis.reaktor.core.server.cloudflare.ExecutionContext.waitUntil","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-execution-context/wait-until.html","searchKeys":["waitUntil","abstract fun waitUntil(promise: Promise<Any>)","dev.shibasis.reaktor.core.server.cloudflare.ExecutionContext.waitUntil"]},{"name":"abstract fun warn(vararg data: Any)","description":"dev.shibasis.reaktor.core.server.cloudflare.Console.warn","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-console/warn.html","searchKeys":["warn","abstract fun warn(vararg data: Any)","dev.shibasis.reaktor.core.server.cloudflare.Console.warn"]},{"name":"abstract fun writeDataPoint(event: AnalyticsEngineDataPoint = definedExternally)","description":"dev.shibasis.reaktor.core.server.cloudflare.AnalyticsEngineDataset.writeDataPoint","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-analytics-engine-dataset/write-data-point.html","searchKeys":["writeDataPoint","abstract fun writeDataPoint(event: AnalyticsEngineDataPoint = definedExternally)","dev.shibasis.reaktor.core.server.cloudflare.AnalyticsEngineDataset.writeDataPoint"]},{"name":"abstract operator fun get(key: String): String?","description":"dev.shibasis.reaktor.core.server.cloudflare.RequestInitCfPropertiesImage.get","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-request-init-cf-properties-image/get.html","searchKeys":["get","abstract operator fun get(key: String): String?","dev.shibasis.reaktor.core.server.cloudflare.RequestInitCfPropertiesImage.get"]},{"name":"abstract operator fun set(key: String, value: String?)","description":"dev.shibasis.reaktor.core.server.cloudflare.RequestInitCfPropertiesImage.set","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-request-init-cf-properties-image/set.html","searchKeys":["set","abstract operator fun set(key: String, value: String?)","dev.shibasis.reaktor.core.server.cloudflare.RequestInitCfPropertiesImage.set"]},{"name":"abstract override fun toString(): String","description":"dev.shibasis.reaktor.core.server.cloudflare.DurableObjectId.toString","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-durable-object-id/to-string.html","searchKeys":["toString","abstract override fun toString(): String","dev.shibasis.reaktor.core.server.cloudflare.DurableObjectId.toString"]},{"name":"abstract override var botManagement: IncomingRequestCfPropertiesBotManagementBase","description":"dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesBotManagementEnterprise.botManagement","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-incoming-request-cf-properties-bot-management-enterprise/bot-management.html","searchKeys":["botManagement","abstract override var botManagement: IncomingRequestCfPropertiesBotManagementBase","dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesBotManagementEnterprise.botManagement"]},{"name":"abstract suspend fun request(vararg permissions: String): Boolean","description":"dev.shibasis.reaktor.core.adapters.PermissionAdapter.request","location":"reaktor-core/dev.shibasis.reaktor.core.adapters/-permission-adapter/request.html","searchKeys":["request","abstract suspend fun request(vararg permissions: String): Boolean","dev.shibasis.reaktor.core.adapters.PermissionAdapter.request"]},{"name":"abstract val DB: D1Database","description":"dev.shibasis.reaktor.core.server.cloudflare.Env.DB","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-env/-d-b.html","searchKeys":["DB","abstract val DB: D1Database","dev.shibasis.reaktor.core.server.cloudflare.Env.DB"]},{"name":"abstract val FILE: R2Bucket","description":"dev.shibasis.reaktor.core.server.cloudflare.Env.FILE","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-env/-f-i-l-e.html","searchKeys":["FILE","abstract val FILE: R2Bucket","dev.shibasis.reaktor.core.server.cloudflare.Env.FILE"]},{"name":"abstract val alarm: () -> dynamic?","description":"dev.shibasis.reaktor.core.server.cloudflare.DurableObject.alarm","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-durable-object/alarm.html","searchKeys":["alarm","abstract val alarm: () -> dynamic?","dev.shibasis.reaktor.core.server.cloudflare.DurableObject.alarm"]},{"name":"abstract val comments: (comment: Comment) -> dynamic?","description":"dev.shibasis.reaktor.core.server.cloudflare.HTMLRewriterDocumentContentHandlers.comments","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-h-t-m-l-rewriter-document-content-handlers/comments.html","searchKeys":["comments","abstract val comments: (comment: Comment) -> dynamic?","dev.shibasis.reaktor.core.server.cloudflare.HTMLRewriterDocumentContentHandlers.comments"]},{"name":"abstract val comments: (comment: Comment) -> dynamic?","description":"dev.shibasis.reaktor.core.server.cloudflare.HTMLRewriterElementContentHandlers.comments","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-h-t-m-l-rewriter-element-content-handlers/comments.html","searchKeys":["comments","abstract val comments: (comment: Comment) -> dynamic?","dev.shibasis.reaktor.core.server.cloudflare.HTMLRewriterElementContentHandlers.comments"]},{"name":"abstract val doctype: (doctype: Doctype) -> dynamic?","description":"dev.shibasis.reaktor.core.server.cloudflare.HTMLRewriterDocumentContentHandlers.doctype","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-h-t-m-l-rewriter-document-content-handlers/doctype.html","searchKeys":["doctype","abstract val doctype: (doctype: Doctype) -> dynamic?","dev.shibasis.reaktor.core.server.cloudflare.HTMLRewriterDocumentContentHandlers.doctype"]},{"name":"abstract val element: (element: Element) -> dynamic?","description":"dev.shibasis.reaktor.core.server.cloudflare.HTMLRewriterElementContentHandlers.element","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-h-t-m-l-rewriter-element-content-handlers/element.html","searchKeys":["element","abstract val element: (element: Element) -> dynamic?","dev.shibasis.reaktor.core.server.cloudflare.HTMLRewriterElementContentHandlers.element"]},{"name":"abstract val end: (end: DocumentEnd) -> dynamic?","description":"dev.shibasis.reaktor.core.server.cloudflare.HTMLRewriterDocumentContentHandlers.end","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-h-t-m-l-rewriter-document-content-handlers/end.html","searchKeys":["end","abstract val end: (end: DocumentEnd) -> dynamic?","dev.shibasis.reaktor.core.server.cloudflare.HTMLRewriterDocumentContentHandlers.end"]},{"name":"abstract val text: (element: Text) -> dynamic?","description":"dev.shibasis.reaktor.core.server.cloudflare.HTMLRewriterElementContentHandlers.text","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-h-t-m-l-rewriter-element-content-handlers/text.html","searchKeys":["text","abstract val text: (element: Text) -> dynamic?","dev.shibasis.reaktor.core.server.cloudflare.HTMLRewriterElementContentHandlers.text"]},{"name":"abstract val text: (text: Text) -> dynamic?","description":"dev.shibasis.reaktor.core.server.cloudflare.HTMLRewriterDocumentContentHandlers.text","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-h-t-m-l-rewriter-document-content-handlers/text.html","searchKeys":["text","abstract val text: (text: Text) -> dynamic?","dev.shibasis.reaktor.core.server.cloudflare.HTMLRewriterDocumentContentHandlers.text"]},{"name":"abstract var AbortController: Any","description":"dev.shibasis.reaktor.core.server.cloudflare.ServiceWorkerGlobalScope.AbortController","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-service-worker-global-scope/-abort-controller.html","searchKeys":["AbortController","abstract var AbortController: Any","dev.shibasis.reaktor.core.server.cloudflare.ServiceWorkerGlobalScope.AbortController"]},{"name":"abstract var AbortSignal: Any","description":"dev.shibasis.reaktor.core.server.cloudflare.ServiceWorkerGlobalScope.AbortSignal","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-service-worker-global-scope/-abort-signal.html","searchKeys":["AbortSignal","abstract var AbortSignal: Any","dev.shibasis.reaktor.core.server.cloudflare.ServiceWorkerGlobalScope.AbortSignal"]},{"name":"abstract var Blob: Any","description":"dev.shibasis.reaktor.core.server.cloudflare.ServiceWorkerGlobalScope.Blob","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-service-worker-global-scope/-blob.html","searchKeys":["Blob","abstract var Blob: Any","dev.shibasis.reaktor.core.server.cloudflare.ServiceWorkerGlobalScope.Blob"]},{"name":"abstract var Body: Any","description":"dev.shibasis.reaktor.core.server.cloudflare.ServiceWorkerGlobalScope.Body","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-service-worker-global-scope/-body.html","searchKeys":["Body","abstract var Body: Any","dev.shibasis.reaktor.core.server.cloudflare.ServiceWorkerGlobalScope.Body"]},{"name":"abstract var ByteLengthQueuingStrategy: Any","description":"dev.shibasis.reaktor.core.server.cloudflare.ServiceWorkerGlobalScope.ByteLengthQueuingStrategy","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-service-worker-global-scope/-byte-length-queuing-strategy.html","searchKeys":["ByteLengthQueuingStrategy","abstract var ByteLengthQueuingStrategy: Any","dev.shibasis.reaktor.core.server.cloudflare.ServiceWorkerGlobalScope.ByteLengthQueuingStrategy"]},{"name":"abstract var Cache: Any","description":"dev.shibasis.reaktor.core.server.cloudflare.ServiceWorkerGlobalScope.Cache","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-service-worker-global-scope/-cache.html","searchKeys":["Cache","abstract var Cache: Any","dev.shibasis.reaktor.core.server.cloudflare.ServiceWorkerGlobalScope.Cache"]},{"name":"abstract var CacheStorage: Any","description":"dev.shibasis.reaktor.core.server.cloudflare.ServiceWorkerGlobalScope.CacheStorage","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-service-worker-global-scope/-cache-storage.html","searchKeys":["CacheStorage","abstract var CacheStorage: Any","dev.shibasis.reaktor.core.server.cloudflare.ServiceWorkerGlobalScope.CacheStorage"]},{"name":"abstract var CloseEvent: Any","description":"dev.shibasis.reaktor.core.server.cloudflare.ServiceWorkerGlobalScope.CloseEvent","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-service-worker-global-scope/-close-event.html","searchKeys":["CloseEvent","abstract var CloseEvent: Any","dev.shibasis.reaktor.core.server.cloudflare.ServiceWorkerGlobalScope.CloseEvent"]},{"name":"abstract var CompressionStream: Any","description":"dev.shibasis.reaktor.core.server.cloudflare.ServiceWorkerGlobalScope.CompressionStream","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-service-worker-global-scope/-compression-stream.html","searchKeys":["CompressionStream","abstract var CompressionStream: Any","dev.shibasis.reaktor.core.server.cloudflare.ServiceWorkerGlobalScope.CompressionStream"]},{"name":"abstract var CountQueuingStrategy: Any","description":"dev.shibasis.reaktor.core.server.cloudflare.ServiceWorkerGlobalScope.CountQueuingStrategy","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-service-worker-global-scope/-count-queuing-strategy.html","searchKeys":["CountQueuingStrategy","abstract var CountQueuingStrategy: Any","dev.shibasis.reaktor.core.server.cloudflare.ServiceWorkerGlobalScope.CountQueuingStrategy"]},{"name":"abstract var Crypto: Any","description":"dev.shibasis.reaktor.core.server.cloudflare.ServiceWorkerGlobalScope.Crypto","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-service-worker-global-scope/-crypto.html","searchKeys":["Crypto","abstract var Crypto: Any","dev.shibasis.reaktor.core.server.cloudflare.ServiceWorkerGlobalScope.Crypto"]},{"name":"abstract var CryptoKey: Any","description":"dev.shibasis.reaktor.core.server.cloudflare.ServiceWorkerGlobalScope.CryptoKey","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-service-worker-global-scope/-crypto-key.html","searchKeys":["CryptoKey","abstract var CryptoKey: Any","dev.shibasis.reaktor.core.server.cloudflare.ServiceWorkerGlobalScope.CryptoKey"]},{"name":"abstract var DOMException: Any","description":"dev.shibasis.reaktor.core.server.cloudflare.ServiceWorkerGlobalScope.DOMException","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-service-worker-global-scope/-d-o-m-exception.html","searchKeys":["DOMException","abstract var DOMException: Any","dev.shibasis.reaktor.core.server.cloudflare.ServiceWorkerGlobalScope.DOMException"]},{"name":"abstract var DecompressionStream: Any","description":"dev.shibasis.reaktor.core.server.cloudflare.ServiceWorkerGlobalScope.DecompressionStream","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-service-worker-global-scope/-decompression-stream.html","searchKeys":["DecompressionStream","abstract var DecompressionStream: Any","dev.shibasis.reaktor.core.server.cloudflare.ServiceWorkerGlobalScope.DecompressionStream"]},{"name":"abstract var Event: Any","description":"dev.shibasis.reaktor.core.server.cloudflare.ServiceWorkerGlobalScope.Event","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-service-worker-global-scope/-event.html","searchKeys":["Event","abstract var Event: Any","dev.shibasis.reaktor.core.server.cloudflare.ServiceWorkerGlobalScope.Event"]},{"name":"abstract var ExtendableEvent: Any","description":"dev.shibasis.reaktor.core.server.cloudflare.ServiceWorkerGlobalScope.ExtendableEvent","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-service-worker-global-scope/-extendable-event.html","searchKeys":["ExtendableEvent","abstract var ExtendableEvent: Any","dev.shibasis.reaktor.core.server.cloudflare.ServiceWorkerGlobalScope.ExtendableEvent"]},{"name":"abstract var FetchEvent: Any","description":"dev.shibasis.reaktor.core.server.cloudflare.ServiceWorkerGlobalScope.FetchEvent","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-service-worker-global-scope/-fetch-event.html","searchKeys":["FetchEvent","abstract var FetchEvent: Any","dev.shibasis.reaktor.core.server.cloudflare.ServiceWorkerGlobalScope.FetchEvent"]},{"name":"abstract var File: Any","description":"dev.shibasis.reaktor.core.server.cloudflare.ServiceWorkerGlobalScope.File","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-service-worker-global-scope/-file.html","searchKeys":["File","abstract var File: Any","dev.shibasis.reaktor.core.server.cloudflare.ServiceWorkerGlobalScope.File"]},{"name":"abstract var FixedLengthStream: Any","description":"dev.shibasis.reaktor.core.server.cloudflare.ServiceWorkerGlobalScope.FixedLengthStream","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-service-worker-global-scope/-fixed-length-stream.html","searchKeys":["FixedLengthStream","abstract var FixedLengthStream: Any","dev.shibasis.reaktor.core.server.cloudflare.ServiceWorkerGlobalScope.FixedLengthStream"]},{"name":"abstract var FormData: Any","description":"dev.shibasis.reaktor.core.server.cloudflare.ServiceWorkerGlobalScope.FormData","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-service-worker-global-scope/-form-data.html","searchKeys":["FormData","abstract var FormData: Any","dev.shibasis.reaktor.core.server.cloudflare.ServiceWorkerGlobalScope.FormData"]},{"name":"abstract var HTMLRewriter: Any","description":"dev.shibasis.reaktor.core.server.cloudflare.ServiceWorkerGlobalScope.HTMLRewriter","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-service-worker-global-scope/-h-t-m-l-rewriter.html","searchKeys":["HTMLRewriter","abstract var HTMLRewriter: Any","dev.shibasis.reaktor.core.server.cloudflare.ServiceWorkerGlobalScope.HTMLRewriter"]},{"name":"abstract var Headers: Any","description":"dev.shibasis.reaktor.core.server.cloudflare.ServiceWorkerGlobalScope.Headers","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-service-worker-global-scope/-headers.html","searchKeys":["Headers","abstract var Headers: Any","dev.shibasis.reaktor.core.server.cloudflare.ServiceWorkerGlobalScope.Headers"]},{"name":"abstract var IdentityTransformStream: Any","description":"dev.shibasis.reaktor.core.server.cloudflare.ServiceWorkerGlobalScope.IdentityTransformStream","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-service-worker-global-scope/-identity-transform-stream.html","searchKeys":["IdentityTransformStream","abstract var IdentityTransformStream: Any","dev.shibasis.reaktor.core.server.cloudflare.ServiceWorkerGlobalScope.IdentityTransformStream"]},{"name":"abstract var MessageEvent: Any","description":"dev.shibasis.reaktor.core.server.cloudflare.ServiceWorkerGlobalScope.MessageEvent","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-service-worker-global-scope/-message-event.html","searchKeys":["MessageEvent","abstract var MessageEvent: Any","dev.shibasis.reaktor.core.server.cloudflare.ServiceWorkerGlobalScope.MessageEvent"]},{"name":"abstract var PromiseRejectionEvent: Any","description":"dev.shibasis.reaktor.core.server.cloudflare.ServiceWorkerGlobalScope.PromiseRejectionEvent","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-service-worker-global-scope/-promise-rejection-event.html","searchKeys":["PromiseRejectionEvent","abstract var PromiseRejectionEvent: Any","dev.shibasis.reaktor.core.server.cloudflare.ServiceWorkerGlobalScope.PromiseRejectionEvent"]},{"name":"abstract var ReadableStream: Any","description":"dev.shibasis.reaktor.core.server.cloudflare.ServiceWorkerGlobalScope.ReadableStream","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-service-worker-global-scope/-readable-stream.html","searchKeys":["ReadableStream","abstract var ReadableStream: Any","dev.shibasis.reaktor.core.server.cloudflare.ServiceWorkerGlobalScope.ReadableStream"]},{"name":"abstract var ReadableStreamBYOBReader: Any","description":"dev.shibasis.reaktor.core.server.cloudflare.ServiceWorkerGlobalScope.ReadableStreamBYOBReader","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-service-worker-global-scope/-readable-stream-b-y-o-b-reader.html","searchKeys":["ReadableStreamBYOBReader","abstract var ReadableStreamBYOBReader: Any","dev.shibasis.reaktor.core.server.cloudflare.ServiceWorkerGlobalScope.ReadableStreamBYOBReader"]},{"name":"abstract var ReadableStreamDefaultReader: Any","description":"dev.shibasis.reaktor.core.server.cloudflare.ServiceWorkerGlobalScope.ReadableStreamDefaultReader","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-service-worker-global-scope/-readable-stream-default-reader.html","searchKeys":["ReadableStreamDefaultReader","abstract var ReadableStreamDefaultReader: Any","dev.shibasis.reaktor.core.server.cloudflare.ServiceWorkerGlobalScope.ReadableStreamDefaultReader"]},{"name":"abstract var Request: Any","description":"dev.shibasis.reaktor.core.server.cloudflare.ServiceWorkerGlobalScope.Request","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-service-worker-global-scope/-request.html","searchKeys":["Request","abstract var Request: Any","dev.shibasis.reaktor.core.server.cloudflare.ServiceWorkerGlobalScope.Request"]},{"name":"abstract var Response: Any","description":"dev.shibasis.reaktor.core.server.cloudflare.ServiceWorkerGlobalScope.Response","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-service-worker-global-scope/-response.html","searchKeys":["Response","abstract var Response: Any","dev.shibasis.reaktor.core.server.cloudflare.ServiceWorkerGlobalScope.Response"]},{"name":"abstract var ScheduledEvent: Any","description":"dev.shibasis.reaktor.core.server.cloudflare.ServiceWorkerGlobalScope.ScheduledEvent","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-service-worker-global-scope/-scheduled-event.html","searchKeys":["ScheduledEvent","abstract var ScheduledEvent: Any","dev.shibasis.reaktor.core.server.cloudflare.ServiceWorkerGlobalScope.ScheduledEvent"]},{"name":"abstract var SubtleCrypto: Any","description":"dev.shibasis.reaktor.core.server.cloudflare.ServiceWorkerGlobalScope.SubtleCrypto","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-service-worker-global-scope/-subtle-crypto.html","searchKeys":["SubtleCrypto","abstract var SubtleCrypto: Any","dev.shibasis.reaktor.core.server.cloudflare.ServiceWorkerGlobalScope.SubtleCrypto"]},{"name":"abstract var TailEvent: Any","description":"dev.shibasis.reaktor.core.server.cloudflare.ServiceWorkerGlobalScope.TailEvent","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-service-worker-global-scope/-tail-event.html","searchKeys":["TailEvent","abstract var TailEvent: Any","dev.shibasis.reaktor.core.server.cloudflare.ServiceWorkerGlobalScope.TailEvent"]},{"name":"abstract var TextDecoder: Any","description":"dev.shibasis.reaktor.core.server.cloudflare.ServiceWorkerGlobalScope.TextDecoder","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-service-worker-global-scope/-text-decoder.html","searchKeys":["TextDecoder","abstract var TextDecoder: Any","dev.shibasis.reaktor.core.server.cloudflare.ServiceWorkerGlobalScope.TextDecoder"]},{"name":"abstract var TextDecoderStream: Any","description":"dev.shibasis.reaktor.core.server.cloudflare.ServiceWorkerGlobalScope.TextDecoderStream","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-service-worker-global-scope/-text-decoder-stream.html","searchKeys":["TextDecoderStream","abstract var TextDecoderStream: Any","dev.shibasis.reaktor.core.server.cloudflare.ServiceWorkerGlobalScope.TextDecoderStream"]},{"name":"abstract var TextEncoder: Any","description":"dev.shibasis.reaktor.core.server.cloudflare.ServiceWorkerGlobalScope.TextEncoder","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-service-worker-global-scope/-text-encoder.html","searchKeys":["TextEncoder","abstract var TextEncoder: Any","dev.shibasis.reaktor.core.server.cloudflare.ServiceWorkerGlobalScope.TextEncoder"]},{"name":"abstract var TextEncoderStream: Any","description":"dev.shibasis.reaktor.core.server.cloudflare.ServiceWorkerGlobalScope.TextEncoderStream","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-service-worker-global-scope/-text-encoder-stream.html","searchKeys":["TextEncoderStream","abstract var TextEncoderStream: Any","dev.shibasis.reaktor.core.server.cloudflare.ServiceWorkerGlobalScope.TextEncoderStream"]},{"name":"abstract var TraceEvent: Any","description":"dev.shibasis.reaktor.core.server.cloudflare.ServiceWorkerGlobalScope.TraceEvent","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-service-worker-global-scope/-trace-event.html","searchKeys":["TraceEvent","abstract var TraceEvent: Any","dev.shibasis.reaktor.core.server.cloudflare.ServiceWorkerGlobalScope.TraceEvent"]},{"name":"abstract var TransformStream: Any","description":"dev.shibasis.reaktor.core.server.cloudflare.ServiceWorkerGlobalScope.TransformStream","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-service-worker-global-scope/-transform-stream.html","searchKeys":["TransformStream","abstract var TransformStream: Any","dev.shibasis.reaktor.core.server.cloudflare.ServiceWorkerGlobalScope.TransformStream"]},{"name":"abstract var URL: Any","description":"dev.shibasis.reaktor.core.server.cloudflare.ServiceWorkerGlobalScope.URL","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-service-worker-global-scope/-u-r-l.html","searchKeys":["URL","abstract var URL: Any","dev.shibasis.reaktor.core.server.cloudflare.ServiceWorkerGlobalScope.URL"]},{"name":"abstract var URLPattern: Any","description":"dev.shibasis.reaktor.core.server.cloudflare.ServiceWorkerGlobalScope.URLPattern","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-service-worker-global-scope/-u-r-l-pattern.html","searchKeys":["URLPattern","abstract var URLPattern: Any","dev.shibasis.reaktor.core.server.cloudflare.ServiceWorkerGlobalScope.URLPattern"]},{"name":"abstract var URLSearchParams: Any","description":"dev.shibasis.reaktor.core.server.cloudflare.ServiceWorkerGlobalScope.URLSearchParams","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-service-worker-global-scope/-u-r-l-search-params.html","searchKeys":["URLSearchParams","abstract var URLSearchParams: Any","dev.shibasis.reaktor.core.server.cloudflare.ServiceWorkerGlobalScope.URLSearchParams"]},{"name":"abstract var WebSocket: Any","description":"dev.shibasis.reaktor.core.server.cloudflare.ServiceWorkerGlobalScope.WebSocket","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-service-worker-global-scope/-web-socket.html","searchKeys":["WebSocket","abstract var WebSocket: Any","dev.shibasis.reaktor.core.server.cloudflare.ServiceWorkerGlobalScope.WebSocket"]},{"name":"abstract var WebSocketPair: Any","description":"dev.shibasis.reaktor.core.server.cloudflare.ServiceWorkerGlobalScope.WebSocketPair","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-service-worker-global-scope/-web-socket-pair.html","searchKeys":["WebSocketPair","abstract var WebSocketPair: Any","dev.shibasis.reaktor.core.server.cloudflare.ServiceWorkerGlobalScope.WebSocketPair"]},{"name":"abstract var WebSocketRequestResponsePair: Any","description":"dev.shibasis.reaktor.core.server.cloudflare.ServiceWorkerGlobalScope.WebSocketRequestResponsePair","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-service-worker-global-scope/-web-socket-request-response-pair.html","searchKeys":["WebSocketRequestResponsePair","abstract var WebSocketRequestResponsePair: Any","dev.shibasis.reaktor.core.server.cloudflare.ServiceWorkerGlobalScope.WebSocketRequestResponsePair"]},{"name":"abstract var WorkerGlobalScope: Any","description":"dev.shibasis.reaktor.core.server.cloudflare.ServiceWorkerGlobalScope.WorkerGlobalScope","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-service-worker-global-scope/-worker-global-scope.html","searchKeys":["WorkerGlobalScope","abstract var WorkerGlobalScope: Any","dev.shibasis.reaktor.core.server.cloudflare.ServiceWorkerGlobalScope.WorkerGlobalScope"]},{"name":"abstract var WritableStream: Any","description":"dev.shibasis.reaktor.core.server.cloudflare.ServiceWorkerGlobalScope.WritableStream","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-service-worker-global-scope/-writable-stream.html","searchKeys":["WritableStream","abstract var WritableStream: Any","dev.shibasis.reaktor.core.server.cloudflare.ServiceWorkerGlobalScope.WritableStream"]},{"name":"abstract var WritableStreamDefaultWriter: Any","description":"dev.shibasis.reaktor.core.server.cloudflare.ServiceWorkerGlobalScope.WritableStreamDefaultWriter","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-service-worker-global-scope/-writable-stream-default-writer.html","searchKeys":["WritableStreamDefaultWriter","abstract var WritableStreamDefaultWriter: Any","dev.shibasis.reaktor.core.server.cloudflare.ServiceWorkerGlobalScope.WritableStreamDefaultWriter"]},{"name":"abstract var allowHalfOpen: Boolean","description":"dev.shibasis.reaktor.core.server.cloudflare.SocketOptions.allowHalfOpen","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-socket-options/allow-half-open.html","searchKeys":["allowHalfOpen","abstract var allowHalfOpen: Boolean","dev.shibasis.reaktor.core.server.cloudflare.SocketOptions.allowHalfOpen"]},{"name":"abstract var asOrganization: String","description":"dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesBase.asOrganization","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-incoming-request-cf-properties-base/as-organization.html","searchKeys":["asOrganization","abstract var asOrganization: String","dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesBase.asOrganization"]},{"name":"abstract var asn: Number","description":"dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesBase.asn","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-incoming-request-cf-properties-base/asn.html","searchKeys":["asn","abstract var asn: Number","dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesBase.asn"]},{"name":"abstract var atLeast: Number?","description":"dev.shibasis.reaktor.core.server.cloudflare.ReadableStreamBYOBRequest.atLeast","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-readable-stream-b-y-o-b-request/at-least.html","searchKeys":["atLeast","abstract var atLeast: Number?","dev.shibasis.reaktor.core.server.cloudflare.ReadableStreamBYOBRequest.atLeast"]},{"name":"abstract var attributes: Array<Array<String>>","description":"dev.shibasis.reaktor.core.server.cloudflare.Element.attributes","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-element/attributes.html","searchKeys":["attributes","abstract var attributes: Array<Array<String>>","dev.shibasis.reaktor.core.server.cloudflare.Element.attributes"]},{"name":"abstract var batchSize: Number","description":"dev.shibasis.reaktor.core.server.cloudflare.TraceItemQueueEventInfo.batchSize","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-trace-item-queue-event-info/batch-size.html","searchKeys":["batchSize","abstract var batchSize: Number","dev.shibasis.reaktor.core.server.cloudflare.TraceItemQueueEventInfo.batchSize"]},{"name":"abstract var body: Body","description":"dev.shibasis.reaktor.core.server.cloudflare.Message.body","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-message/body.html","searchKeys":["body","abstract var body: Body","dev.shibasis.reaktor.core.server.cloudflare.Message.body"]},{"name":"abstract var body: Body","description":"dev.shibasis.reaktor.core.server.cloudflare.MessageSendRequest.body","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-message-send-request/body.html","searchKeys":["body","abstract var body: Body","dev.shibasis.reaktor.core.server.cloudflare.MessageSendRequest.body"]},{"name":"abstract var botManagement: IncomingRequestCfPropertiesBotManagementBase","description":"dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesBotManagement.botManagement","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-incoming-request-cf-properties-bot-management/bot-management.html","searchKeys":["botManagement","abstract var botManagement: IncomingRequestCfPropertiesBotManagementBase","dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesBotManagement.botManagement"]},{"name":"abstract var broker: String","description":"dev.shibasis.reaktor.core.server.cloudflare.PubSubMessage.broker","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-pub-sub-message/broker.html","searchKeys":["broker","abstract var broker: String","dev.shibasis.reaktor.core.server.cloudflare.PubSubMessage.broker"]},{"name":"abstract var byobRequest: ReadableStreamBYOBRequest?","description":"dev.shibasis.reaktor.core.server.cloudflare.ReadableByteStreamController.byobRequest","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-readable-byte-stream-controller/byob-request.html","searchKeys":["byobRequest","abstract var byobRequest: ReadableStreamBYOBRequest?","dev.shibasis.reaktor.core.server.cloudflare.ReadableByteStreamController.byobRequest"]},{"name":"abstract var caches: CacheStorage","description":"dev.shibasis.reaktor.core.server.cloudflare.ServiceWorkerGlobalScope.caches","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-service-worker-global-scope/caches.html","searchKeys":["caches","abstract var caches: CacheStorage","dev.shibasis.reaktor.core.server.cloudflare.ServiceWorkerGlobalScope.caches"]},{"name":"abstract var certFingerprintSHA1: String","description":"dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesTLSClientAuth.certFingerprintSHA1","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-incoming-request-cf-properties-t-l-s-client-auth/cert-fingerprint-s-h-a1.html","searchKeys":["certFingerprintSHA1","abstract var certFingerprintSHA1: String","dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesTLSClientAuth.certFingerprintSHA1"]},{"name":"abstract var certFingerprintSHA1: String","description":"dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesTLSClientAuthPlaceholder.certFingerprintSHA1","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-incoming-request-cf-properties-t-l-s-client-auth-placeholder/cert-fingerprint-s-h-a1.html","searchKeys":["certFingerprintSHA1","abstract var certFingerprintSHA1: String","dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesTLSClientAuthPlaceholder.certFingerprintSHA1"]},{"name":"abstract var certFingerprintSHA256: String","description":"dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesTLSClientAuth.certFingerprintSHA256","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-incoming-request-cf-properties-t-l-s-client-auth/cert-fingerprint-s-h-a256.html","searchKeys":["certFingerprintSHA256","abstract var certFingerprintSHA256: String","dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesTLSClientAuth.certFingerprintSHA256"]},{"name":"abstract var certFingerprintSHA256: String","description":"dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesTLSClientAuthPlaceholder.certFingerprintSHA256","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-incoming-request-cf-properties-t-l-s-client-auth-placeholder/cert-fingerprint-s-h-a256.html","searchKeys":["certFingerprintSHA256","abstract var certFingerprintSHA256: String","dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesTLSClientAuthPlaceholder.certFingerprintSHA256"]},{"name":"abstract var certIssuerDN: String","description":"dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesTLSClientAuth.certIssuerDN","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-incoming-request-cf-properties-t-l-s-client-auth/cert-issuer-d-n.html","searchKeys":["certIssuerDN","abstract var certIssuerDN: String","dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesTLSClientAuth.certIssuerDN"]},{"name":"abstract var certIssuerDN: String","description":"dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesTLSClientAuthPlaceholder.certIssuerDN","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-incoming-request-cf-properties-t-l-s-client-auth-placeholder/cert-issuer-d-n.html","searchKeys":["certIssuerDN","abstract var certIssuerDN: String","dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesTLSClientAuthPlaceholder.certIssuerDN"]},{"name":"abstract var certIssuerDNLegacy: String","description":"dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesTLSClientAuth.certIssuerDNLegacy","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-incoming-request-cf-properties-t-l-s-client-auth/cert-issuer-d-n-legacy.html","searchKeys":["certIssuerDNLegacy","abstract var certIssuerDNLegacy: String","dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesTLSClientAuth.certIssuerDNLegacy"]},{"name":"abstract var certIssuerDNLegacy: String","description":"dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesTLSClientAuthPlaceholder.certIssuerDNLegacy","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-incoming-request-cf-properties-t-l-s-client-auth-placeholder/cert-issuer-d-n-legacy.html","searchKeys":["certIssuerDNLegacy","abstract var certIssuerDNLegacy: String","dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesTLSClientAuthPlaceholder.certIssuerDNLegacy"]},{"name":"abstract var certIssuerDNRFC2253: String","description":"dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesTLSClientAuth.certIssuerDNRFC2253","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-incoming-request-cf-properties-t-l-s-client-auth/cert-issuer-d-n-r-f-c2253.html","searchKeys":["certIssuerDNRFC2253","abstract var certIssuerDNRFC2253: String","dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesTLSClientAuth.certIssuerDNRFC2253"]},{"name":"abstract var certIssuerDNRFC2253: String","description":"dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesTLSClientAuthPlaceholder.certIssuerDNRFC2253","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-incoming-request-cf-properties-t-l-s-client-auth-placeholder/cert-issuer-d-n-r-f-c2253.html","searchKeys":["certIssuerDNRFC2253","abstract var certIssuerDNRFC2253: String","dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesTLSClientAuthPlaceholder.certIssuerDNRFC2253"]},{"name":"abstract var certIssuerSKI: String","description":"dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesTLSClientAuth.certIssuerSKI","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-incoming-request-cf-properties-t-l-s-client-auth/cert-issuer-s-k-i.html","searchKeys":["certIssuerSKI","abstract var certIssuerSKI: String","dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesTLSClientAuth.certIssuerSKI"]},{"name":"abstract var certIssuerSKI: String","description":"dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesTLSClientAuthPlaceholder.certIssuerSKI","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-incoming-request-cf-properties-t-l-s-client-auth-placeholder/cert-issuer-s-k-i.html","searchKeys":["certIssuerSKI","abstract var certIssuerSKI: String","dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesTLSClientAuthPlaceholder.certIssuerSKI"]},{"name":"abstract var certIssuerSerial: String","description":"dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesTLSClientAuth.certIssuerSerial","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-incoming-request-cf-properties-t-l-s-client-auth/cert-issuer-serial.html","searchKeys":["certIssuerSerial","abstract var certIssuerSerial: String","dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesTLSClientAuth.certIssuerSerial"]},{"name":"abstract var certIssuerSerial: String","description":"dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesTLSClientAuthPlaceholder.certIssuerSerial","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-incoming-request-cf-properties-t-l-s-client-auth-placeholder/cert-issuer-serial.html","searchKeys":["certIssuerSerial","abstract var certIssuerSerial: String","dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesTLSClientAuthPlaceholder.certIssuerSerial"]},{"name":"abstract var certNotAfter: String","description":"dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesTLSClientAuth.certNotAfter","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-incoming-request-cf-properties-t-l-s-client-auth/cert-not-after.html","searchKeys":["certNotAfter","abstract var certNotAfter: String","dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesTLSClientAuth.certNotAfter"]},{"name":"abstract var certNotAfter: String","description":"dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesTLSClientAuthPlaceholder.certNotAfter","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-incoming-request-cf-properties-t-l-s-client-auth-placeholder/cert-not-after.html","searchKeys":["certNotAfter","abstract var certNotAfter: String","dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesTLSClientAuthPlaceholder.certNotAfter"]},{"name":"abstract var certNotBefore: String","description":"dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesTLSClientAuth.certNotBefore","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-incoming-request-cf-properties-t-l-s-client-auth/cert-not-before.html","searchKeys":["certNotBefore","abstract var certNotBefore: String","dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesTLSClientAuth.certNotBefore"]},{"name":"abstract var certNotBefore: String","description":"dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesTLSClientAuthPlaceholder.certNotBefore","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-incoming-request-cf-properties-t-l-s-client-auth-placeholder/cert-not-before.html","searchKeys":["certNotBefore","abstract var certNotBefore: String","dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesTLSClientAuthPlaceholder.certNotBefore"]},{"name":"abstract var certPresented: String","description":"dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesTLSClientAuth.certPresented","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-incoming-request-cf-properties-t-l-s-client-auth/cert-presented.html","searchKeys":["certPresented","abstract var certPresented: String","dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesTLSClientAuth.certPresented"]},{"name":"abstract var certPresented: String","description":"dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesTLSClientAuthPlaceholder.certPresented","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-incoming-request-cf-properties-t-l-s-client-auth-placeholder/cert-presented.html","searchKeys":["certPresented","abstract var certPresented: String","dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesTLSClientAuthPlaceholder.certPresented"]},{"name":"abstract var certRevoked: String","description":"dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesTLSClientAuth.certRevoked","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-incoming-request-cf-properties-t-l-s-client-auth/cert-revoked.html","searchKeys":["certRevoked","abstract var certRevoked: String","dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesTLSClientAuth.certRevoked"]},{"name":"abstract var certRevoked: String","description":"dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesTLSClientAuthPlaceholder.certRevoked","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-incoming-request-cf-properties-t-l-s-client-auth-placeholder/cert-revoked.html","searchKeys":["certRevoked","abstract var certRevoked: String","dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesTLSClientAuthPlaceholder.certRevoked"]},{"name":"abstract var certSKI: String","description":"dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesTLSClientAuth.certSKI","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-incoming-request-cf-properties-t-l-s-client-auth/cert-s-k-i.html","searchKeys":["certSKI","abstract var certSKI: String","dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesTLSClientAuth.certSKI"]},{"name":"abstract var certSKI: String","description":"dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesTLSClientAuthPlaceholder.certSKI","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-incoming-request-cf-properties-t-l-s-client-auth-placeholder/cert-s-k-i.html","searchKeys":["certSKI","abstract var certSKI: String","dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesTLSClientAuthPlaceholder.certSKI"]},{"name":"abstract var certSerial: String","description":"dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesTLSClientAuth.certSerial","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-incoming-request-cf-properties-t-l-s-client-auth/cert-serial.html","searchKeys":["certSerial","abstract var certSerial: String","dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesTLSClientAuth.certSerial"]},{"name":"abstract var certSerial: String","description":"dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesTLSClientAuthPlaceholder.certSerial","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-incoming-request-cf-properties-t-l-s-client-auth-placeholder/cert-serial.html","searchKeys":["certSerial","abstract var certSerial: String","dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesTLSClientAuthPlaceholder.certSerial"]},{"name":"abstract var certSubjectDN: String","description":"dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesTLSClientAuth.certSubjectDN","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-incoming-request-cf-properties-t-l-s-client-auth/cert-subject-d-n.html","searchKeys":["certSubjectDN","abstract var certSubjectDN: String","dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesTLSClientAuth.certSubjectDN"]},{"name":"abstract var certSubjectDN: String","description":"dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesTLSClientAuthPlaceholder.certSubjectDN","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-incoming-request-cf-properties-t-l-s-client-auth-placeholder/cert-subject-d-n.html","searchKeys":["certSubjectDN","abstract var certSubjectDN: String","dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesTLSClientAuthPlaceholder.certSubjectDN"]},{"name":"abstract var certSubjectDNLegacy: String","description":"dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesTLSClientAuth.certSubjectDNLegacy","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-incoming-request-cf-properties-t-l-s-client-auth/cert-subject-d-n-legacy.html","searchKeys":["certSubjectDNLegacy","abstract var certSubjectDNLegacy: String","dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesTLSClientAuth.certSubjectDNLegacy"]},{"name":"abstract var certSubjectDNLegacy: String","description":"dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesTLSClientAuthPlaceholder.certSubjectDNLegacy","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-incoming-request-cf-properties-t-l-s-client-auth-placeholder/cert-subject-d-n-legacy.html","searchKeys":["certSubjectDNLegacy","abstract var certSubjectDNLegacy: String","dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesTLSClientAuthPlaceholder.certSubjectDNLegacy"]},{"name":"abstract var certSubjectDNRFC2253: String","description":"dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesTLSClientAuth.certSubjectDNRFC2253","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-incoming-request-cf-properties-t-l-s-client-auth/cert-subject-d-n-r-f-c2253.html","searchKeys":["certSubjectDNRFC2253","abstract var certSubjectDNRFC2253: String","dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesTLSClientAuth.certSubjectDNRFC2253"]},{"name":"abstract var certSubjectDNRFC2253: String","description":"dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesTLSClientAuthPlaceholder.certSubjectDNRFC2253","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-incoming-request-cf-properties-t-l-s-client-auth-placeholder/cert-subject-d-n-r-f-c2253.html","searchKeys":["certSubjectDNRFC2253","abstract var certSubjectDNRFC2253: String","dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesTLSClientAuthPlaceholder.certSubjectDNRFC2253"]},{"name":"abstract var certVerified: Any","description":"dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesTLSClientAuth.certVerified","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-incoming-request-cf-properties-t-l-s-client-auth/cert-verified.html","searchKeys":["certVerified","abstract var certVerified: Any","dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesTLSClientAuth.certVerified"]},{"name":"abstract var certVerified: String","description":"dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesTLSClientAuthPlaceholder.certVerified","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-incoming-request-cf-properties-t-l-s-client-auth-placeholder/cert-verified.html","searchKeys":["certVerified","abstract var certVerified: String","dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesTLSClientAuthPlaceholder.certVerified"]},{"name":"abstract var channel: String","description":"dev.shibasis.reaktor.core.server.cloudflare.TraceDiagnosticChannelEvent.channel","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-trace-diagnostic-channel-event/channel.html","searchKeys":["channel","abstract var channel: String","dev.shibasis.reaktor.core.server.cloudflare.TraceDiagnosticChannelEvent.channel"]},{"name":"abstract var clientFinished: String","description":"dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesExportedAuthenticatorMetadata.clientFinished","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-incoming-request-cf-properties-exported-authenticator-metadata/client-finished.html","searchKeys":["clientFinished","abstract var clientFinished: String","dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesExportedAuthenticatorMetadata.clientFinished"]},{"name":"abstract var clientHandshake: String","description":"dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesExportedAuthenticatorMetadata.clientHandshake","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-incoming-request-cf-properties-exported-authenticator-metadata/client-handshake.html","searchKeys":["clientHandshake","abstract var clientHandshake: String","dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesExportedAuthenticatorMetadata.clientHandshake"]},{"name":"abstract var clientId: String","description":"dev.shibasis.reaktor.core.server.cloudflare.PubSubMessage.clientId","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-pub-sub-message/client-id.html","searchKeys":["clientId","abstract var clientId: String","dev.shibasis.reaktor.core.server.cloudflare.PubSubMessage.clientId"]},{"name":"abstract var clientTrustScore: Number","description":"dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesBotManagement.clientTrustScore","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-incoming-request-cf-properties-bot-management/client-trust-score.html","searchKeys":["clientTrustScore","abstract var clientTrustScore: Number","dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesBotManagement.clientTrustScore"]},{"name":"abstract var close: CloseEvent","description":"dev.shibasis.reaktor.core.server.cloudflare.WebSocketEventMap.close","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-web-socket-event-map/close.html","searchKeys":["close","abstract var close: CloseEvent","dev.shibasis.reaktor.core.server.cloudflare.WebSocketEventMap.close"]},{"name":"abstract var colno: Number","description":"dev.shibasis.reaktor.core.server.cloudflare.ErrorEvent.colno","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-error-event/colno.html","searchKeys":["colno","abstract var colno: Number","dev.shibasis.reaktor.core.server.cloudflare.ErrorEvent.colno"]},{"name":"abstract var colo: String","description":"dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesBase.colo","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-incoming-request-cf-properties-base/colo.html","searchKeys":["colo","abstract var colo: String","dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesBase.colo"]},{"name":"abstract var contentType: String","description":"dev.shibasis.reaktor.core.server.cloudflare.PubSubMessage.contentType","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-pub-sub-message/content-type.html","searchKeys":["contentType","abstract var contentType: String","dev.shibasis.reaktor.core.server.cloudflare.PubSubMessage.contentType"]},{"name":"abstract var corporateProxy: Boolean","description":"dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesBotManagementBase.corporateProxy","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-incoming-request-cf-properties-bot-management-base/corporate-proxy.html","searchKeys":["corporateProxy","abstract var corporateProxy: Boolean","dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesBotManagementBase.corporateProxy"]},{"name":"abstract var count: Number","description":"dev.shibasis.reaktor.core.server.cloudflare.D1ExecResult.count","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-d1-exec-result/count.html","searchKeys":["count","abstract var count: Number","dev.shibasis.reaktor.core.server.cloudflare.D1ExecResult.count"]},{"name":"abstract var cpuTime: Number","description":"dev.shibasis.reaktor.core.server.cloudflare.TraceMetrics.cpuTime","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-trace-metrics/cpu-time.html","searchKeys":["cpuTime","abstract var cpuTime: Number","dev.shibasis.reaktor.core.server.cloudflare.TraceMetrics.cpuTime"]},{"name":"abstract var cron: String","description":"dev.shibasis.reaktor.core.server.cloudflare.ScheduledController.cron","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-scheduled-controller/cron.html","searchKeys":["cron","abstract var cron: String","dev.shibasis.reaktor.core.server.cloudflare.ScheduledController.cron"]},{"name":"abstract var cron: String","description":"dev.shibasis.reaktor.core.server.cloudflare.TraceItemScheduledEventInfo.cron","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-trace-item-scheduled-event-info/cron.html","searchKeys":["cron","abstract var cron: String","dev.shibasis.reaktor.core.server.cloudflare.TraceItemScheduledEventInfo.cron"]},{"name":"abstract var crypto: Crypto","description":"dev.shibasis.reaktor.core.server.cloudflare.ServiceWorkerGlobalScope.crypto","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-service-worker-global-scope/crypto.html","searchKeys":["crypto","abstract var crypto: Crypto","dev.shibasis.reaktor.core.server.cloudflare.ServiceWorkerGlobalScope.crypto"]},{"name":"abstract var data: Data","description":"dev.shibasis.reaktor.core.server.cloudflare.EventContext.data","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-event-context/data.html","searchKeys":["data","abstract var data: Data","dev.shibasis.reaktor.core.server.cloudflare.EventContext.data"]},{"name":"abstract var data: Data","description":"dev.shibasis.reaktor.core.server.cloudflare.EventPluginContext.data","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-event-plugin-context/data.html","searchKeys":["data","abstract var data: Data","dev.shibasis.reaktor.core.server.cloudflare.EventPluginContext.data"]},{"name":"abstract var delimitedPrefixes: Array<String>","description":"dev.shibasis.reaktor.core.server.cloudflare.T$12.delimitedPrefixes","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-t$12/delimited-prefixes.html","searchKeys":["delimitedPrefixes","abstract var delimitedPrefixes: Array<String>","dev.shibasis.reaktor.core.server.cloudflare.T$12.delimitedPrefixes"]},{"name":"abstract var desiredSize: Number?","description":"dev.shibasis.reaktor.core.server.cloudflare.ReadableByteStreamController.desiredSize","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-readable-byte-stream-controller/desired-size.html","searchKeys":["desiredSize","abstract var desiredSize: Number?","dev.shibasis.reaktor.core.server.cloudflare.ReadableByteStreamController.desiredSize"]},{"name":"abstract var desiredSize: Number?","description":"dev.shibasis.reaktor.core.server.cloudflare.ReadableStreamDefaultController.desiredSize","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-readable-stream-default-controller/desired-size.html","searchKeys":["desiredSize","abstract var desiredSize: Number?","dev.shibasis.reaktor.core.server.cloudflare.ReadableStreamDefaultController.desiredSize"]},{"name":"abstract var detectionIds: Array<Number>","description":"dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesBotManagementBase.detectionIds","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-incoming-request-cf-properties-bot-management-base/detection-ids.html","searchKeys":["detectionIds","abstract var detectionIds: Array<Number>","dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesBotManagementBase.detectionIds"]},{"name":"abstract var diagnosticsChannelEvents: Array<TraceDiagnosticChannelEvent>","description":"dev.shibasis.reaktor.core.server.cloudflare.TraceItem.diagnosticsChannelEvents","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-trace-item/diagnostics-channel-events.html","searchKeys":["diagnosticsChannelEvents","abstract var diagnosticsChannelEvents: Array<TraceDiagnosticChannelEvent>","dev.shibasis.reaktor.core.server.cloudflare.TraceItem.diagnosticsChannelEvents"]},{"name":"abstract var duration: Number","description":"dev.shibasis.reaktor.core.server.cloudflare.D1ExecResult.duration","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-d1-exec-result/duration.html","searchKeys":["duration","abstract var duration: Number","dev.shibasis.reaktor.core.server.cloudflare.D1ExecResult.duration"]},{"name":"abstract var edgeRequestKeepAliveStatus: Number","description":"dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesBase.edgeRequestKeepAliveStatus","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-incoming-request-cf-properties-base/edge-request-keep-alive-status.html","searchKeys":["edgeRequestKeepAliveStatus","abstract var edgeRequestKeepAliveStatus: Number","dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesBase.edgeRequestKeepAliveStatus"]},{"name":"abstract var env: Env","description":"dev.shibasis.reaktor.core.server.cloudflare.EventContext.env","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-event-context/env.html","searchKeys":["env","abstract var env: Env","dev.shibasis.reaktor.core.server.cloudflare.EventContext.env"]},{"name":"abstract var env: Env","description":"dev.shibasis.reaktor.core.server.cloudflare.EventPluginContext.env","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-event-plugin-context/env.html","searchKeys":["env","abstract var env: Env","dev.shibasis.reaktor.core.server.cloudflare.EventPluginContext.env"]},{"name":"abstract var error: Any","description":"dev.shibasis.reaktor.core.server.cloudflare.ErrorEvent.error","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-error-event/error.html","searchKeys":["error","abstract var error: Any","dev.shibasis.reaktor.core.server.cloudflare.ErrorEvent.error"]},{"name":"abstract var error: ErrorEvent","description":"dev.shibasis.reaktor.core.server.cloudflare.WebSocketEventMap.error","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-web-socket-event-map/error.html","searchKeys":["error","abstract var error: ErrorEvent","dev.shibasis.reaktor.core.server.cloudflare.WebSocketEventMap.error"]},{"name":"abstract var etag: String","description":"dev.shibasis.reaktor.core.server.cloudflare.R2UploadedPart.etag","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-r2-uploaded-part/etag.html","searchKeys":["etag","abstract var etag: String","dev.shibasis.reaktor.core.server.cloudflare.R2UploadedPart.etag"]},{"name":"abstract var eventTimestamp: Number?","description":"dev.shibasis.reaktor.core.server.cloudflare.TraceItem.eventTimestamp","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-trace-item/event-timestamp.html","searchKeys":["eventTimestamp","abstract var eventTimestamp: Number?","dev.shibasis.reaktor.core.server.cloudflare.TraceItem.eventTimestamp"]},{"name":"abstract var exceptions: Array<TraceException>","description":"dev.shibasis.reaktor.core.server.cloudflare.TraceItem.exceptions","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-trace-item/exceptions.html","searchKeys":["exceptions","abstract var exceptions: Array<TraceException>","dev.shibasis.reaktor.core.server.cloudflare.TraceItem.exceptions"]},{"name":"abstract var fatal: Boolean","description":"dev.shibasis.reaktor.core.server.cloudflare.TextDecoderConstructorOptions.fatal","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-text-decoder-constructor-options/fatal.html","searchKeys":["fatal","abstract var fatal: Boolean","dev.shibasis.reaktor.core.server.cloudflare.TextDecoderConstructorOptions.fatal"]},{"name":"abstract var fetch: Any","description":"dev.shibasis.reaktor.core.server.cloudflare.T$5.fetch","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-t$5/fetch.html","searchKeys":["fetch","abstract var fetch: Any","dev.shibasis.reaktor.core.server.cloudflare.T$5.fetch"]},{"name":"abstract var fetch: FetchEvent","description":"dev.shibasis.reaktor.core.server.cloudflare.WorkerGlobalScopeEventMap.fetch","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-worker-global-scope-event-map/fetch.html","searchKeys":["fetch","abstract var fetch: FetchEvent","dev.shibasis.reaktor.core.server.cloudflare.WorkerGlobalScopeEventMap.fetch"]},{"name":"abstract var filename: String","description":"dev.shibasis.reaktor.core.server.cloudflare.ErrorEvent.filename","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-error-event/filename.html","searchKeys":["filename","abstract var filename: String","dev.shibasis.reaktor.core.server.cloudflare.ErrorEvent.filename"]},{"name":"abstract var from: String","description":"dev.shibasis.reaktor.core.server.cloudflare.EmailMessage.from","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-email-message/from.html","searchKeys":["from","abstract var from: String","dev.shibasis.reaktor.core.server.cloudflare.EmailMessage.from"]},{"name":"abstract var functionPath: String","description":"dev.shibasis.reaktor.core.server.cloudflare.EventContext.functionPath","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-event-context/function-path.html","searchKeys":["functionPath","abstract var functionPath: String","dev.shibasis.reaktor.core.server.cloudflare.EventContext.functionPath"]},{"name":"abstract var functionPath: String","description":"dev.shibasis.reaktor.core.server.cloudflare.EventPluginContext.functionPath","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-event-plugin-context/function-path.html","searchKeys":["functionPath","abstract var functionPath: String","dev.shibasis.reaktor.core.server.cloudflare.EventPluginContext.functionPath"]},{"name":"abstract var groups: Record<String, String>","description":"dev.shibasis.reaktor.core.server.cloudflare.URLPatternURLPatternComponentResult.groups","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-u-r-l-pattern-u-r-l-pattern-component-result/groups.html","searchKeys":["groups","abstract var groups: Record<String, String>","dev.shibasis.reaktor.core.server.cloudflare.URLPatternURLPatternComponentResult.groups"]},{"name":"abstract var handleEvent: (event: Event) -> Any?","description":"dev.shibasis.reaktor.core.server.cloudflare.EventTargetHandlerObject.handleEvent","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-event-target-handler-object/handle-event.html","searchKeys":["handleEvent","abstract var handleEvent: (event: Event) -> Any?","dev.shibasis.reaktor.core.server.cloudflare.EventTargetHandlerObject.handleEvent"]},{"name":"abstract var hash: CryptoKeyKeyAlgorithm","description":"dev.shibasis.reaktor.core.server.cloudflare.CryptoKeyHmacKeyAlgorithm.hash","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-crypto-key-hmac-key-algorithm/hash.html","searchKeys":["hash","abstract var hash: CryptoKeyKeyAlgorithm","dev.shibasis.reaktor.core.server.cloudflare.CryptoKeyHmacKeyAlgorithm.hash"]},{"name":"abstract var hash: URLPatternURLPatternComponentResult","description":"dev.shibasis.reaktor.core.server.cloudflare.URLPatternURLPatternResult.hash","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-u-r-l-pattern-u-r-l-pattern-result/hash.html","searchKeys":["hash","abstract var hash: URLPatternURLPatternComponentResult","dev.shibasis.reaktor.core.server.cloudflare.URLPatternURLPatternResult.hash"]},{"name":"abstract var headers: Headers","description":"dev.shibasis.reaktor.core.server.cloudflare.ForwardableEmailMessage.headers","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-forwardable-email-message/headers.html","searchKeys":["headers","abstract var headers: Headers","dev.shibasis.reaktor.core.server.cloudflare.ForwardableEmailMessage.headers"]},{"name":"abstract var headers: Record<String, String>","description":"dev.shibasis.reaktor.core.server.cloudflare.TraceItemFetchEventInfoRequest.headers","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-trace-item-fetch-event-info-request/headers.html","searchKeys":["headers","abstract var headers: Record<String, String>","dev.shibasis.reaktor.core.server.cloudflare.TraceItemFetchEventInfoRequest.headers"]},{"name":"abstract var highWaterMark: Number","description":"dev.shibasis.reaktor.core.server.cloudflare.QueuingStrategyInit.highWaterMark","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-queuing-strategy-init/high-water-mark.html","searchKeys":["highWaterMark","abstract var highWaterMark: Number","dev.shibasis.reaktor.core.server.cloudflare.QueuingStrategyInit.highWaterMark"]},{"name":"abstract var hostMetadata: HostMetadata","description":"dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesCloudflareForSaaSEnterprise.hostMetadata","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-incoming-request-cf-properties-cloudflare-for-saa-s-enterprise/host-metadata.html","searchKeys":["hostMetadata","abstract var hostMetadata: HostMetadata","dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesCloudflareForSaaSEnterprise.hostMetadata"]},{"name":"abstract var hostname: String","description":"dev.shibasis.reaktor.core.server.cloudflare.SocketAddress.hostname","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-socket-address/hostname.html","searchKeys":["hostname","abstract var hostname: String","dev.shibasis.reaktor.core.server.cloudflare.SocketAddress.hostname"]},{"name":"abstract var hostname: URLPatternURLPatternComponentResult","description":"dev.shibasis.reaktor.core.server.cloudflare.URLPatternURLPatternResult.hostname","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-u-r-l-pattern-u-r-l-pattern-result/hostname.html","searchKeys":["hostname","abstract var hostname: URLPatternURLPatternComponentResult","dev.shibasis.reaktor.core.server.cloudflare.URLPatternURLPatternResult.hostname"]},{"name":"abstract var httpProtocol: String","description":"dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesBase.httpProtocol","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-incoming-request-cf-properties-base/http-protocol.html","searchKeys":["httpProtocol","abstract var httpProtocol: String","dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesBase.httpProtocol"]},{"name":"abstract var id: DurableObjectId","description":"dev.shibasis.reaktor.core.server.cloudflare.DurableObjectState.id","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-durable-object-state/id.html","searchKeys":["id","abstract var id: DurableObjectId","dev.shibasis.reaktor.core.server.cloudflare.DurableObjectState.id"]},{"name":"abstract var id: DurableObjectId","description":"dev.shibasis.reaktor.core.server.cloudflare.DurableObjectStub.id","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-durable-object-stub/id.html","searchKeys":["id","abstract var id: DurableObjectId","dev.shibasis.reaktor.core.server.cloudflare.DurableObjectStub.id"]},{"name":"abstract var id: String","description":"dev.shibasis.reaktor.core.server.cloudflare.Message.id","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-message/id.html","searchKeys":["id","abstract var id: String","dev.shibasis.reaktor.core.server.cloudflare.Message.id"]},{"name":"abstract var ignoreBOM: Boolean","description":"dev.shibasis.reaktor.core.server.cloudflare.TextDecoderConstructorOptions.ignoreBOM","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-text-decoder-constructor-options/ignore-b-o-m.html","searchKeys":["ignoreBOM","abstract var ignoreBOM: Boolean","dev.shibasis.reaktor.core.server.cloudflare.TextDecoderConstructorOptions.ignoreBOM"]},{"name":"abstract var input: String","description":"dev.shibasis.reaktor.core.server.cloudflare.URLPatternURLPatternComponentResult.input","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-u-r-l-pattern-u-r-l-pattern-component-result/input.html","searchKeys":["input","abstract var input: String","dev.shibasis.reaktor.core.server.cloudflare.URLPatternURLPatternComponentResult.input"]},{"name":"abstract var inputs: Array<dynamic>","description":"dev.shibasis.reaktor.core.server.cloudflare.URLPatternURLPatternResult.inputs","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-u-r-l-pattern-u-r-l-pattern-result/inputs.html","searchKeys":["inputs","abstract var inputs: Array<dynamic>","dev.shibasis.reaktor.core.server.cloudflare.URLPatternURLPatternResult.inputs"]},{"name":"abstract var key: String","description":"dev.shibasis.reaktor.core.server.cloudflare.R2MultipartUpload.key","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-r2-multipart-upload/key.html","searchKeys":["key","abstract var key: String","dev.shibasis.reaktor.core.server.cloudflare.R2MultipartUpload.key"]},{"name":"abstract var kid: String","description":"dev.shibasis.reaktor.core.server.cloudflare.JsonWebKeyWithKid.kid","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-json-web-key-with-kid/kid.html","searchKeys":["kid","abstract var kid: String","dev.shibasis.reaktor.core.server.cloudflare.JsonWebKeyWithKid.kid"]},{"name":"abstract var kty: String","description":"dev.shibasis.reaktor.core.server.cloudflare.JsonWebKey.kty","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-json-web-key/kty.html","searchKeys":["kty","abstract var kty: String","dev.shibasis.reaktor.core.server.cloudflare.JsonWebKey.kty"]},{"name":"abstract var lastInTextNode: Boolean","description":"dev.shibasis.reaktor.core.server.cloudflare.Text.lastInTextNode","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-text/last-in-text-node.html","searchKeys":["lastInTextNode","abstract var lastInTextNode: Boolean","dev.shibasis.reaktor.core.server.cloudflare.Text.lastInTextNode"]},{"name":"abstract var length: Number","description":"dev.shibasis.reaktor.core.server.cloudflare.CryptoKeyAesKeyAlgorithm.length","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-crypto-key-aes-key-algorithm/length.html","searchKeys":["length","abstract var length: Number","dev.shibasis.reaktor.core.server.cloudflare.CryptoKeyAesKeyAlgorithm.length"]},{"name":"abstract var length: Number","description":"dev.shibasis.reaktor.core.server.cloudflare.CryptoKeyHmacKeyAlgorithm.length","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-crypto-key-hmac-key-algorithm/length.html","searchKeys":["length","abstract var length: Number","dev.shibasis.reaktor.core.server.cloudflare.CryptoKeyHmacKeyAlgorithm.length"]},{"name":"abstract var level: String","description":"dev.shibasis.reaktor.core.server.cloudflare.TraceLog.level","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-trace-log/level.html","searchKeys":["level","abstract var level: String","dev.shibasis.reaktor.core.server.cloudflare.TraceLog.level"]},{"name":"abstract var lineno: Number","description":"dev.shibasis.reaktor.core.server.cloudflare.ErrorEvent.lineno","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-error-event/lineno.html","searchKeys":["lineno","abstract var lineno: Number","dev.shibasis.reaktor.core.server.cloudflare.ErrorEvent.lineno"]},{"name":"abstract var locked: Boolean","description":"dev.shibasis.reaktor.core.server.cloudflare.ReadableStream.locked","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-readable-stream/locked.html","searchKeys":["locked","abstract var locked: Boolean","dev.shibasis.reaktor.core.server.cloudflare.ReadableStream.locked"]},{"name":"abstract var logs: Array<TraceLog>","description":"dev.shibasis.reaktor.core.server.cloudflare.TraceItem.logs","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-trace-item/logs.html","searchKeys":["logs","abstract var logs: Array<TraceLog>","dev.shibasis.reaktor.core.server.cloudflare.TraceItem.logs"]},{"name":"abstract var mailFrom: String","description":"dev.shibasis.reaktor.core.server.cloudflare.TraceItemEmailEventInfo.mailFrom","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-trace-item-email-event-info/mail-from.html","searchKeys":["mailFrom","abstract var mailFrom: String","dev.shibasis.reaktor.core.server.cloudflare.TraceItemEmailEventInfo.mailFrom"]},{"name":"abstract var message: Any","description":"dev.shibasis.reaktor.core.server.cloudflare.TraceDiagnosticChannelEvent.message","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-trace-diagnostic-channel-event/message.html","searchKeys":["message","abstract var message: Any","dev.shibasis.reaktor.core.server.cloudflare.TraceDiagnosticChannelEvent.message"]},{"name":"abstract var message: Any","description":"dev.shibasis.reaktor.core.server.cloudflare.TraceLog.message","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-trace-log/message.html","searchKeys":["message","abstract var message: Any","dev.shibasis.reaktor.core.server.cloudflare.TraceLog.message"]},{"name":"abstract var message: MessageEvent","description":"dev.shibasis.reaktor.core.server.cloudflare.WebSocketEventMap.message","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-web-socket-event-map/message.html","searchKeys":["message","abstract var message: MessageEvent","dev.shibasis.reaktor.core.server.cloudflare.WebSocketEventMap.message"]},{"name":"abstract var message: String","description":"dev.shibasis.reaktor.core.server.cloudflare.ErrorEvent.message","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-error-event/message.html","searchKeys":["message","abstract var message: String","dev.shibasis.reaktor.core.server.cloudflare.ErrorEvent.message"]},{"name":"abstract var message: String","description":"dev.shibasis.reaktor.core.server.cloudflare.TraceException.message","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-trace-exception/message.html","searchKeys":["message","abstract var message: String","dev.shibasis.reaktor.core.server.cloudflare.TraceException.message"]},{"name":"abstract var messages: Array<Message<Body>>","description":"dev.shibasis.reaktor.core.server.cloudflare.MessageBatch.messages","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-message-batch/messages.html","searchKeys":["messages","abstract var messages: Array<Message<Body>>","dev.shibasis.reaktor.core.server.cloudflare.MessageBatch.messages"]},{"name":"abstract var messages: Array<Message<Body>>","description":"dev.shibasis.reaktor.core.server.cloudflare.QueueEvent.messages","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-queue-event/messages.html","searchKeys":["messages","abstract var messages: Array<Message<Body>>","dev.shibasis.reaktor.core.server.cloudflare.QueueEvent.messages"]},{"name":"abstract var meta: Any","description":"dev.shibasis.reaktor.core.server.cloudflare.D1Result.meta","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-d1-result/meta.html","searchKeys":["meta","abstract var meta: Any","dev.shibasis.reaktor.core.server.cloudflare.D1Result.meta"]},{"name":"abstract var metadata: Metadata?","description":"dev.shibasis.reaktor.core.server.cloudflare.KVNamespaceGetWithMetadataResult.metadata","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-k-v-namespace-get-with-metadata-result/metadata.html","searchKeys":["metadata","abstract var metadata: Metadata?","dev.shibasis.reaktor.core.server.cloudflare.KVNamespaceGetWithMetadataResult.metadata"]},{"name":"abstract var method: String","description":"dev.shibasis.reaktor.core.server.cloudflare.TraceItemFetchEventInfoRequest.method","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-trace-item-fetch-event-info-request/method.html","searchKeys":["method","abstract var method: String","dev.shibasis.reaktor.core.server.cloudflare.TraceItemFetchEventInfoRequest.method"]},{"name":"abstract var mid: Number","description":"dev.shibasis.reaktor.core.server.cloudflare.PubSubMessage.mid","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-pub-sub-message/mid.html","searchKeys":["mid","abstract var mid: Number","dev.shibasis.reaktor.core.server.cloudflare.PubSubMessage.mid"]},{"name":"abstract var mode: String","description":"dev.shibasis.reaktor.core.server.cloudflare.ReadableStreamGetReaderOptions.mode","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-readable-stream-get-reader-options/mode.html","searchKeys":["mode","abstract var mode: String","dev.shibasis.reaktor.core.server.cloudflare.ReadableStreamGetReaderOptions.mode"]},{"name":"abstract var modulusLength: Number","description":"dev.shibasis.reaktor.core.server.cloudflare.CryptoKeyRsaKeyAlgorithm.modulusLength","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-crypto-key-rsa-key-algorithm/modulus-length.html","searchKeys":["modulusLength","abstract var modulusLength: Number","dev.shibasis.reaktor.core.server.cloudflare.CryptoKeyRsaKeyAlgorithm.modulusLength"]},{"name":"abstract var name: Key","description":"dev.shibasis.reaktor.core.server.cloudflare.KVNamespaceListKey.name","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-k-v-namespace-list-key/name.html","searchKeys":["name","abstract var name: Key","dev.shibasis.reaktor.core.server.cloudflare.KVNamespaceListKey.name"]},{"name":"abstract var name: String","description":"dev.shibasis.reaktor.core.server.cloudflare.CryptoKeyAesKeyAlgorithm.name","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-crypto-key-aes-key-algorithm/name.html","searchKeys":["name","abstract var name: String","dev.shibasis.reaktor.core.server.cloudflare.CryptoKeyAesKeyAlgorithm.name"]},{"name":"abstract var name: String","description":"dev.shibasis.reaktor.core.server.cloudflare.CryptoKeyArbitraryKeyAlgorithm.name","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-crypto-key-arbitrary-key-algorithm/name.html","searchKeys":["name","abstract var name: String","dev.shibasis.reaktor.core.server.cloudflare.CryptoKeyArbitraryKeyAlgorithm.name"]},{"name":"abstract var name: String","description":"dev.shibasis.reaktor.core.server.cloudflare.CryptoKeyEllipticKeyAlgorithm.name","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-crypto-key-elliptic-key-algorithm/name.html","searchKeys":["name","abstract var name: String","dev.shibasis.reaktor.core.server.cloudflare.CryptoKeyEllipticKeyAlgorithm.name"]},{"name":"abstract var name: String","description":"dev.shibasis.reaktor.core.server.cloudflare.CryptoKeyHmacKeyAlgorithm.name","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-crypto-key-hmac-key-algorithm/name.html","searchKeys":["name","abstract var name: String","dev.shibasis.reaktor.core.server.cloudflare.CryptoKeyHmacKeyAlgorithm.name"]},{"name":"abstract var name: String","description":"dev.shibasis.reaktor.core.server.cloudflare.CryptoKeyKeyAlgorithm.name","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-crypto-key-key-algorithm/name.html","searchKeys":["name","abstract var name: String","dev.shibasis.reaktor.core.server.cloudflare.CryptoKeyKeyAlgorithm.name"]},{"name":"abstract var name: String","description":"dev.shibasis.reaktor.core.server.cloudflare.CryptoKeyRsaKeyAlgorithm.name","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-crypto-key-rsa-key-algorithm/name.html","searchKeys":["name","abstract var name: String","dev.shibasis.reaktor.core.server.cloudflare.CryptoKeyRsaKeyAlgorithm.name"]},{"name":"abstract var name: String","description":"dev.shibasis.reaktor.core.server.cloudflare.EndTag.name","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-end-tag/name.html","searchKeys":["name","abstract var name: String","dev.shibasis.reaktor.core.server.cloudflare.EndTag.name"]},{"name":"abstract var name: String","description":"dev.shibasis.reaktor.core.server.cloudflare.SubtleCryptoDeriveKeyAlgorithm.name","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-subtle-crypto-derive-key-algorithm/name.html","searchKeys":["name","abstract var name: String","dev.shibasis.reaktor.core.server.cloudflare.SubtleCryptoDeriveKeyAlgorithm.name"]},{"name":"abstract var name: String","description":"dev.shibasis.reaktor.core.server.cloudflare.SubtleCryptoEncryptAlgorithm.name","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-subtle-crypto-encrypt-algorithm/name.html","searchKeys":["name","abstract var name: String","dev.shibasis.reaktor.core.server.cloudflare.SubtleCryptoEncryptAlgorithm.name"]},{"name":"abstract var name: String","description":"dev.shibasis.reaktor.core.server.cloudflare.SubtleCryptoGenerateKeyAlgorithm.name","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-subtle-crypto-generate-key-algorithm/name.html","searchKeys":["name","abstract var name: String","dev.shibasis.reaktor.core.server.cloudflare.SubtleCryptoGenerateKeyAlgorithm.name"]},{"name":"abstract var name: String","description":"dev.shibasis.reaktor.core.server.cloudflare.SubtleCryptoHashAlgorithm.name","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-subtle-crypto-hash-algorithm/name.html","searchKeys":["name","abstract var name: String","dev.shibasis.reaktor.core.server.cloudflare.SubtleCryptoHashAlgorithm.name"]},{"name":"abstract var name: String","description":"dev.shibasis.reaktor.core.server.cloudflare.SubtleCryptoImportKeyAlgorithm.name","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-subtle-crypto-import-key-algorithm/name.html","searchKeys":["name","abstract var name: String","dev.shibasis.reaktor.core.server.cloudflare.SubtleCryptoImportKeyAlgorithm.name"]},{"name":"abstract var name: String","description":"dev.shibasis.reaktor.core.server.cloudflare.SubtleCryptoSignAlgorithm.name","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-subtle-crypto-sign-algorithm/name.html","searchKeys":["name","abstract var name: String","dev.shibasis.reaktor.core.server.cloudflare.SubtleCryptoSignAlgorithm.name"]},{"name":"abstract var name: String","description":"dev.shibasis.reaktor.core.server.cloudflare.TraceException.name","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-trace-exception/name.html","searchKeys":["name","abstract var name: String","dev.shibasis.reaktor.core.server.cloudflare.TraceException.name"]},{"name":"abstract var name: String?","description":"dev.shibasis.reaktor.core.server.cloudflare.Doctype.name","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-doctype/name.html","searchKeys":["name","abstract var name: String?","dev.shibasis.reaktor.core.server.cloudflare.Doctype.name"]},{"name":"abstract var namedCurve: String","description":"dev.shibasis.reaktor.core.server.cloudflare.CryptoKeyEllipticKeyAlgorithm.namedCurve","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-crypto-key-elliptic-key-algorithm/named-curve.html","searchKeys":["namedCurve","abstract var namedCurve: String","dev.shibasis.reaktor.core.server.cloudflare.CryptoKeyEllipticKeyAlgorithm.namedCurve"]},{"name":"abstract var namespaceURI: String","description":"dev.shibasis.reaktor.core.server.cloudflare.Element.namespaceURI","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-element/namespace-u-r-i.html","searchKeys":["namespaceURI","abstract var namespaceURI: String","dev.shibasis.reaktor.core.server.cloudflare.Element.namespaceURI"]},{"name":"abstract var next: (dynamic, init: RequestInit__0) -> Promise<Response>","description":"dev.shibasis.reaktor.core.server.cloudflare.EventContext.next","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-event-context/next.html","searchKeys":["next","abstract var next: (dynamic, init: RequestInit__0) -> Promise<Response>","dev.shibasis.reaktor.core.server.cloudflare.EventContext.next"]},{"name":"abstract var next: (dynamic, init: RequestInit__0) -> Promise<Response>","description":"dev.shibasis.reaktor.core.server.cloudflare.EventPluginContext.next","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-event-plugin-context/next.html","searchKeys":["next","abstract var next: (dynamic, init: RequestInit__0) -> Promise<Response>","dev.shibasis.reaktor.core.server.cloudflare.EventPluginContext.next"]},{"name":"abstract var objects: Array<R2Object>","description":"dev.shibasis.reaktor.core.server.cloudflare.T$12.objects","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-t$12/objects.html","searchKeys":["objects","abstract var objects: Array<R2Object>","dev.shibasis.reaktor.core.server.cloudflare.T$12.objects"]},{"name":"abstract var open: Event","description":"dev.shibasis.reaktor.core.server.cloudflare.WebSocketEventMap.open","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-web-socket-event-map/open.html","searchKeys":["open","abstract var open: Event","dev.shibasis.reaktor.core.server.cloudflare.WebSocketEventMap.open"]},{"name":"abstract var origin: String","description":"dev.shibasis.reaktor.core.server.cloudflare.ServiceWorkerGlobalScope.origin","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-service-worker-global-scope/origin.html","searchKeys":["origin","abstract var origin: String","dev.shibasis.reaktor.core.server.cloudflare.ServiceWorkerGlobalScope.origin"]},{"name":"abstract var outcome: String","description":"dev.shibasis.reaktor.core.server.cloudflare.TraceItem.outcome","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-trace-item/outcome.html","searchKeys":["outcome","abstract var outcome: String","dev.shibasis.reaktor.core.server.cloudflare.TraceItem.outcome"]},{"name":"abstract var params: Params<P>","description":"dev.shibasis.reaktor.core.server.cloudflare.EventContext.params","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-event-context/params.html","searchKeys":["params","abstract var params: Params<P>","dev.shibasis.reaktor.core.server.cloudflare.EventContext.params"]},{"name":"abstract var params: Params<P>","description":"dev.shibasis.reaktor.core.server.cloudflare.EventPluginContext.params","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-event-plugin-context/params.html","searchKeys":["params","abstract var params: Params<P>","dev.shibasis.reaktor.core.server.cloudflare.EventPluginContext.params"]},{"name":"abstract var partNumber: Number","description":"dev.shibasis.reaktor.core.server.cloudflare.R2UploadedPart.partNumber","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-r2-uploaded-part/part-number.html","searchKeys":["partNumber","abstract var partNumber: Number","dev.shibasis.reaktor.core.server.cloudflare.R2UploadedPart.partNumber"]},{"name":"abstract var passThroughOnException: () -> Unit","description":"dev.shibasis.reaktor.core.server.cloudflare.EventContext.passThroughOnException","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-event-context/pass-through-on-exception.html","searchKeys":["passThroughOnException","abstract var passThroughOnException: () -> Unit","dev.shibasis.reaktor.core.server.cloudflare.EventContext.passThroughOnException"]},{"name":"abstract var passThroughOnException: () -> Unit","description":"dev.shibasis.reaktor.core.server.cloudflare.EventPluginContext.passThroughOnException","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-event-plugin-context/pass-through-on-exception.html","searchKeys":["passThroughOnException","abstract var passThroughOnException: () -> Unit","dev.shibasis.reaktor.core.server.cloudflare.EventPluginContext.passThroughOnException"]},{"name":"abstract var password: URLPatternURLPatternComponentResult","description":"dev.shibasis.reaktor.core.server.cloudflare.URLPatternURLPatternResult.password","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-u-r-l-pattern-u-r-l-pattern-result/password.html","searchKeys":["password","abstract var password: URLPatternURLPatternComponentResult","dev.shibasis.reaktor.core.server.cloudflare.URLPatternURLPatternResult.password"]},{"name":"abstract var pathname: URLPatternURLPatternComponentResult","description":"dev.shibasis.reaktor.core.server.cloudflare.URLPatternURLPatternResult.pathname","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-u-r-l-pattern-u-r-l-pattern-result/pathname.html","searchKeys":["pathname","abstract var pathname: URLPatternURLPatternComponentResult","dev.shibasis.reaktor.core.server.cloudflare.URLPatternURLPatternResult.pathname"]},{"name":"abstract var payloadFormatIndicator: Number","description":"dev.shibasis.reaktor.core.server.cloudflare.PubSubMessage.payloadFormatIndicator","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-pub-sub-message/payload-format-indicator.html","searchKeys":["payloadFormatIndicator","abstract var payloadFormatIndicator: Number","dev.shibasis.reaktor.core.server.cloudflare.PubSubMessage.payloadFormatIndicator"]},{"name":"abstract var performance: Performance","description":"dev.shibasis.reaktor.core.server.cloudflare.ServiceWorkerGlobalScope.performance","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-service-worker-global-scope/performance.html","searchKeys":["performance","abstract var performance: Performance","dev.shibasis.reaktor.core.server.cloudflare.ServiceWorkerGlobalScope.performance"]},{"name":"abstract var pluginArgs: PluginArgs","description":"dev.shibasis.reaktor.core.server.cloudflare.EventPluginContext.pluginArgs","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-event-plugin-context/plugin-args.html","searchKeys":["pluginArgs","abstract var pluginArgs: PluginArgs","dev.shibasis.reaktor.core.server.cloudflare.EventPluginContext.pluginArgs"]},{"name":"abstract var port: Number","description":"dev.shibasis.reaktor.core.server.cloudflare.SocketAddress.port","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-socket-address/port.html","searchKeys":["port","abstract var port: Number","dev.shibasis.reaktor.core.server.cloudflare.SocketAddress.port"]},{"name":"abstract var port: URLPatternURLPatternComponentResult","description":"dev.shibasis.reaktor.core.server.cloudflare.URLPatternURLPatternResult.port","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-u-r-l-pattern-u-r-l-pattern-result/port.html","searchKeys":["port","abstract var port: URLPatternURLPatternComponentResult","dev.shibasis.reaktor.core.server.cloudflare.URLPatternURLPatternResult.port"]},{"name":"abstract var privateKey: CryptoKey","description":"dev.shibasis.reaktor.core.server.cloudflare.CryptoKeyPair.privateKey","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-crypto-key-pair/private-key.html","searchKeys":["privateKey","abstract var privateKey: CryptoKey","dev.shibasis.reaktor.core.server.cloudflare.CryptoKeyPair.privateKey"]},{"name":"abstract var protocol: URLPatternURLPatternComponentResult","description":"dev.shibasis.reaktor.core.server.cloudflare.URLPatternURLPatternResult.protocol","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-u-r-l-pattern-u-r-l-pattern-result/protocol.html","searchKeys":["protocol","abstract var protocol: URLPatternURLPatternComponentResult","dev.shibasis.reaktor.core.server.cloudflare.URLPatternURLPatternResult.protocol"]},{"name":"abstract var publicExponent: ArrayBuffer","description":"dev.shibasis.reaktor.core.server.cloudflare.CryptoKeyRsaKeyAlgorithm.publicExponent","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-crypto-key-rsa-key-algorithm/public-exponent.html","searchKeys":["publicExponent","abstract var publicExponent: ArrayBuffer","dev.shibasis.reaktor.core.server.cloudflare.CryptoKeyRsaKeyAlgorithm.publicExponent"]},{"name":"abstract var publicId: String?","description":"dev.shibasis.reaktor.core.server.cloudflare.Doctype.publicId","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-doctype/public-id.html","searchKeys":["publicId","abstract var publicId: String?","dev.shibasis.reaktor.core.server.cloudflare.Doctype.publicId"]},{"name":"abstract var publicKey: CryptoKey","description":"dev.shibasis.reaktor.core.server.cloudflare.CryptoKeyPair.publicKey","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-crypto-key-pair/public-key.html","searchKeys":["publicKey","abstract var publicKey: CryptoKey","dev.shibasis.reaktor.core.server.cloudflare.CryptoKeyPair.publicKey"]},{"name":"abstract var queue: QueueEvent__0","description":"dev.shibasis.reaktor.core.server.cloudflare.WorkerGlobalScopeEventMap.queue","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-worker-global-scope-event-map/queue.html","searchKeys":["queue","abstract var queue: QueueEvent__0","dev.shibasis.reaktor.core.server.cloudflare.WorkerGlobalScopeEventMap.queue"]},{"name":"abstract var queue: String","description":"dev.shibasis.reaktor.core.server.cloudflare.MessageBatch.queue","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-message-batch/queue.html","searchKeys":["queue","abstract var queue: String","dev.shibasis.reaktor.core.server.cloudflare.MessageBatch.queue"]},{"name":"abstract var queue: String","description":"dev.shibasis.reaktor.core.server.cloudflare.QueueEvent.queue","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-queue-event/queue.html","searchKeys":["queue","abstract var queue: String","dev.shibasis.reaktor.core.server.cloudflare.QueueEvent.queue"]},{"name":"abstract var queue: String","description":"dev.shibasis.reaktor.core.server.cloudflare.TraceItemQueueEventInfo.queue","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-trace-item-queue-event-info/queue.html","searchKeys":["queue","abstract var queue: String","dev.shibasis.reaktor.core.server.cloudflare.TraceItemQueueEventInfo.queue"]},{"name":"abstract var raw: ReadableStream<Uint8Array>","description":"dev.shibasis.reaktor.core.server.cloudflare.ForwardableEmailMessage.raw","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-forwardable-email-message/raw.html","searchKeys":["raw","abstract var raw: ReadableStream<Uint8Array>","dev.shibasis.reaktor.core.server.cloudflare.ForwardableEmailMessage.raw"]},{"name":"abstract var rawSize: Number","description":"dev.shibasis.reaktor.core.server.cloudflare.ForwardableEmailMessage.rawSize","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-forwardable-email-message/raw-size.html","searchKeys":["rawSize","abstract var rawSize: Number","dev.shibasis.reaktor.core.server.cloudflare.ForwardableEmailMessage.rawSize"]},{"name":"abstract var rawSize: Number","description":"dev.shibasis.reaktor.core.server.cloudflare.TraceItemEmailEventInfo.rawSize","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-trace-item-email-event-info/raw-size.html","searchKeys":["rawSize","abstract var rawSize: Number","dev.shibasis.reaktor.core.server.cloudflare.TraceItemEmailEventInfo.rawSize"]},{"name":"abstract var rcptTo: String","description":"dev.shibasis.reaktor.core.server.cloudflare.TraceItemEmailEventInfo.rcptTo","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-trace-item-email-event-info/rcpt-to.html","searchKeys":["rcptTo","abstract var rcptTo: String","dev.shibasis.reaktor.core.server.cloudflare.TraceItemEmailEventInfo.rcptTo"]},{"name":"abstract var read: Number","description":"dev.shibasis.reaktor.core.server.cloudflare.TextEncoderEncodeIntoResult.read","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-text-encoder-encode-into-result/read.html","searchKeys":["read","abstract var read: Number","dev.shibasis.reaktor.core.server.cloudflare.TextEncoderEncodeIntoResult.read"]},{"name":"abstract var readable: ReadableStream<R>","description":"dev.shibasis.reaktor.core.server.cloudflare.ReadableWritablePair.readable","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-readable-writable-pair/readable.html","searchKeys":["readable","abstract var readable: ReadableStream<R>","dev.shibasis.reaktor.core.server.cloudflare.ReadableWritablePair.readable"]},{"name":"abstract var receivedAt: Number","description":"dev.shibasis.reaktor.core.server.cloudflare.PubSubMessage.receivedAt","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-pub-sub-message/received-at.html","searchKeys":["receivedAt","abstract var receivedAt: Number","dev.shibasis.reaktor.core.server.cloudflare.PubSubMessage.receivedAt"]},{"name":"abstract var rejectionhandled: PromiseRejectionEvent","description":"dev.shibasis.reaktor.core.server.cloudflare.WorkerGlobalScopeEventMap.rejectionhandled","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-worker-global-scope-event-map/rejectionhandled.html","searchKeys":["rejectionhandled","abstract var rejectionhandled: PromiseRejectionEvent","dev.shibasis.reaktor.core.server.cloudflare.WorkerGlobalScopeEventMap.rejectionhandled"]},{"name":"abstract var removed: Boolean","description":"dev.shibasis.reaktor.core.server.cloudflare.Comment.removed","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-comment/removed.html","searchKeys":["removed","abstract var removed: Boolean","dev.shibasis.reaktor.core.server.cloudflare.Comment.removed"]},{"name":"abstract var removed: Boolean","description":"dev.shibasis.reaktor.core.server.cloudflare.Element.removed","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-element/removed.html","searchKeys":["removed","abstract var removed: Boolean","dev.shibasis.reaktor.core.server.cloudflare.Element.removed"]},{"name":"abstract var removed: Boolean","description":"dev.shibasis.reaktor.core.server.cloudflare.Text.removed","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-text/removed.html","searchKeys":["removed","abstract var removed: Boolean","dev.shibasis.reaktor.core.server.cloudflare.Text.removed"]},{"name":"abstract var request: Request__0","description":"dev.shibasis.reaktor.core.server.cloudflare.EventContext.request","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-event-context/request.html","searchKeys":["request","abstract var request: Request__0","dev.shibasis.reaktor.core.server.cloudflare.EventContext.request"]},{"name":"abstract var request: Request__0","description":"dev.shibasis.reaktor.core.server.cloudflare.EventPluginContext.request","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-event-plugin-context/request.html","searchKeys":["request","abstract var request: Request__0","dev.shibasis.reaktor.core.server.cloudflare.EventPluginContext.request"]},{"name":"abstract var request: TraceItemFetchEventInfoRequest","description":"dev.shibasis.reaktor.core.server.cloudflare.TraceItemFetchEventInfo.request","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-trace-item-fetch-event-info/request.html","searchKeys":["request","abstract var request: TraceItemFetchEventInfoRequest","dev.shibasis.reaktor.core.server.cloudflare.TraceItemFetchEventInfo.request"]},{"name":"abstract var requestPriority: String","description":"dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesBase.requestPriority","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-incoming-request-cf-properties-base/request-priority.html","searchKeys":["requestPriority","abstract var requestPriority: String","dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesBase.requestPriority"]},{"name":"abstract var results: Array<T>","description":"dev.shibasis.reaktor.core.server.cloudflare.D1Result.results","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-d1-result/results.html","searchKeys":["results","abstract var results: Array<T>","dev.shibasis.reaktor.core.server.cloudflare.D1Result.results"]},{"name":"abstract var scheduled: ScheduledEvent","description":"dev.shibasis.reaktor.core.server.cloudflare.WorkerGlobalScopeEventMap.scheduled","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-worker-global-scope-event-map/scheduled.html","searchKeys":["scheduled","abstract var scheduled: ScheduledEvent","dev.shibasis.reaktor.core.server.cloudflare.WorkerGlobalScopeEventMap.scheduled"]},{"name":"abstract var scheduledTime: Date","description":"dev.shibasis.reaktor.core.server.cloudflare.TraceItemAlarmEventInfo.scheduledTime","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-trace-item-alarm-event-info/scheduled-time.html","searchKeys":["scheduledTime","abstract var scheduledTime: Date","dev.shibasis.reaktor.core.server.cloudflare.TraceItemAlarmEventInfo.scheduledTime"]},{"name":"abstract var scheduledTime: Number","description":"dev.shibasis.reaktor.core.server.cloudflare.ScheduledController.scheduledTime","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-scheduled-controller/scheduled-time.html","searchKeys":["scheduledTime","abstract var scheduledTime: Number","dev.shibasis.reaktor.core.server.cloudflare.ScheduledController.scheduledTime"]},{"name":"abstract var scheduledTime: Number","description":"dev.shibasis.reaktor.core.server.cloudflare.TraceItemScheduledEventInfo.scheduledTime","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-trace-item-scheduled-event-info/scheduled-time.html","searchKeys":["scheduledTime","abstract var scheduledTime: Number","dev.shibasis.reaktor.core.server.cloudflare.TraceItemScheduledEventInfo.scheduledTime"]},{"name":"abstract var scheduler: Scheduler","description":"dev.shibasis.reaktor.core.server.cloudflare.ServiceWorkerGlobalScope.scheduler","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-service-worker-global-scope/scheduler.html","searchKeys":["scheduler","abstract var scheduler: Scheduler","dev.shibasis.reaktor.core.server.cloudflare.ServiceWorkerGlobalScope.scheduler"]},{"name":"abstract var score: Number","description":"dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesBotManagementBase.score","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-incoming-request-cf-properties-bot-management-base/score.html","searchKeys":["score","abstract var score: Number","dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesBotManagementBase.score"]},{"name":"abstract var scriptName: String?","description":"dev.shibasis.reaktor.core.server.cloudflare.TraceItem.scriptName","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-trace-item/script-name.html","searchKeys":["scriptName","abstract var scriptName: String?","dev.shibasis.reaktor.core.server.cloudflare.TraceItem.scriptName"]},{"name":"abstract var search: URLPatternURLPatternComponentResult","description":"dev.shibasis.reaktor.core.server.cloudflare.URLPatternURLPatternResult.search","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-u-r-l-pattern-u-r-l-pattern-result/search.html","searchKeys":["search","abstract var search: URLPatternURLPatternComponentResult","dev.shibasis.reaktor.core.server.cloudflare.URLPatternURLPatternResult.search"]},{"name":"abstract var self: ServiceWorkerGlobalScope","description":"dev.shibasis.reaktor.core.server.cloudflare.ServiceWorkerGlobalScope.self","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-service-worker-global-scope/self.html","searchKeys":["self","abstract var self: ServiceWorkerGlobalScope","dev.shibasis.reaktor.core.server.cloudflare.ServiceWorkerGlobalScope.self"]},{"name":"abstract var serverFinished: String","description":"dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesExportedAuthenticatorMetadata.serverFinished","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-incoming-request-cf-properties-exported-authenticator-metadata/server-finished.html","searchKeys":["serverFinished","abstract var serverFinished: String","dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesExportedAuthenticatorMetadata.serverFinished"]},{"name":"abstract var serverHandshake: String","description":"dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesExportedAuthenticatorMetadata.serverHandshake","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-incoming-request-cf-properties-exported-authenticator-metadata/server-handshake.html","searchKeys":["serverHandshake","abstract var serverHandshake: String","dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesExportedAuthenticatorMetadata.serverHandshake"]},{"name":"abstract var signal: AbortSignal","description":"dev.shibasis.reaktor.core.server.cloudflare.WritableStreamDefaultController.signal","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-writable-stream-default-controller/signal.html","searchKeys":["signal","abstract var signal: AbortSignal","dev.shibasis.reaktor.core.server.cloudflare.WritableStreamDefaultController.signal"]},{"name":"abstract var staticResource: Boolean","description":"dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesBotManagementBase.staticResource","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-incoming-request-cf-properties-bot-management-base/static-resource.html","searchKeys":["staticResource","abstract var staticResource: Boolean","dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesBotManagementBase.staticResource"]},{"name":"abstract var status: Number","description":"dev.shibasis.reaktor.core.server.cloudflare.TraceItemFetchEventInfoResponse.status","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-trace-item-fetch-event-info-response/status.html","searchKeys":["status","abstract var status: Number","dev.shibasis.reaktor.core.server.cloudflare.TraceItemFetchEventInfoResponse.status"]},{"name":"abstract var storage: DurableObjectStorage","description":"dev.shibasis.reaktor.core.server.cloudflare.DurableObjectState.storage","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-durable-object-state/storage.html","searchKeys":["storage","abstract var storage: DurableObjectStorage","dev.shibasis.reaktor.core.server.cloudflare.DurableObjectState.storage"]},{"name":"abstract var stream: Boolean","description":"dev.shibasis.reaktor.core.server.cloudflare.TextDecoderDecodeOptions.stream","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-text-decoder-decode-options/stream.html","searchKeys":["stream","abstract var stream: Boolean","dev.shibasis.reaktor.core.server.cloudflare.TextDecoderDecodeOptions.stream"]},{"name":"abstract var success: Boolean","description":"dev.shibasis.reaktor.core.server.cloudflare.D1Result.success","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-d1-result/success.html","searchKeys":["success","abstract var success: Boolean","dev.shibasis.reaktor.core.server.cloudflare.D1Result.success"]},{"name":"abstract var systemId: String?","description":"dev.shibasis.reaktor.core.server.cloudflare.Doctype.systemId","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-doctype/system-id.html","searchKeys":["systemId","abstract var systemId: String?","dev.shibasis.reaktor.core.server.cloudflare.Doctype.systemId"]},{"name":"abstract var tagName: String","description":"dev.shibasis.reaktor.core.server.cloudflare.Element.tagName","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-element/tag-name.html","searchKeys":["tagName","abstract var tagName: String","dev.shibasis.reaktor.core.server.cloudflare.Element.tagName"]},{"name":"abstract var text: String","description":"dev.shibasis.reaktor.core.server.cloudflare.Comment.text","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-comment/text.html","searchKeys":["text","abstract var text: String","dev.shibasis.reaktor.core.server.cloudflare.Comment.text"]},{"name":"abstract var text: String","description":"dev.shibasis.reaktor.core.server.cloudflare.Text.text","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-text/text.html","searchKeys":["text","abstract var text: String","dev.shibasis.reaktor.core.server.cloudflare.Text.text"]},{"name":"abstract var timeOrigin: Number","description":"dev.shibasis.reaktor.core.server.cloudflare.Performance.timeOrigin","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-performance/time-origin.html","searchKeys":["timeOrigin","abstract var timeOrigin: Number","dev.shibasis.reaktor.core.server.cloudflare.Performance.timeOrigin"]},{"name":"abstract var timestamp: Date","description":"dev.shibasis.reaktor.core.server.cloudflare.Message.timestamp","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-message/timestamp.html","searchKeys":["timestamp","abstract var timestamp: Date","dev.shibasis.reaktor.core.server.cloudflare.Message.timestamp"]},{"name":"abstract var timestamp: Number","description":"dev.shibasis.reaktor.core.server.cloudflare.TraceDiagnosticChannelEvent.timestamp","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-trace-diagnostic-channel-event/timestamp.html","searchKeys":["timestamp","abstract var timestamp: Number","dev.shibasis.reaktor.core.server.cloudflare.TraceDiagnosticChannelEvent.timestamp"]},{"name":"abstract var timestamp: Number","description":"dev.shibasis.reaktor.core.server.cloudflare.TraceException.timestamp","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-trace-exception/timestamp.html","searchKeys":["timestamp","abstract var timestamp: Number","dev.shibasis.reaktor.core.server.cloudflare.TraceException.timestamp"]},{"name":"abstract var timestamp: Number","description":"dev.shibasis.reaktor.core.server.cloudflare.TraceLog.timestamp","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-trace-log/timestamp.html","searchKeys":["timestamp","abstract var timestamp: Number","dev.shibasis.reaktor.core.server.cloudflare.TraceLog.timestamp"]},{"name":"abstract var tlsCipher: String","description":"dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesBase.tlsCipher","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-incoming-request-cf-properties-base/tls-cipher.html","searchKeys":["tlsCipher","abstract var tlsCipher: String","dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesBase.tlsCipher"]},{"name":"abstract var tlsVersion: String","description":"dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesBase.tlsVersion","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-incoming-request-cf-properties-base/tls-version.html","searchKeys":["tlsVersion","abstract var tlsVersion: String","dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesBase.tlsVersion"]},{"name":"abstract var to: String","description":"dev.shibasis.reaktor.core.server.cloudflare.EmailMessage.to","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-email-message/to.html","searchKeys":["to","abstract var to: String","dev.shibasis.reaktor.core.server.cloudflare.EmailMessage.to"]},{"name":"abstract var topic: String","description":"dev.shibasis.reaktor.core.server.cloudflare.PubSubMessage.topic","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-pub-sub-message/topic.html","searchKeys":["topic","abstract var topic: String","dev.shibasis.reaktor.core.server.cloudflare.PubSubMessage.topic"]},{"name":"abstract var type: String","description":"dev.shibasis.reaktor.core.server.cloudflare.UnderlyingByteSource.type","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-underlying-byte-source/type.html","searchKeys":["type","abstract var type: String","dev.shibasis.reaktor.core.server.cloudflare.UnderlyingByteSource.type"]},{"name":"abstract var type: Type","description":"dev.shibasis.reaktor.core.server.cloudflare.KVNamespaceGetOptions.type","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-k-v-namespace-get-options/type.html","searchKeys":["type","abstract var type: Type","dev.shibasis.reaktor.core.server.cloudflare.KVNamespaceGetOptions.type"]},{"name":"abstract var unhandledrejection: PromiseRejectionEvent","description":"dev.shibasis.reaktor.core.server.cloudflare.WorkerGlobalScopeEventMap.unhandledrejection","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-worker-global-scope-event-map/unhandledrejection.html","searchKeys":["unhandledrejection","abstract var unhandledrejection: PromiseRejectionEvent","dev.shibasis.reaktor.core.server.cloudflare.WorkerGlobalScopeEventMap.unhandledrejection"]},{"name":"abstract var uploadId: String","description":"dev.shibasis.reaktor.core.server.cloudflare.R2MultipartUpload.uploadId","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-r2-multipart-upload/upload-id.html","searchKeys":["uploadId","abstract var uploadId: String","dev.shibasis.reaktor.core.server.cloudflare.R2MultipartUpload.uploadId"]},{"name":"abstract var url: String","description":"dev.shibasis.reaktor.core.server.cloudflare.RequestInitCfPropertiesImageDraw.url","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-request-init-cf-properties-image-draw/url.html","searchKeys":["url","abstract var url: String","dev.shibasis.reaktor.core.server.cloudflare.RequestInitCfPropertiesImageDraw.url"]},{"name":"abstract var url: String","description":"dev.shibasis.reaktor.core.server.cloudflare.TraceItemFetchEventInfoRequest.url","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-trace-item-fetch-event-info-request/url.html","searchKeys":["url","abstract var url: String","dev.shibasis.reaktor.core.server.cloudflare.TraceItemFetchEventInfoRequest.url"]},{"name":"abstract var username: URLPatternURLPatternComponentResult","description":"dev.shibasis.reaktor.core.server.cloudflare.URLPatternURLPatternResult.username","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-u-r-l-pattern-u-r-l-pattern-result/username.html","searchKeys":["username","abstract var username: URLPatternURLPatternComponentResult","dev.shibasis.reaktor.core.server.cloudflare.URLPatternURLPatternResult.username"]},{"name":"abstract var value: Value?","description":"dev.shibasis.reaktor.core.server.cloudflare.KVNamespaceGetWithMetadataResult.value","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-k-v-namespace-get-with-metadata-result/value.html","searchKeys":["value","abstract var value: Value?","dev.shibasis.reaktor.core.server.cloudflare.KVNamespaceGetWithMetadataResult.value"]},{"name":"abstract var verifiedBot: Boolean","description":"dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesBotManagementBase.verifiedBot","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-incoming-request-cf-properties-bot-management-base/verified-bot.html","searchKeys":["verifiedBot","abstract var verifiedBot: Boolean","dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesBotManagementBase.verifiedBot"]},{"name":"abstract var view: Uint8Array?","description":"dev.shibasis.reaktor.core.server.cloudflare.ReadableStreamBYOBRequest.view","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-readable-stream-b-y-o-b-request/view.html","searchKeys":["view","abstract var view: Uint8Array?","dev.shibasis.reaktor.core.server.cloudflare.ReadableStreamBYOBRequest.view"]},{"name":"abstract var waitUntil: (promise: Promise<Any>) -> Unit","description":"dev.shibasis.reaktor.core.server.cloudflare.EventContext.waitUntil","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-event-context/wait-until.html","searchKeys":["waitUntil","abstract var waitUntil: (promise: Promise<Any>) -> Unit","dev.shibasis.reaktor.core.server.cloudflare.EventContext.waitUntil"]},{"name":"abstract var waitUntil: (promise: Promise<Any>) -> Unit","description":"dev.shibasis.reaktor.core.server.cloudflare.EventPluginContext.waitUntil","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-event-plugin-context/wait-until.html","searchKeys":["waitUntil","abstract var waitUntil: (promise: Promise<Any>) -> Unit","dev.shibasis.reaktor.core.server.cloudflare.EventPluginContext.waitUntil"]},{"name":"abstract var wallTime: Number","description":"dev.shibasis.reaktor.core.server.cloudflare.TraceMetrics.wallTime","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-trace-metrics/wall-time.html","searchKeys":["wallTime","abstract var wallTime: Number","dev.shibasis.reaktor.core.server.cloudflare.TraceMetrics.wallTime"]},{"name":"abstract var writable: WritableStream<W>","description":"dev.shibasis.reaktor.core.server.cloudflare.ReadableWritablePair.writable","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-readable-writable-pair/writable.html","searchKeys":["writable","abstract var writable: WritableStream<W>","dev.shibasis.reaktor.core.server.cloudflare.ReadableWritablePair.writable"]},{"name":"abstract var written: Number","description":"dev.shibasis.reaktor.core.server.cloudflare.TextEncoderEncodeIntoResult.written","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-text-encoder-encode-into-result/written.html","searchKeys":["written","abstract var written: Number","dev.shibasis.reaktor.core.server.cloudflare.TextEncoderEncodeIntoResult.written"]},{"name":"abstract var x: Number","description":"dev.shibasis.reaktor.core.server.cloudflare.BasicImageTransformationsGravityCoordinates.x","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-basic-image-transformations-gravity-coordinates/x.html","searchKeys":["x","abstract var x: Number","dev.shibasis.reaktor.core.server.cloudflare.BasicImageTransformationsGravityCoordinates.x"]},{"name":"abstract var y: Number","description":"dev.shibasis.reaktor.core.server.cloudflare.BasicImageTransformationsGravityCoordinates.y","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-basic-image-transformations-gravity-coordinates/y.html","searchKeys":["y","abstract var y: Number","dev.shibasis.reaktor.core.server.cloudflare.BasicImageTransformationsGravityCoordinates.y"]},{"name":"annotation class Expose","description":"dev.shibasis.reaktor.core.annotations.Expose","location":"reaktor-core/dev.shibasis.reaktor.core.annotations/-expose/index.html","searchKeys":["Expose","annotation class Expose","dev.shibasis.reaktor.core.annotations.Expose"]},{"name":"class AndroidPermissionAdapter(activity: ComponentActivity) : PermissionAdapter<ComponentActivity> ","description":"dev.shibasis.reaktor.core.adapters.AndroidPermissionAdapter","location":"reaktor-core/dev.shibasis.reaktor.core.adapters/-android-permission-adapter/index.html","searchKeys":["AndroidPermissionAdapter","class AndroidPermissionAdapter(activity: ComponentActivity) : PermissionAdapter<ComponentActivity> ","dev.shibasis.reaktor.core.adapters.AndroidPermissionAdapter"]},{"name":"class AndroidStorageAdapter(activity: ComponentActivity) : StorageAdapter<ComponentActivity> ","description":"dev.shibasis.reaktor.core.adapters.AndroidStorageAdapter","location":"reaktor-core/dev.shibasis.reaktor.core.adapters/-android-storage-adapter/index.html","searchKeys":["AndroidStorageAdapter","class AndroidStorageAdapter(activity: ComponentActivity) : StorageAdapter<ComponentActivity> ","dev.shibasis.reaktor.core.adapters.AndroidStorageAdapter"]},{"name":"class CreateSlot<T>(dependencyModule: DependencyModule = Feature) : ReadWriteProperty<Any, T?> ","description":"dev.shibasis.reaktor.core.framework.CreateSlot","location":"reaktor-core/dev.shibasis.reaktor.core.framework/-create-slot/index.html","searchKeys":["CreateSlot","class CreateSlot<T>(dependencyModule: DependencyModule = Feature) : ReadWriteProperty<Any, T?> ","dev.shibasis.reaktor.core.framework.CreateSlot"]},{"name":"class DarwinPermissionAdapter : PermissionAdapter<Unit> ","description":"dev.shibasis.reaktor.core.adapters.DarwinPermissionAdapter","location":"reaktor-core/dev.shibasis.reaktor.core.adapters/-darwin-permission-adapter/index.html","searchKeys":["DarwinPermissionAdapter","class DarwinPermissionAdapter : PermissionAdapter<Unit> ","dev.shibasis.reaktor.core.adapters.DarwinPermissionAdapter"]},{"name":"class DispatchGroup(coroutineDispatcher: CoroutineDispatcher)","description":"dev.shibasis.reaktor.core.framework.DispatchGroup","location":"reaktor-core/dev.shibasis.reaktor.core.framework/-dispatch-group/index.html","searchKeys":["DispatchGroup","class DispatchGroup(coroutineDispatcher: CoroutineDispatcher)","dev.shibasis.reaktor.core.framework.DispatchGroup"]},{"name":"constructor()","description":"dev.shibasis.reaktor.core.adapters.DarwinPermissionAdapter.DarwinPermissionAdapter","location":"reaktor-core/dev.shibasis.reaktor.core.adapters/-darwin-permission-adapter/-darwin-permission-adapter.html","searchKeys":["DarwinPermissionAdapter","constructor()","dev.shibasis.reaktor.core.adapters.DarwinPermissionAdapter.DarwinPermissionAdapter"]},{"name":"constructor()","description":"dev.shibasis.reaktor.core.framework.BaseActivity.BaseActivity","location":"reaktor-core/dev.shibasis.reaktor.core.framework/-base-activity/-base-activity.html","searchKeys":["BaseActivity","constructor()","dev.shibasis.reaktor.core.framework.BaseActivity.BaseActivity"]},{"name":"constructor()","description":"dev.shibasis.reaktor.core.server.cloudflare.AbortController.AbortController","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-abort-controller/-abort-controller.html","searchKeys":["AbortController","constructor()","dev.shibasis.reaktor.core.server.cloudflare.AbortController.AbortController"]},{"name":"constructor()","description":"dev.shibasis.reaktor.core.server.cloudflare.AbortSignal.AbortSignal","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-abort-signal/-abort-signal.html","searchKeys":["AbortSignal","constructor()","dev.shibasis.reaktor.core.server.cloudflare.AbortSignal.AbortSignal"]},{"name":"constructor()","description":"dev.shibasis.reaktor.core.server.cloudflare.Body.Body","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-body/-body.html","searchKeys":["Body","constructor()","dev.shibasis.reaktor.core.server.cloudflare.Body.Body"]},{"name":"constructor()","description":"dev.shibasis.reaktor.core.server.cloudflare.Cache.Cache","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-cache/-cache.html","searchKeys":["Cache","constructor()","dev.shibasis.reaktor.core.server.cloudflare.Cache.Cache"]},{"name":"constructor()","description":"dev.shibasis.reaktor.core.server.cloudflare.CacheStorage.CacheStorage","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-cache-storage/-cache-storage.html","searchKeys":["CacheStorage","constructor()","dev.shibasis.reaktor.core.server.cloudflare.CacheStorage.CacheStorage"]},{"name":"constructor()","description":"dev.shibasis.reaktor.core.server.cloudflare.Crypto.Crypto","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-crypto/-crypto.html","searchKeys":["Crypto","constructor()","dev.shibasis.reaktor.core.server.cloudflare.Crypto.Crypto"]},{"name":"constructor()","description":"dev.shibasis.reaktor.core.server.cloudflare.CryptoKey.CryptoKey","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-crypto-key/-crypto-key.html","searchKeys":["CryptoKey","constructor()","dev.shibasis.reaktor.core.server.cloudflare.CryptoKey.CryptoKey"]},{"name":"constructor()","description":"dev.shibasis.reaktor.core.server.cloudflare.D1Database.D1Database","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-d1-database/-d1-database.html","searchKeys":["D1Database","constructor()","dev.shibasis.reaktor.core.server.cloudflare.D1Database.D1Database"]},{"name":"constructor()","description":"dev.shibasis.reaktor.core.server.cloudflare.D1PreparedStatement.D1PreparedStatement","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-d1-prepared-statement/-d1-prepared-statement.html","searchKeys":["D1PreparedStatement","constructor()","dev.shibasis.reaktor.core.server.cloudflare.D1PreparedStatement.D1PreparedStatement"]},{"name":"constructor()","description":"dev.shibasis.reaktor.core.server.cloudflare.EventTarget.EventTarget","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-event-target/-event-target.html","searchKeys":["EventTarget","constructor()","dev.shibasis.reaktor.core.server.cloudflare.EventTarget.EventTarget"]},{"name":"constructor()","description":"dev.shibasis.reaktor.core.server.cloudflare.EventTarget__0.EventTarget__0","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-event-target__0/-event-target__0.html","searchKeys":["EventTarget__0","constructor()","dev.shibasis.reaktor.core.server.cloudflare.EventTarget__0.EventTarget__0"]},{"name":"constructor()","description":"dev.shibasis.reaktor.core.server.cloudflare.Fetcher.Fetcher","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-fetcher/-fetcher.html","searchKeys":["Fetcher","constructor()","dev.shibasis.reaktor.core.server.cloudflare.Fetcher.Fetcher"]},{"name":"constructor()","description":"dev.shibasis.reaktor.core.server.cloudflare.FormData.FormData","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-form-data/-form-data.html","searchKeys":["FormData","constructor()","dev.shibasis.reaktor.core.server.cloudflare.FormData.FormData"]},{"name":"constructor()","description":"dev.shibasis.reaktor.core.server.cloudflare.HTMLRewriter.HTMLRewriter","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-h-t-m-l-rewriter/-h-t-m-l-rewriter.html","searchKeys":["HTMLRewriter","constructor()","dev.shibasis.reaktor.core.server.cloudflare.HTMLRewriter.HTMLRewriter"]},{"name":"constructor()","description":"dev.shibasis.reaktor.core.server.cloudflare.Headers.Headers","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-headers/-headers.html","searchKeys":["Headers","constructor()","dev.shibasis.reaktor.core.server.cloudflare.Headers.Headers"]},{"name":"constructor()","description":"dev.shibasis.reaktor.core.server.cloudflare.R2Bucket.R2Bucket","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-r2-bucket/-r2-bucket.html","searchKeys":["R2Bucket","constructor()","dev.shibasis.reaktor.core.server.cloudflare.R2Bucket.R2Bucket"]},{"name":"constructor()","description":"dev.shibasis.reaktor.core.server.cloudflare.R2Object.R2Object","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-r2-object/-r2-object.html","searchKeys":["R2Object","constructor()","dev.shibasis.reaktor.core.server.cloudflare.R2Object.R2Object"]},{"name":"constructor()","description":"dev.shibasis.reaktor.core.server.cloudflare.Request__0.Request__0","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-request__0/-request__0.html","searchKeys":["Request__0","constructor()","dev.shibasis.reaktor.core.server.cloudflare.Request__0.Request__0"]},{"name":"constructor()","description":"dev.shibasis.reaktor.core.server.cloudflare.Response.Response","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-response/-response.html","searchKeys":["Response","constructor()","dev.shibasis.reaktor.core.server.cloudflare.Response.Response"]},{"name":"constructor()","description":"dev.shibasis.reaktor.core.server.cloudflare.SubtleCrypto.SubtleCrypto","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-subtle-crypto/-subtle-crypto.html","searchKeys":["SubtleCrypto","constructor()","dev.shibasis.reaktor.core.server.cloudflare.SubtleCrypto.SubtleCrypto"]},{"name":"constructor()","description":"dev.shibasis.reaktor.core.server.cloudflare.TextEncoder.TextEncoder","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-text-encoder/-text-encoder.html","searchKeys":["TextEncoder","constructor()","dev.shibasis.reaktor.core.server.cloudflare.TextEncoder.TextEncoder"]},{"name":"constructor()","description":"dev.shibasis.reaktor.core.server.cloudflare.TextEncoderStream.TextEncoderStream","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-text-encoder-stream/-text-encoder-stream.html","searchKeys":["TextEncoderStream","constructor()","dev.shibasis.reaktor.core.server.cloudflare.TextEncoderStream.TextEncoderStream"]},{"name":"constructor()","description":"dev.shibasis.reaktor.core.server.cloudflare.URLPattern.URLPattern","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-u-r-l-pattern/-u-r-l-pattern.html","searchKeys":["URLPattern","constructor()","dev.shibasis.reaktor.core.server.cloudflare.URLPattern.URLPattern"]},{"name":"constructor()","description":"dev.shibasis.reaktor.core.server.cloudflare.URLSearchParams.URLSearchParams","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-u-r-l-search-params/-u-r-l-search-params.html","searchKeys":["URLSearchParams","constructor()","dev.shibasis.reaktor.core.server.cloudflare.URLSearchParams.URLSearchParams"]},{"name":"constructor()","description":"dev.shibasis.reaktor.core.server.cloudflare.WorkerGlobalScope.WorkerGlobalScope","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-worker-global-scope/-worker-global-scope.html","searchKeys":["WorkerGlobalScope","constructor()","dev.shibasis.reaktor.core.server.cloudflare.WorkerGlobalScope.WorkerGlobalScope"]},{"name":"constructor()","description":"dev.shibasis.reaktor.core.server.cloudflare.WritableStream__0.WritableStream__0","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-writable-stream__0/-writable-stream__0.html","searchKeys":["WritableStream__0","constructor()","dev.shibasis.reaktor.core.server.cloudflare.WritableStream__0.WritableStream__0"]},{"name":"constructor(activity: ComponentActivity)","description":"dev.shibasis.reaktor.core.adapters.AndroidPermissionAdapter.AndroidPermissionAdapter","location":"reaktor-core/dev.shibasis.reaktor.core.adapters/-android-permission-adapter/-android-permission-adapter.html","searchKeys":["AndroidPermissionAdapter","constructor(activity: ComponentActivity)","dev.shibasis.reaktor.core.adapters.AndroidPermissionAdapter.AndroidPermissionAdapter"]},{"name":"constructor(activity: ComponentActivity)","description":"dev.shibasis.reaktor.core.adapters.AndroidStorageAdapter.AndroidStorageAdapter","location":"reaktor-core/dev.shibasis.reaktor.core.adapters/-android-storage-adapter/-android-storage-adapter.html","searchKeys":["AndroidStorageAdapter","constructor(activity: ComponentActivity)","dev.shibasis.reaktor.core.adapters.AndroidStorageAdapter.AndroidStorageAdapter"]},{"name":"constructor(algorithm: String)","description":"dev.shibasis.reaktor.core.server.cloudflare.DigestStream.DigestStream","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-digest-stream/-digest-stream.html","searchKeys":["DigestStream","constructor(algorithm: String)","dev.shibasis.reaktor.core.server.cloudflare.DigestStream.DigestStream"]},{"name":"constructor(algorithm: SubtleCryptoHashAlgorithm)","description":"dev.shibasis.reaktor.core.server.cloudflare.DigestStream.DigestStream","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-digest-stream/-digest-stream.html","searchKeys":["DigestStream","constructor(algorithm: SubtleCryptoHashAlgorithm)","dev.shibasis.reaktor.core.server.cloudflare.DigestStream.DigestStream"]},{"name":"constructor(bits: Array<Any> = definedExternally, options: BlobOptions = definedExternally)","description":"dev.shibasis.reaktor.core.server.cloudflare.Blob.Blob","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-blob/-blob.html","searchKeys":["Blob","constructor(bits: Array<Any> = definedExternally, options: BlobOptions = definedExternally)","dev.shibasis.reaktor.core.server.cloudflare.Blob.Blob"]},{"name":"constructor(body: ArrayBuffer? = definedExternally)","description":"dev.shibasis.reaktor.core.server.cloudflare.Response.Response","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-response/-response.html","searchKeys":["Response","constructor(body: ArrayBuffer? = definedExternally)","dev.shibasis.reaktor.core.server.cloudflare.Response.Response"]},{"name":"constructor(body: ArrayBuffer? = definedExternally, init: ResponseInit = definedExternally)","description":"dev.shibasis.reaktor.core.server.cloudflare.Response.Response","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-response/-response.html","searchKeys":["Response","constructor(body: ArrayBuffer? = definedExternally, init: ResponseInit = definedExternally)","dev.shibasis.reaktor.core.server.cloudflare.Response.Response"]},{"name":"constructor(body: ArrayBufferView? = definedExternally)","description":"dev.shibasis.reaktor.core.server.cloudflare.Response.Response","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-response/-response.html","searchKeys":["Response","constructor(body: ArrayBufferView? = definedExternally)","dev.shibasis.reaktor.core.server.cloudflare.Response.Response"]},{"name":"constructor(body: ArrayBufferView? = definedExternally, init: ResponseInit = definedExternally)","description":"dev.shibasis.reaktor.core.server.cloudflare.Response.Response","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-response/-response.html","searchKeys":["Response","constructor(body: ArrayBufferView? = definedExternally, init: ResponseInit = definedExternally)","dev.shibasis.reaktor.core.server.cloudflare.Response.Response"]},{"name":"constructor(body: Blob? = definedExternally)","description":"dev.shibasis.reaktor.core.server.cloudflare.Response.Response","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-response/-response.html","searchKeys":["Response","constructor(body: Blob? = definedExternally)","dev.shibasis.reaktor.core.server.cloudflare.Response.Response"]},{"name":"constructor(body: Blob? = definedExternally, init: ResponseInit = definedExternally)","description":"dev.shibasis.reaktor.core.server.cloudflare.Response.Response","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-response/-response.html","searchKeys":["Response","constructor(body: Blob? = definedExternally, init: ResponseInit = definedExternally)","dev.shibasis.reaktor.core.server.cloudflare.Response.Response"]},{"name":"constructor(body: FormData? = definedExternally)","description":"dev.shibasis.reaktor.core.server.cloudflare.Response.Response","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-response/-response.html","searchKeys":["Response","constructor(body: FormData? = definedExternally)","dev.shibasis.reaktor.core.server.cloudflare.Response.Response"]},{"name":"constructor(body: FormData? = definedExternally, init: ResponseInit = definedExternally)","description":"dev.shibasis.reaktor.core.server.cloudflare.Response.Response","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-response/-response.html","searchKeys":["Response","constructor(body: FormData? = definedExternally, init: ResponseInit = definedExternally)","dev.shibasis.reaktor.core.server.cloudflare.Response.Response"]},{"name":"constructor(body: ReadableStream<Uint8Array>? = definedExternally)","description":"dev.shibasis.reaktor.core.server.cloudflare.Response.Response","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-response/-response.html","searchKeys":["Response","constructor(body: ReadableStream<Uint8Array>? = definedExternally)","dev.shibasis.reaktor.core.server.cloudflare.Response.Response"]},{"name":"constructor(body: ReadableStream<Uint8Array>? = definedExternally, init: ResponseInit = definedExternally)","description":"dev.shibasis.reaktor.core.server.cloudflare.Response.Response","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-response/-response.html","searchKeys":["Response","constructor(body: ReadableStream<Uint8Array>? = definedExternally, init: ResponseInit = definedExternally)","dev.shibasis.reaktor.core.server.cloudflare.Response.Response"]},{"name":"constructor(body: String? = definedExternally)","description":"dev.shibasis.reaktor.core.server.cloudflare.Response.Response","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-response/-response.html","searchKeys":["Response","constructor(body: String? = definedExternally)","dev.shibasis.reaktor.core.server.cloudflare.Response.Response"]},{"name":"constructor(body: String? = definedExternally, init: ResponseInit = definedExternally)","description":"dev.shibasis.reaktor.core.server.cloudflare.Response.Response","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-response/-response.html","searchKeys":["Response","constructor(body: String? = definedExternally, init: ResponseInit = definedExternally)","dev.shibasis.reaktor.core.server.cloudflare.Response.Response"]},{"name":"constructor(body: URLSearchParams? = definedExternally)","description":"dev.shibasis.reaktor.core.server.cloudflare.Response.Response","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-response/-response.html","searchKeys":["Response","constructor(body: URLSearchParams? = definedExternally)","dev.shibasis.reaktor.core.server.cloudflare.Response.Response"]},{"name":"constructor(body: URLSearchParams? = definedExternally, init: ResponseInit = definedExternally)","description":"dev.shibasis.reaktor.core.server.cloudflare.Response.Response","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-response/-response.html","searchKeys":["Response","constructor(body: URLSearchParams? = definedExternally, init: ResponseInit = definedExternally)","dev.shibasis.reaktor.core.server.cloudflare.Response.Response"]},{"name":"constructor(code: Int, message: String)","description":"dev.shibasis.reaktor.core.network.ErrorMessage.ErrorMessage","location":"reaktor-core/dev.shibasis.reaktor.core.network/-error-message/-error-message.html","searchKeys":["ErrorMessage","constructor(code: Int, message: String)","dev.shibasis.reaktor.core.network.ErrorMessage.ErrorMessage"]},{"name":"constructor(controller: Controller)","description":"dev.shibasis.reaktor.core.adapters.PermissionAdapter.PermissionAdapter","location":"reaktor-core/dev.shibasis.reaktor.core.adapters/-permission-adapter/-permission-adapter.html","searchKeys":["PermissionAdapter","constructor(controller: Controller)","dev.shibasis.reaktor.core.adapters.PermissionAdapter.PermissionAdapter"]},{"name":"constructor(controller: Controller)","description":"dev.shibasis.reaktor.core.adapters.StorageAdapter.StorageAdapter","location":"reaktor-core/dev.shibasis.reaktor.core.adapters/-storage-adapter/-storage-adapter.html","searchKeys":["StorageAdapter","constructor(controller: Controller)","dev.shibasis.reaktor.core.adapters.StorageAdapter.StorageAdapter"]},{"name":"constructor(controller: Controller, scope: CoroutineScope = CoroutineScope(Dispatchers.Main))","description":"dev.shibasis.reaktor.core.framework.Adapter.Adapter","location":"reaktor-core/dev.shibasis.reaktor.core.framework/-adapter/-adapter.html","searchKeys":["Adapter","constructor(controller: Controller, scope: CoroutineScope = CoroutineScope(Dispatchers.Main))","dev.shibasis.reaktor.core.framework.Adapter.Adapter"]},{"name":"constructor(coroutineDispatcher: CoroutineDispatcher)","description":"dev.shibasis.reaktor.core.framework.DispatchGroup.DispatchGroup","location":"reaktor-core/dev.shibasis.reaktor.core.framework/-dispatch-group/-dispatch-group.html","searchKeys":["DispatchGroup","constructor(coroutineDispatcher: CoroutineDispatcher)","dev.shibasis.reaktor.core.framework.DispatchGroup.DispatchGroup"]},{"name":"constructor(decoder: String = definedExternally, options: TextDecoderConstructorOptions = definedExternally)","description":"dev.shibasis.reaktor.core.server.cloudflare.TextDecoder.TextDecoder","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-text-decoder/-text-decoder.html","searchKeys":["TextDecoder","constructor(decoder: String = definedExternally, options: TextDecoderConstructorOptions = definedExternally)","dev.shibasis.reaktor.core.server.cloudflare.TextDecoder.TextDecoder"]},{"name":"constructor(dependencyModule: DependencyModule = Feature)","description":"dev.shibasis.reaktor.core.framework.CreateSlot.CreateSlot","location":"reaktor-core/dev.shibasis.reaktor.core.framework/-create-slot/-create-slot.html","searchKeys":["CreateSlot","constructor(dependencyModule: DependencyModule = Feature)","dev.shibasis.reaktor.core.framework.CreateSlot.CreateSlot"]},{"name":"constructor(error: Error)","description":"dev.shibasis.reaktor.core.adapters.PermissionResult.Denied.Unknown.Unknown","location":"reaktor-core/dev.shibasis.reaktor.core.adapters/-permission-result/-denied/-unknown/-unknown.html","searchKeys":["Unknown","constructor(error: Error)","dev.shibasis.reaktor.core.adapters.PermissionResult.Denied.Unknown.Unknown"]},{"name":"constructor(expectedLength: Any)","description":"dev.shibasis.reaktor.core.server.cloudflare.FixedLengthStream.FixedLengthStream","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-fixed-length-stream/-fixed-length-stream.html","searchKeys":["FixedLengthStream","constructor(expectedLength: Any)","dev.shibasis.reaktor.core.server.cloudflare.FixedLengthStream.FixedLengthStream"]},{"name":"constructor(expectedLength: Any, queuingStrategy: IdentityTransformStreamQueuingStrategy = definedExternally)","description":"dev.shibasis.reaktor.core.server.cloudflare.FixedLengthStream.FixedLengthStream","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-fixed-length-stream/-fixed-length-stream.html","searchKeys":["FixedLengthStream","constructor(expectedLength: Any, queuingStrategy: IdentityTransformStreamQueuingStrategy = definedExternally)","dev.shibasis.reaktor.core.server.cloudflare.FixedLengthStream.FixedLengthStream"]},{"name":"constructor(expectedLength: Number)","description":"dev.shibasis.reaktor.core.server.cloudflare.FixedLengthStream.FixedLengthStream","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-fixed-length-stream/-fixed-length-stream.html","searchKeys":["FixedLengthStream","constructor(expectedLength: Number)","dev.shibasis.reaktor.core.server.cloudflare.FixedLengthStream.FixedLengthStream"]},{"name":"constructor(expectedLength: Number, queuingStrategy: IdentityTransformStreamQueuingStrategy = definedExternally)","description":"dev.shibasis.reaktor.core.server.cloudflare.FixedLengthStream.FixedLengthStream","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-fixed-length-stream/-fixed-length-stream.html","searchKeys":["FixedLengthStream","constructor(expectedLength: Number, queuingStrategy: IdentityTransformStreamQueuingStrategy = definedExternally)","dev.shibasis.reaktor.core.server.cloudflare.FixedLengthStream.FixedLengthStream"]},{"name":"constructor(format: String)","description":"dev.shibasis.reaktor.core.server.cloudflare.CompressionStream.CompressionStream","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-compression-stream/-compression-stream.html","searchKeys":["CompressionStream","constructor(format: String)","dev.shibasis.reaktor.core.server.cloudflare.CompressionStream.CompressionStream"]},{"name":"constructor(format: String)","description":"dev.shibasis.reaktor.core.server.cloudflare.DecompressionStream.DecompressionStream","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-decompression-stream/-decompression-stream.html","searchKeys":["DecompressionStream","constructor(format: String)","dev.shibasis.reaktor.core.server.cloudflare.DecompressionStream.DecompressionStream"]},{"name":"constructor(init: Array<Any> = definedExternally)","description":"dev.shibasis.reaktor.core.server.cloudflare.URLSearchParams.URLSearchParams","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-u-r-l-search-params/-u-r-l-search-params.html","searchKeys":["URLSearchParams","constructor(init: Array<Any> = definedExternally)","dev.shibasis.reaktor.core.server.cloudflare.URLSearchParams.URLSearchParams"]},{"name":"constructor(init: Headers = definedExternally)","description":"dev.shibasis.reaktor.core.server.cloudflare.Headers.Headers","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-headers/-headers.html","searchKeys":["Headers","constructor(init: Headers = definedExternally)","dev.shibasis.reaktor.core.server.cloudflare.Headers.Headers"]},{"name":"constructor(init: Iterable<Iterable<String>> = definedExternally)","description":"dev.shibasis.reaktor.core.server.cloudflare.Headers.Headers","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-headers/-headers.html","searchKeys":["Headers","constructor(init: Iterable<Iterable<String>> = definedExternally)","dev.shibasis.reaktor.core.server.cloudflare.Headers.Headers"]},{"name":"constructor(init: QueuingStrategyInit)","description":"dev.shibasis.reaktor.core.server.cloudflare.ByteLengthQueuingStrategy.ByteLengthQueuingStrategy","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-byte-length-queuing-strategy/-byte-length-queuing-strategy.html","searchKeys":["ByteLengthQueuingStrategy","constructor(init: QueuingStrategyInit)","dev.shibasis.reaktor.core.server.cloudflare.ByteLengthQueuingStrategy.ByteLengthQueuingStrategy"]},{"name":"constructor(init: QueuingStrategyInit)","description":"dev.shibasis.reaktor.core.server.cloudflare.CountQueuingStrategy.CountQueuingStrategy","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-count-queuing-strategy/-count-queuing-strategy.html","searchKeys":["CountQueuingStrategy","constructor(init: QueuingStrategyInit)","dev.shibasis.reaktor.core.server.cloudflare.CountQueuingStrategy.CountQueuingStrategy"]},{"name":"constructor(init: Record<String, String> = definedExternally)","description":"dev.shibasis.reaktor.core.server.cloudflare.Headers.Headers","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-headers/-headers.html","searchKeys":["Headers","constructor(init: Record<String, String> = definedExternally)","dev.shibasis.reaktor.core.server.cloudflare.Headers.Headers"]},{"name":"constructor(init: Record<String, String> = definedExternally)","description":"dev.shibasis.reaktor.core.server.cloudflare.URLSearchParams.URLSearchParams","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-u-r-l-search-params/-u-r-l-search-params.html","searchKeys":["URLSearchParams","constructor(init: Record<String, String> = definedExternally)","dev.shibasis.reaktor.core.server.cloudflare.URLSearchParams.URLSearchParams"]},{"name":"constructor(init: String = definedExternally)","description":"dev.shibasis.reaktor.core.server.cloudflare.URLSearchParams.URLSearchParams","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-u-r-l-search-params/-u-r-l-search-params.html","searchKeys":["URLSearchParams","constructor(init: String = definedExternally)","dev.shibasis.reaktor.core.server.cloudflare.URLSearchParams.URLSearchParams"]},{"name":"constructor(init: URLSearchParams = definedExternally)","description":"dev.shibasis.reaktor.core.server.cloudflare.URLSearchParams.URLSearchParams","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-u-r-l-search-params/-u-r-l-search-params.html","searchKeys":["URLSearchParams","constructor(init: URLSearchParams = definedExternally)","dev.shibasis.reaktor.core.server.cloudflare.URLSearchParams.URLSearchParams"]},{"name":"constructor(input: Request<Any, Any>)","description":"dev.shibasis.reaktor.core.server.cloudflare.Request.Request","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-request/-request.html","searchKeys":["Request","constructor(input: Request<Any, Any>)","dev.shibasis.reaktor.core.server.cloudflare.Request.Request"]},{"name":"constructor(input: Request<Any, Any>, init: RequestInit<Cf> = definedExternally)","description":"dev.shibasis.reaktor.core.server.cloudflare.Request.Request","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-request/-request.html","searchKeys":["Request","constructor(input: Request<Any, Any>, init: RequestInit<Cf> = definedExternally)","dev.shibasis.reaktor.core.server.cloudflare.Request.Request"]},{"name":"constructor(input: String = definedExternally)","description":"dev.shibasis.reaktor.core.server.cloudflare.URLPattern.URLPattern","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-u-r-l-pattern/-u-r-l-pattern.html","searchKeys":["URLPattern","constructor(input: String = definedExternally)","dev.shibasis.reaktor.core.server.cloudflare.URLPattern.URLPattern"]},{"name":"constructor(input: String = definedExternally, baseURL: String = definedExternally)","description":"dev.shibasis.reaktor.core.server.cloudflare.URLPattern.URLPattern","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-u-r-l-pattern/-u-r-l-pattern.html","searchKeys":["URLPattern","constructor(input: String = definedExternally, baseURL: String = definedExternally)","dev.shibasis.reaktor.core.server.cloudflare.URLPattern.URLPattern"]},{"name":"constructor(input: String)","description":"dev.shibasis.reaktor.core.server.cloudflare.Request.Request","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-request/-request.html","searchKeys":["Request","constructor(input: String)","dev.shibasis.reaktor.core.server.cloudflare.Request.Request"]},{"name":"constructor(input: String, init: RequestInit<Cf> = definedExternally)","description":"dev.shibasis.reaktor.core.server.cloudflare.Request.Request","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-request/-request.html","searchKeys":["Request","constructor(input: String, init: RequestInit<Cf> = definedExternally)","dev.shibasis.reaktor.core.server.cloudflare.Request.Request"]},{"name":"constructor(input: URL)","description":"dev.shibasis.reaktor.core.server.cloudflare.Request.Request","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-request/-request.html","searchKeys":["Request","constructor(input: URL)","dev.shibasis.reaktor.core.server.cloudflare.Request.Request"]},{"name":"constructor(input: URL, init: RequestInit<Cf> = definedExternally)","description":"dev.shibasis.reaktor.core.server.cloudflare.Request.Request","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-request/-request.html","searchKeys":["Request","constructor(input: URL, init: RequestInit<Cf> = definedExternally)","dev.shibasis.reaktor.core.server.cloudflare.Request.Request"]},{"name":"constructor(input: URLPatternURLPatternInit = definedExternally)","description":"dev.shibasis.reaktor.core.server.cloudflare.URLPattern.URLPattern","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-u-r-l-pattern/-u-r-l-pattern.html","searchKeys":["URLPattern","constructor(input: URLPatternURLPatternInit = definedExternally)","dev.shibasis.reaktor.core.server.cloudflare.URLPattern.URLPattern"]},{"name":"constructor(input: URLPatternURLPatternInit = definedExternally, baseURL: String = definedExternally)","description":"dev.shibasis.reaktor.core.server.cloudflare.URLPattern.URLPattern","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-u-r-l-pattern/-u-r-l-pattern.html","searchKeys":["URLPattern","constructor(input: URLPatternURLPatternInit = definedExternally, baseURL: String = definedExternally)","dev.shibasis.reaktor.core.server.cloudflare.URLPattern.URLPattern"]},{"name":"constructor(jsonData: String, statusCode: StatusCode = StatusCode.OK)","description":"dev.shibasis.reaktor.core.network.Response.Response","location":"reaktor-core/dev.shibasis.reaktor.core.network/-response/-response.html","searchKeys":["Response","constructor(jsonData: String, statusCode: StatusCode = StatusCode.OK)","dev.shibasis.reaktor.core.network.Response.Response"]},{"name":"constructor(label: String = definedExternally, options: TextDecoderStreamTextDecoderStreamInit = definedExternally)","description":"dev.shibasis.reaktor.core.server.cloudflare.TextDecoderStream.TextDecoderStream","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-text-decoder-stream/-text-decoder-stream.html","searchKeys":["TextDecoderStream","constructor(label: String = definedExternally, options: TextDecoderStreamTextDecoderStreamInit = definedExternally)","dev.shibasis.reaktor.core.server.cloudflare.TextDecoderStream.TextDecoderStream"]},{"name":"constructor(queuingStrategy: IdentityTransformStreamQueuingStrategy = definedExternally)","description":"dev.shibasis.reaktor.core.server.cloudflare.IdentityTransformStream.IdentityTransformStream","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-identity-transform-stream/-identity-transform-stream.html","searchKeys":["IdentityTransformStream","constructor(queuingStrategy: IdentityTransformStreamQueuingStrategy = definedExternally)","dev.shibasis.reaktor.core.server.cloudflare.IdentityTransformStream.IdentityTransformStream"]},{"name":"constructor(request: String, response: String)","description":"dev.shibasis.reaktor.core.server.cloudflare.WebSocketRequestResponsePair.WebSocketRequestResponsePair","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-web-socket-request-response-pair/-web-socket-request-response-pair.html","searchKeys":["WebSocketRequestResponsePair","constructor(request: String, response: String)","dev.shibasis.reaktor.core.server.cloudflare.WebSocketRequestResponsePair.WebSocketRequestResponsePair"]},{"name":"constructor(stream: ReadableStream<Uint8Array>)","description":"dev.shibasis.reaktor.core.server.cloudflare.ReadableStreamBYOBReader.ReadableStreamBYOBReader","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-readable-stream-b-y-o-b-reader/-readable-stream-b-y-o-b-reader.html","searchKeys":["ReadableStreamBYOBReader","constructor(stream: ReadableStream<Uint8Array>)","dev.shibasis.reaktor.core.server.cloudflare.ReadableStreamBYOBReader.ReadableStreamBYOBReader"]},{"name":"constructor(stream: ReadableStream<Uint8Array>)","description":"dev.shibasis.reaktor.core.server.cloudflare.ReadableStreamDefaultReader.ReadableStreamDefaultReader","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-readable-stream-default-reader/-readable-stream-default-reader.html","searchKeys":["ReadableStreamDefaultReader","constructor(stream: ReadableStream<Uint8Array>)","dev.shibasis.reaktor.core.server.cloudflare.ReadableStreamDefaultReader.ReadableStreamDefaultReader"]},{"name":"constructor(stream: WritableStream__0)","description":"dev.shibasis.reaktor.core.server.cloudflare.WritableStreamDefaultWriter.WritableStreamDefaultWriter","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-writable-stream-default-writer/-writable-stream-default-writer.html","searchKeys":["WritableStreamDefaultWriter","constructor(stream: WritableStream__0)","dev.shibasis.reaktor.core.server.cloudflare.WritableStreamDefaultWriter.WritableStreamDefaultWriter"]},{"name":"constructor(transformer: Transformer<I, O> = definedExternally, writableStrategy: QueuingStrategy<I> = definedExternally, readableStrategy: QueuingStrategy<O> = definedExternally)","description":"dev.shibasis.reaktor.core.server.cloudflare.TransformStream.TransformStream","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-transform-stream/-transform-stream.html","searchKeys":["TransformStream","constructor(transformer: Transformer<I, O> = definedExternally, writableStrategy: QueuingStrategy<I> = definedExternally, readableStrategy: QueuingStrategy<O> = definedExternally)","dev.shibasis.reaktor.core.server.cloudflare.TransformStream.TransformStream"]},{"name":"constructor(type: String, init: EventInit = definedExternally)","description":"dev.shibasis.reaktor.core.server.cloudflare.EmailEvent.EmailEvent","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-email-event/-email-event.html","searchKeys":["EmailEvent","constructor(type: String, init: EventInit = definedExternally)","dev.shibasis.reaktor.core.server.cloudflare.EmailEvent.EmailEvent"]},{"name":"constructor(type: String, init: EventInit = definedExternally)","description":"dev.shibasis.reaktor.core.server.cloudflare.Event.Event","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-event/-event.html","searchKeys":["Event","constructor(type: String, init: EventInit = definedExternally)","dev.shibasis.reaktor.core.server.cloudflare.Event.Event"]},{"name":"constructor(type: String, init: EventInit = definedExternally)","description":"dev.shibasis.reaktor.core.server.cloudflare.ExtendableEvent.ExtendableEvent","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-extendable-event/-extendable-event.html","searchKeys":["ExtendableEvent","constructor(type: String, init: EventInit = definedExternally)","dev.shibasis.reaktor.core.server.cloudflare.ExtendableEvent.ExtendableEvent"]},{"name":"constructor(type: String, init: EventInit = definedExternally)","description":"dev.shibasis.reaktor.core.server.cloudflare.FetchEvent.FetchEvent","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-fetch-event/-fetch-event.html","searchKeys":["FetchEvent","constructor(type: String, init: EventInit = definedExternally)","dev.shibasis.reaktor.core.server.cloudflare.FetchEvent.FetchEvent"]},{"name":"constructor(type: String, init: EventInit = definedExternally)","description":"dev.shibasis.reaktor.core.server.cloudflare.PromiseRejectionEvent.PromiseRejectionEvent","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-promise-rejection-event/-promise-rejection-event.html","searchKeys":["PromiseRejectionEvent","constructor(type: String, init: EventInit = definedExternally)","dev.shibasis.reaktor.core.server.cloudflare.PromiseRejectionEvent.PromiseRejectionEvent"]},{"name":"constructor(type: String, init: EventInit = definedExternally)","description":"dev.shibasis.reaktor.core.server.cloudflare.ScheduledEvent.ScheduledEvent","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-scheduled-event/-scheduled-event.html","searchKeys":["ScheduledEvent","constructor(type: String, init: EventInit = definedExternally)","dev.shibasis.reaktor.core.server.cloudflare.ScheduledEvent.ScheduledEvent"]},{"name":"constructor(type: String, init: EventInit = definedExternally)","description":"dev.shibasis.reaktor.core.server.cloudflare.TailEvent.TailEvent","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-tail-event/-tail-event.html","searchKeys":["TailEvent","constructor(type: String, init: EventInit = definedExternally)","dev.shibasis.reaktor.core.server.cloudflare.TailEvent.TailEvent"]},{"name":"constructor(type: String, initializer: CloseEventInit)","description":"dev.shibasis.reaktor.core.server.cloudflare.CloseEvent.CloseEvent","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-close-event/-close-event.html","searchKeys":["CloseEvent","constructor(type: String, initializer: CloseEventInit)","dev.shibasis.reaktor.core.server.cloudflare.CloseEvent.CloseEvent"]},{"name":"constructor(type: String, initializer: MessageEventInit)","description":"dev.shibasis.reaktor.core.server.cloudflare.MessageEvent.MessageEvent","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-message-event/-message-event.html","searchKeys":["MessageEvent","constructor(type: String, initializer: MessageEventInit)","dev.shibasis.reaktor.core.server.cloudflare.MessageEvent.MessageEvent"]},{"name":"constructor(underlyingSink: UnderlyingSink__0 = definedExternally, queuingStrategy: QueuingStrategy__0 = definedExternally)","description":"dev.shibasis.reaktor.core.server.cloudflare.WritableStream.WritableStream","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-writable-stream/-writable-stream.html","searchKeys":["WritableStream","constructor(underlyingSink: UnderlyingSink__0 = definedExternally, queuingStrategy: QueuingStrategy__0 = definedExternally)","dev.shibasis.reaktor.core.server.cloudflare.WritableStream.WritableStream"]},{"name":"constructor(url: String)","description":"dev.shibasis.reaktor.core.server.cloudflare.URL.URL","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-u-r-l/-u-r-l.html","searchKeys":["URL","constructor(url: String)","dev.shibasis.reaktor.core.server.cloudflare.URL.URL"]},{"name":"constructor(url: String)","description":"dev.shibasis.reaktor.core.server.cloudflare.WebSocket.WebSocket","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-web-socket/-web-socket.html","searchKeys":["WebSocket","constructor(url: String)","dev.shibasis.reaktor.core.server.cloudflare.WebSocket.WebSocket"]},{"name":"constructor(url: String, base: String = definedExternally)","description":"dev.shibasis.reaktor.core.server.cloudflare.URL.URL","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-u-r-l/-u-r-l.html","searchKeys":["URL","constructor(url: String, base: String = definedExternally)","dev.shibasis.reaktor.core.server.cloudflare.URL.URL"]},{"name":"constructor(url: String, base: URL = definedExternally)","description":"dev.shibasis.reaktor.core.server.cloudflare.URL.URL","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-u-r-l/-u-r-l.html","searchKeys":["URL","constructor(url: String, base: URL = definedExternally)","dev.shibasis.reaktor.core.server.cloudflare.URL.URL"]},{"name":"constructor(url: String, protocols: Array<String> = definedExternally)","description":"dev.shibasis.reaktor.core.server.cloudflare.WebSocket.WebSocket","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-web-socket/-web-socket.html","searchKeys":["WebSocket","constructor(url: String, protocols: Array<String> = definedExternally)","dev.shibasis.reaktor.core.server.cloudflare.WebSocket.WebSocket"]},{"name":"constructor(url: String, protocols: String = definedExternally)","description":"dev.shibasis.reaktor.core.server.cloudflare.WebSocket.WebSocket","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-web-socket/-web-socket.html","searchKeys":["WebSocket","constructor(url: String, protocols: String = definedExternally)","dev.shibasis.reaktor.core.server.cloudflare.WebSocket.WebSocket"]},{"name":"constructor(url: URL)","description":"dev.shibasis.reaktor.core.server.cloudflare.URL.URL","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-u-r-l/-u-r-l.html","searchKeys":["URL","constructor(url: URL)","dev.shibasis.reaktor.core.server.cloudflare.URL.URL"]},{"name":"constructor(url: URL, base: String = definedExternally)","description":"dev.shibasis.reaktor.core.server.cloudflare.URL.URL","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-u-r-l/-u-r-l.html","searchKeys":["URL","constructor(url: URL, base: String = definedExternally)","dev.shibasis.reaktor.core.server.cloudflare.URL.URL"]},{"name":"constructor(url: URL, base: URL = definedExternally)","description":"dev.shibasis.reaktor.core.server.cloudflare.URL.URL","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-u-r-l/-u-r-l.html","searchKeys":["URL","constructor(url: URL, base: URL = definedExternally)","dev.shibasis.reaktor.core.server.cloudflare.URL.URL"]},{"name":"data class ErrorMessage(val code: Int, val message: String)","description":"dev.shibasis.reaktor.core.network.ErrorMessage","location":"reaktor-core/dev.shibasis.reaktor.core.network/-error-message/index.html","searchKeys":["ErrorMessage","data class ErrorMessage(val code: Int, val message: String)","dev.shibasis.reaktor.core.network.ErrorMessage"]},{"name":"data class Response(val jsonData: String, val statusCode: StatusCode = StatusCode.OK)","description":"dev.shibasis.reaktor.core.network.Response","location":"reaktor-core/dev.shibasis.reaktor.core.network/-response/index.html","searchKeys":["Response","data class Response(val jsonData: String, val statusCode: StatusCode = StatusCode.OK)","dev.shibasis.reaktor.core.network.Response"]},{"name":"data class Unknown(val error: Error) : PermissionResult.Denied","description":"dev.shibasis.reaktor.core.adapters.PermissionResult.Denied.Unknown","location":"reaktor-core/dev.shibasis.reaktor.core.adapters/-permission-result/-denied/-unknown/index.html","searchKeys":["Unknown","data class Unknown(val error: Error) : PermissionResult.Denied","dev.shibasis.reaktor.core.adapters.PermissionResult.Denied.Unknown"]},{"name":"data object BackPressed : ControllerEvent","description":"dev.shibasis.reaktor.core.framework.ControllerEvent.BackPressed","location":"reaktor-core/dev.shibasis.reaktor.core.framework/-controller-event/-back-pressed/index.html","searchKeys":["BackPressed","data object BackPressed : ControllerEvent","dev.shibasis.reaktor.core.framework.ControllerEvent.BackPressed"]},{"name":"data object Cancelled : ActivityResultError","description":"dev.shibasis.reaktor.core.extensions.ActivityResultError.Cancelled","location":"reaktor-core/dev.shibasis.reaktor.core.extensions/-activity-result-error/-cancelled/index.html","searchKeys":["Cancelled","data object Cancelled : ActivityResultError","dev.shibasis.reaktor.core.extensions.ActivityResultError.Cancelled"]},{"name":"data object Create : ControllerEvent","description":"dev.shibasis.reaktor.core.framework.ControllerEvent.Create","location":"reaktor-core/dev.shibasis.reaktor.core.framework/-controller-event/-create/index.html","searchKeys":["Create","data object Create : ControllerEvent","dev.shibasis.reaktor.core.framework.ControllerEvent.Create"]},{"name":"data object Destroy : ControllerEvent","description":"dev.shibasis.reaktor.core.framework.ControllerEvent.Destroy","location":"reaktor-core/dev.shibasis.reaktor.core.framework/-controller-event/-destroy/index.html","searchKeys":["Destroy","data object Destroy : ControllerEvent","dev.shibasis.reaktor.core.framework.ControllerEvent.Destroy"]},{"name":"data object Forever : PermissionResult.Denied","description":"dev.shibasis.reaktor.core.adapters.PermissionResult.Denied.Forever","location":"reaktor-core/dev.shibasis.reaktor.core.adapters/-permission-result/-denied/-forever/index.html","searchKeys":["Forever","data object Forever : PermissionResult.Denied","dev.shibasis.reaktor.core.adapters.PermissionResult.Denied.Forever"]},{"name":"data object Granted : PermissionResult","description":"dev.shibasis.reaktor.core.adapters.PermissionResult.Granted","location":"reaktor-core/dev.shibasis.reaktor.core.adapters/-permission-result/-granted/index.html","searchKeys":["Granted","data object Granted : PermissionResult","dev.shibasis.reaktor.core.adapters.PermissionResult.Granted"]},{"name":"data object IllegalState : ActivityResultError","description":"dev.shibasis.reaktor.core.extensions.ActivityResultError.IllegalState","location":"reaktor-core/dev.shibasis.reaktor.core.extensions/-activity-result-error/-illegal-state/index.html","searchKeys":["IllegalState","data object IllegalState : ActivityResultError","dev.shibasis.reaktor.core.extensions.ActivityResultError.IllegalState"]},{"name":"data object KeyUp : ControllerEvent","description":"dev.shibasis.reaktor.core.framework.ControllerEvent.KeyUp","location":"reaktor-core/dev.shibasis.reaktor.core.framework/-controller-event/-key-up/index.html","searchKeys":["KeyUp","data object KeyUp : ControllerEvent","dev.shibasis.reaktor.core.framework.ControllerEvent.KeyUp"]},{"name":"data object Once : PermissionResult.Denied","description":"dev.shibasis.reaktor.core.adapters.PermissionResult.Denied.Once","location":"reaktor-core/dev.shibasis.reaktor.core.adapters/-permission-result/-denied/-once/index.html","searchKeys":["Once","data object Once : PermissionResult.Denied","dev.shibasis.reaktor.core.adapters.PermissionResult.Denied.Once"]},{"name":"data object Pause : ControllerEvent","description":"dev.shibasis.reaktor.core.framework.ControllerEvent.Pause","location":"reaktor-core/dev.shibasis.reaktor.core.framework/-controller-event/-pause/index.html","searchKeys":["Pause","data object Pause : ControllerEvent","dev.shibasis.reaktor.core.framework.ControllerEvent.Pause"]},{"name":"data object Resume : ControllerEvent","description":"dev.shibasis.reaktor.core.framework.ControllerEvent.Resume","location":"reaktor-core/dev.shibasis.reaktor.core.framework/-controller-event/-resume/index.html","searchKeys":["Resume","data object Resume : ControllerEvent","dev.shibasis.reaktor.core.framework.ControllerEvent.Resume"]},{"name":"data object Start : ControllerEvent","description":"dev.shibasis.reaktor.core.framework.ControllerEvent.Start","location":"reaktor-core/dev.shibasis.reaktor.core.framework/-controller-event/-start/index.html","searchKeys":["Start","data object Start : ControllerEvent","dev.shibasis.reaktor.core.framework.ControllerEvent.Start"]},{"name":"data object Stop : ControllerEvent","description":"dev.shibasis.reaktor.core.framework.ControllerEvent.Stop","location":"reaktor-core/dev.shibasis.reaktor.core.framework/-controller-event/-stop/index.html","searchKeys":["Stop","data object Stop : ControllerEvent","dev.shibasis.reaktor.core.framework.ControllerEvent.Stop"]},{"name":"enum PlatformType : Enum<PlatformType> ","description":"dev.shibasis.reaktor.core.framework.PlatformType","location":"reaktor-core/dev.shibasis.reaktor.core.framework/-platform-type/index.html","searchKeys":["PlatformType","enum PlatformType : Enum<PlatformType> ","dev.shibasis.reaktor.core.framework.PlatformType"]},{"name":"enum StatusCode : Enum<StatusCode> ","description":"dev.shibasis.reaktor.core.network.StatusCode","location":"reaktor-core/dev.shibasis.reaktor.core.network/-status-code/index.html","searchKeys":["StatusCode","enum StatusCode : Enum<StatusCode> ","dev.shibasis.reaktor.core.network.StatusCode"]},{"name":"expect abstract fun handle(event: ControllerEvent)","description":"dev.shibasis.reaktor.core.framework.ControllerEventObserver.handle","location":"reaktor-core/dev.shibasis.reaktor.core.framework/-controller-event-observer/handle.html","searchKeys":["handle","expect abstract fun handle(event: ControllerEvent)","dev.shibasis.reaktor.core.framework.ControllerEventObserver.handle"]},{"name":"expect class AtomicInt(value: Int)","description":"dev.shibasis.reaktor.core.framework.AtomicInt","location":"reaktor-core/dev.shibasis.reaktor.core.framework/-atomic-int/index.html","searchKeys":["AtomicInt","expect class AtomicInt(value: Int)","dev.shibasis.reaktor.core.framework.AtomicInt"]},{"name":"expect class WeakRef<T>(referred: T)","description":"dev.shibasis.reaktor.core.framework.WeakRef","location":"reaktor-core/dev.shibasis.reaktor.core.framework/-weak-ref/index.html","searchKeys":["WeakRef","expect class WeakRef<T>(referred: T)","dev.shibasis.reaktor.core.framework.WeakRef"]},{"name":"expect constructor(referred: T)","description":"dev.shibasis.reaktor.core.framework.WeakRef.WeakRef","location":"reaktor-core/dev.shibasis.reaktor.core.framework/-weak-ref/-weak-ref.html","searchKeys":["WeakRef","expect constructor(referred: T)","dev.shibasis.reaktor.core.framework.WeakRef.WeakRef"]},{"name":"expect constructor(value: Int)","description":"dev.shibasis.reaktor.core.framework.AtomicInt.AtomicInt","location":"reaktor-core/dev.shibasis.reaktor.core.framework/-atomic-int/-atomic-int.html","searchKeys":["AtomicInt","expect constructor(value: Int)","dev.shibasis.reaktor.core.framework.AtomicInt.AtomicInt"]},{"name":"expect fun get(): T?","description":"dev.shibasis.reaktor.core.framework.WeakRef.get","location":"reaktor-core/dev.shibasis.reaktor.core.framework/-weak-ref/get.html","searchKeys":["get","expect fun get(): T?","dev.shibasis.reaktor.core.framework.WeakRef.get"]},{"name":"expect fun getAndIncrement(): Int","description":"dev.shibasis.reaktor.core.framework.AtomicInt.getAndIncrement","location":"reaktor-core/dev.shibasis.reaktor.core.framework/-atomic-int/get-and-increment.html","searchKeys":["getAndIncrement","expect fun getAndIncrement(): Int","dev.shibasis.reaktor.core.framework.AtomicInt.getAndIncrement"]},{"name":"expect sealed interface ControllerEventObserver","description":"dev.shibasis.reaktor.core.framework.ControllerEventObserver","location":"reaktor-core/dev.shibasis.reaktor.core.framework/-controller-event-observer/index.html","searchKeys":["ControllerEventObserver","expect sealed interface ControllerEventObserver","dev.shibasis.reaktor.core.framework.ControllerEventObserver"]},{"name":"expect val Dispatchers.Async: CoroutineDispatcher","description":"dev.shibasis.reaktor.core.framework.Async","location":"reaktor-core/dev.shibasis.reaktor.core.framework/-async.html","searchKeys":["Async","expect val Dispatchers.Async: CoroutineDispatcher","dev.shibasis.reaktor.core.framework.Async"]},{"name":"external fun <Args : Array<Any>> setInterval(callback: (args: Args) -> Unit, msDelay: Number = definedExternally, vararg args: Args): Number","description":"dev.shibasis.reaktor.core.server.cloudflare.setInterval","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/set-interval.html","searchKeys":["setInterval","external fun <Args : Array<Any>> setInterval(callback: (args: Args) -> Unit, msDelay: Number = definedExternally, vararg args: Args): Number","dev.shibasis.reaktor.core.server.cloudflare.setInterval"]},{"name":"external fun <Args : Array<Any>> setTimeout(callback: (args: Args) -> Unit, msDelay: Number = definedExternally, vararg args: Args): Number","description":"dev.shibasis.reaktor.core.server.cloudflare.setTimeout","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/set-timeout.html","searchKeys":["setTimeout","external fun <Args : Array<Any>> setTimeout(callback: (args: Args) -> Unit, msDelay: Number = definedExternally, vararg args: Args): Number","dev.shibasis.reaktor.core.server.cloudflare.setTimeout"]},{"name":"external fun <T> structuredClone(value: T, options: StructuredSerializeOptions = definedExternally): T","description":"dev.shibasis.reaktor.core.server.cloudflare.structuredClone","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/structured-clone.html","searchKeys":["structuredClone","external fun <T> structuredClone(value: T, options: StructuredSerializeOptions = definedExternally): T","dev.shibasis.reaktor.core.server.cloudflare.structuredClone"]},{"name":"external fun <Type : String> addEventListener(type: Type, handler: EventListener<Any>)","description":"dev.shibasis.reaktor.core.server.cloudflare.addEventListener","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/add-event-listener.html","searchKeys":["addEventListener","external fun <Type : String> addEventListener(type: Type, handler: EventListener<Any>)","dev.shibasis.reaktor.core.server.cloudflare.addEventListener"]},{"name":"external fun <Type : String> addEventListener(type: Type, handler: EventListener<Any>, options: Boolean = definedExternally)","description":"dev.shibasis.reaktor.core.server.cloudflare.addEventListener","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/add-event-listener.html","searchKeys":["addEventListener","external fun <Type : String> addEventListener(type: Type, handler: EventListener<Any>, options: Boolean = definedExternally)","dev.shibasis.reaktor.core.server.cloudflare.addEventListener"]},{"name":"external fun <Type : String> addEventListener(type: Type, handler: EventListener<Any>, options: EventTargetAddEventListenerOptions = definedExternally)","description":"dev.shibasis.reaktor.core.server.cloudflare.addEventListener","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/add-event-listener.html","searchKeys":["addEventListener","external fun <Type : String> addEventListener(type: Type, handler: EventListener<Any>, options: EventTargetAddEventListenerOptions = definedExternally)","dev.shibasis.reaktor.core.server.cloudflare.addEventListener"]},{"name":"external fun <Type : String> addEventListener(type: Type, handler: EventListenerObject<Event>)","description":"dev.shibasis.reaktor.core.server.cloudflare.addEventListener","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/add-event-listener.html","searchKeys":["addEventListener","external fun <Type : String> addEventListener(type: Type, handler: EventListenerObject<Event>)","dev.shibasis.reaktor.core.server.cloudflare.addEventListener"]},{"name":"external fun <Type : String> addEventListener(type: Type, handler: EventListenerObject<Event>, options: Boolean = definedExternally)","description":"dev.shibasis.reaktor.core.server.cloudflare.addEventListener","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/add-event-listener.html","searchKeys":["addEventListener","external fun <Type : String> addEventListener(type: Type, handler: EventListenerObject<Event>, options: Boolean = definedExternally)","dev.shibasis.reaktor.core.server.cloudflare.addEventListener"]},{"name":"external fun <Type : String> addEventListener(type: Type, handler: EventListenerObject<Event>, options: EventTargetAddEventListenerOptions = definedExternally)","description":"dev.shibasis.reaktor.core.server.cloudflare.addEventListener","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/add-event-listener.html","searchKeys":["addEventListener","external fun <Type : String> addEventListener(type: Type, handler: EventListenerObject<Event>, options: EventTargetAddEventListenerOptions = definedExternally)","dev.shibasis.reaktor.core.server.cloudflare.addEventListener"]},{"name":"external fun <Type : String> removeEventListener(type: Type, handler: EventListener<Any>)","description":"dev.shibasis.reaktor.core.server.cloudflare.removeEventListener","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/remove-event-listener.html","searchKeys":["removeEventListener","external fun <Type : String> removeEventListener(type: Type, handler: EventListener<Any>)","dev.shibasis.reaktor.core.server.cloudflare.removeEventListener"]},{"name":"external fun <Type : String> removeEventListener(type: Type, handler: EventListener<Any>, options: Boolean = definedExternally)","description":"dev.shibasis.reaktor.core.server.cloudflare.removeEventListener","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/remove-event-listener.html","searchKeys":["removeEventListener","external fun <Type : String> removeEventListener(type: Type, handler: EventListener<Any>, options: Boolean = definedExternally)","dev.shibasis.reaktor.core.server.cloudflare.removeEventListener"]},{"name":"external fun <Type : String> removeEventListener(type: Type, handler: EventListener<Any>, options: EventTargetEventListenerOptions = definedExternally)","description":"dev.shibasis.reaktor.core.server.cloudflare.removeEventListener","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/remove-event-listener.html","searchKeys":["removeEventListener","external fun <Type : String> removeEventListener(type: Type, handler: EventListener<Any>, options: EventTargetEventListenerOptions = definedExternally)","dev.shibasis.reaktor.core.server.cloudflare.removeEventListener"]},{"name":"external fun <Type : String> removeEventListener(type: Type, handler: EventListenerObject<Event>)","description":"dev.shibasis.reaktor.core.server.cloudflare.removeEventListener","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/remove-event-listener.html","searchKeys":["removeEventListener","external fun <Type : String> removeEventListener(type: Type, handler: EventListenerObject<Event>)","dev.shibasis.reaktor.core.server.cloudflare.removeEventListener"]},{"name":"external fun <Type : String> removeEventListener(type: Type, handler: EventListenerObject<Event>, options: Boolean = definedExternally)","description":"dev.shibasis.reaktor.core.server.cloudflare.removeEventListener","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/remove-event-listener.html","searchKeys":["removeEventListener","external fun <Type : String> removeEventListener(type: Type, handler: EventListenerObject<Event>, options: Boolean = definedExternally)","dev.shibasis.reaktor.core.server.cloudflare.removeEventListener"]},{"name":"external fun <Type : String> removeEventListener(type: Type, handler: EventListenerObject<Event>, options: EventTargetEventListenerOptions = definedExternally)","description":"dev.shibasis.reaktor.core.server.cloudflare.removeEventListener","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/remove-event-listener.html","searchKeys":["removeEventListener","external fun <Type : String> removeEventListener(type: Type, handler: EventListenerObject<Event>, options: EventTargetEventListenerOptions = definedExternally)","dev.shibasis.reaktor.core.server.cloudflare.removeEventListener"]},{"name":"external fun atob(data: String): String","description":"dev.shibasis.reaktor.core.server.cloudflare.atob","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/atob.html","searchKeys":["atob","external fun atob(data: String): String","dev.shibasis.reaktor.core.server.cloudflare.atob"]},{"name":"external fun btoa(data: String): String","description":"dev.shibasis.reaktor.core.server.cloudflare.btoa","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/btoa.html","searchKeys":["btoa","external fun btoa(data: String): String","dev.shibasis.reaktor.core.server.cloudflare.btoa"]},{"name":"external fun clearInterval(timeoutId: Number?)","description":"dev.shibasis.reaktor.core.server.cloudflare.clearInterval","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/clear-interval.html","searchKeys":["clearInterval","external fun clearInterval(timeoutId: Number?)","dev.shibasis.reaktor.core.server.cloudflare.clearInterval"]},{"name":"external fun clearTimeout(timeoutId: Number?)","description":"dev.shibasis.reaktor.core.server.cloudflare.clearTimeout","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/clear-timeout.html","searchKeys":["clearTimeout","external fun clearTimeout(timeoutId: Number?)","dev.shibasis.reaktor.core.server.cloudflare.clearTimeout"]},{"name":"external fun dispatchEvent(event: FetchEvent): Boolean","description":"dev.shibasis.reaktor.core.server.cloudflare.dispatchEvent","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/dispatch-event.html","searchKeys":["dispatchEvent","external fun dispatchEvent(event: FetchEvent): Boolean","dev.shibasis.reaktor.core.server.cloudflare.dispatchEvent"]},{"name":"external fun dispatchEvent(event: PromiseRejectionEvent): Boolean","description":"dev.shibasis.reaktor.core.server.cloudflare.dispatchEvent","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/dispatch-event.html","searchKeys":["dispatchEvent","external fun dispatchEvent(event: PromiseRejectionEvent): Boolean","dev.shibasis.reaktor.core.server.cloudflare.dispatchEvent"]},{"name":"external fun dispatchEvent(event: QueueEvent__0): Boolean","description":"dev.shibasis.reaktor.core.server.cloudflare.dispatchEvent","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/dispatch-event.html","searchKeys":["dispatchEvent","external fun dispatchEvent(event: QueueEvent__0): Boolean","dev.shibasis.reaktor.core.server.cloudflare.dispatchEvent"]},{"name":"external fun dispatchEvent(event: ScheduledEvent): Boolean","description":"dev.shibasis.reaktor.core.server.cloudflare.dispatchEvent","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/dispatch-event.html","searchKeys":["dispatchEvent","external fun dispatchEvent(event: ScheduledEvent): Boolean","dev.shibasis.reaktor.core.server.cloudflare.dispatchEvent"]},{"name":"external fun fetch(input: Request<Any, Any>): Promise<Response>","description":"dev.shibasis.reaktor.core.server.cloudflare.fetch","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/fetch.html","searchKeys":["fetch","external fun fetch(input: Request<Any, Any>): Promise<Response>","dev.shibasis.reaktor.core.server.cloudflare.fetch"]},{"name":"external fun fetch(input: Request<Any, Any>, init: RequestInit<RequestInitCfProperties> = definedExternally): Promise<Response>","description":"dev.shibasis.reaktor.core.server.cloudflare.fetch","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/fetch.html","searchKeys":["fetch","external fun fetch(input: Request<Any, Any>, init: RequestInit<RequestInitCfProperties> = definedExternally): Promise<Response>","dev.shibasis.reaktor.core.server.cloudflare.fetch"]},{"name":"external fun fetch(input: String): Promise<Response>","description":"dev.shibasis.reaktor.core.server.cloudflare.fetch","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/fetch.html","searchKeys":["fetch","external fun fetch(input: String): Promise<Response>","dev.shibasis.reaktor.core.server.cloudflare.fetch"]},{"name":"external fun fetch(input: String, init: RequestInit<RequestInitCfProperties> = definedExternally): Promise<Response>","description":"dev.shibasis.reaktor.core.server.cloudflare.fetch","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/fetch.html","searchKeys":["fetch","external fun fetch(input: String, init: RequestInit<RequestInitCfProperties> = definedExternally): Promise<Response>","dev.shibasis.reaktor.core.server.cloudflare.fetch"]},{"name":"external fun fetch(input: URL): Promise<Response>","description":"dev.shibasis.reaktor.core.server.cloudflare.fetch","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/fetch.html","searchKeys":["fetch","external fun fetch(input: URL): Promise<Response>","dev.shibasis.reaktor.core.server.cloudflare.fetch"]},{"name":"external fun fetch(input: URL, init: RequestInit<RequestInitCfProperties> = definedExternally): Promise<Response>","description":"dev.shibasis.reaktor.core.server.cloudflare.fetch","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/fetch.html","searchKeys":["fetch","external fun fetch(input: URL, init: RequestInit<RequestInitCfProperties> = definedExternally): Promise<Response>","dev.shibasis.reaktor.core.server.cloudflare.fetch"]},{"name":"external fun queueMicrotask(task: Function<*>)","description":"dev.shibasis.reaktor.core.server.cloudflare.queueMicrotask","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/queue-microtask.html","searchKeys":["queueMicrotask","external fun queueMicrotask(task: Function<*>)","dev.shibasis.reaktor.core.server.cloudflare.queueMicrotask"]},{"name":"external fun setInterval(callback: (args: Any) -> Unit): Number","description":"dev.shibasis.reaktor.core.server.cloudflare.setInterval","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/set-interval.html","searchKeys":["setInterval","external fun setInterval(callback: (args: Any) -> Unit): Number","dev.shibasis.reaktor.core.server.cloudflare.setInterval"]},{"name":"external fun setInterval(callback: (args: Any) -> Unit, msDelay: Number = definedExternally): Number","description":"dev.shibasis.reaktor.core.server.cloudflare.setInterval","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/set-interval.html","searchKeys":["setInterval","external fun setInterval(callback: (args: Any) -> Unit, msDelay: Number = definedExternally): Number","dev.shibasis.reaktor.core.server.cloudflare.setInterval"]},{"name":"external fun setTimeout(callback: (args: Any) -> Unit): Number","description":"dev.shibasis.reaktor.core.server.cloudflare.setTimeout","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/set-timeout.html","searchKeys":["setTimeout","external fun setTimeout(callback: (args: Any) -> Unit): Number","dev.shibasis.reaktor.core.server.cloudflare.setTimeout"]},{"name":"external fun setTimeout(callback: (args: Any) -> Unit, msDelay: Number = definedExternally): Number","description":"dev.shibasis.reaktor.core.server.cloudflare.setTimeout","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/set-timeout.html","searchKeys":["setTimeout","external fun setTimeout(callback: (args: Any) -> Unit, msDelay: Number = definedExternally): Number","dev.shibasis.reaktor.core.server.cloudflare.setTimeout"]},{"name":"external interface AnalyticsEngineDataPoint","description":"dev.shibasis.reaktor.core.server.cloudflare.AnalyticsEngineDataPoint","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-analytics-engine-data-point/index.html","searchKeys":["AnalyticsEngineDataPoint","external interface AnalyticsEngineDataPoint","dev.shibasis.reaktor.core.server.cloudflare.AnalyticsEngineDataPoint"]},{"name":"external interface AnalyticsEngineDataset","description":"dev.shibasis.reaktor.core.server.cloudflare.AnalyticsEngineDataset","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-analytics-engine-dataset/index.html","searchKeys":["AnalyticsEngineDataset","external interface AnalyticsEngineDataset","dev.shibasis.reaktor.core.server.cloudflare.AnalyticsEngineDataset"]},{"name":"external interface BasicImageTransformations","description":"dev.shibasis.reaktor.core.server.cloudflare.BasicImageTransformations","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-basic-image-transformations/index.html","searchKeys":["BasicImageTransformations","external interface BasicImageTransformations","dev.shibasis.reaktor.core.server.cloudflare.BasicImageTransformations"]},{"name":"external interface BasicImageTransformationsGravityCoordinates","description":"dev.shibasis.reaktor.core.server.cloudflare.BasicImageTransformationsGravityCoordinates","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-basic-image-transformations-gravity-coordinates/index.html","searchKeys":["BasicImageTransformationsGravityCoordinates","external interface BasicImageTransformationsGravityCoordinates","dev.shibasis.reaktor.core.server.cloudflare.BasicImageTransformationsGravityCoordinates"]},{"name":"external interface BlobOptions","description":"dev.shibasis.reaktor.core.server.cloudflare.BlobOptions","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-blob-options/index.html","searchKeys":["BlobOptions","external interface BlobOptions","dev.shibasis.reaktor.core.server.cloudflare.BlobOptions"]},{"name":"external interface CacheQueryOptions","description":"dev.shibasis.reaktor.core.server.cloudflare.CacheQueryOptions","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-cache-query-options/index.html","searchKeys":["CacheQueryOptions","external interface CacheQueryOptions","dev.shibasis.reaktor.core.server.cloudflare.CacheQueryOptions"]},{"name":"external interface CloseEventInit","description":"dev.shibasis.reaktor.core.server.cloudflare.CloseEventInit","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-close-event-init/index.html","searchKeys":["CloseEventInit","external interface CloseEventInit","dev.shibasis.reaktor.core.server.cloudflare.CloseEventInit"]},{"name":"external interface Comment","description":"dev.shibasis.reaktor.core.server.cloudflare.Comment","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-comment/index.html","searchKeys":["Comment","external interface Comment","dev.shibasis.reaktor.core.server.cloudflare.Comment"]},{"name":"external interface Console","description":"dev.shibasis.reaktor.core.server.cloudflare.Console","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-console/index.html","searchKeys":["Console","external interface Console","dev.shibasis.reaktor.core.server.cloudflare.Console"]},{"name":"external interface ContentOptions","description":"dev.shibasis.reaktor.core.server.cloudflare.ContentOptions","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-content-options/index.html","searchKeys":["ContentOptions","external interface ContentOptions","dev.shibasis.reaktor.core.server.cloudflare.ContentOptions"]},{"name":"external interface CryptoKeyAesKeyAlgorithm","description":"dev.shibasis.reaktor.core.server.cloudflare.CryptoKeyAesKeyAlgorithm","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-crypto-key-aes-key-algorithm/index.html","searchKeys":["CryptoKeyAesKeyAlgorithm","external interface CryptoKeyAesKeyAlgorithm","dev.shibasis.reaktor.core.server.cloudflare.CryptoKeyAesKeyAlgorithm"]},{"name":"external interface CryptoKeyArbitraryKeyAlgorithm","description":"dev.shibasis.reaktor.core.server.cloudflare.CryptoKeyArbitraryKeyAlgorithm","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-crypto-key-arbitrary-key-algorithm/index.html","searchKeys":["CryptoKeyArbitraryKeyAlgorithm","external interface CryptoKeyArbitraryKeyAlgorithm","dev.shibasis.reaktor.core.server.cloudflare.CryptoKeyArbitraryKeyAlgorithm"]},{"name":"external interface CryptoKeyEllipticKeyAlgorithm","description":"dev.shibasis.reaktor.core.server.cloudflare.CryptoKeyEllipticKeyAlgorithm","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-crypto-key-elliptic-key-algorithm/index.html","searchKeys":["CryptoKeyEllipticKeyAlgorithm","external interface CryptoKeyEllipticKeyAlgorithm","dev.shibasis.reaktor.core.server.cloudflare.CryptoKeyEllipticKeyAlgorithm"]},{"name":"external interface CryptoKeyHmacKeyAlgorithm","description":"dev.shibasis.reaktor.core.server.cloudflare.CryptoKeyHmacKeyAlgorithm","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-crypto-key-hmac-key-algorithm/index.html","searchKeys":["CryptoKeyHmacKeyAlgorithm","external interface CryptoKeyHmacKeyAlgorithm","dev.shibasis.reaktor.core.server.cloudflare.CryptoKeyHmacKeyAlgorithm"]},{"name":"external interface CryptoKeyKeyAlgorithm","description":"dev.shibasis.reaktor.core.server.cloudflare.CryptoKeyKeyAlgorithm","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-crypto-key-key-algorithm/index.html","searchKeys":["CryptoKeyKeyAlgorithm","external interface CryptoKeyKeyAlgorithm","dev.shibasis.reaktor.core.server.cloudflare.CryptoKeyKeyAlgorithm"]},{"name":"external interface CryptoKeyPair","description":"dev.shibasis.reaktor.core.server.cloudflare.CryptoKeyPair","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-crypto-key-pair/index.html","searchKeys":["CryptoKeyPair","external interface CryptoKeyPair","dev.shibasis.reaktor.core.server.cloudflare.CryptoKeyPair"]},{"name":"external interface CryptoKeyRsaKeyAlgorithm","description":"dev.shibasis.reaktor.core.server.cloudflare.CryptoKeyRsaKeyAlgorithm","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-crypto-key-rsa-key-algorithm/index.html","searchKeys":["CryptoKeyRsaKeyAlgorithm","external interface CryptoKeyRsaKeyAlgorithm","dev.shibasis.reaktor.core.server.cloudflare.CryptoKeyRsaKeyAlgorithm"]},{"name":"external interface D1ExecResult","description":"dev.shibasis.reaktor.core.server.cloudflare.D1ExecResult","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-d1-exec-result/index.html","searchKeys":["D1ExecResult","external interface D1ExecResult","dev.shibasis.reaktor.core.server.cloudflare.D1ExecResult"]},{"name":"external interface D1Result<T>","description":"dev.shibasis.reaktor.core.server.cloudflare.D1Result","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-d1-result/index.html","searchKeys":["D1Result","external interface D1Result<T>","dev.shibasis.reaktor.core.server.cloudflare.D1Result"]},{"name":"external interface DispatchNamespace","description":"dev.shibasis.reaktor.core.server.cloudflare.DispatchNamespace","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-dispatch-namespace/index.html","searchKeys":["DispatchNamespace","external interface DispatchNamespace","dev.shibasis.reaktor.core.server.cloudflare.DispatchNamespace"]},{"name":"external interface Doctype","description":"dev.shibasis.reaktor.core.server.cloudflare.Doctype","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-doctype/index.html","searchKeys":["Doctype","external interface Doctype","dev.shibasis.reaktor.core.server.cloudflare.Doctype"]},{"name":"external interface DocumentEnd","description":"dev.shibasis.reaktor.core.server.cloudflare.DocumentEnd","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-document-end/index.html","searchKeys":["DocumentEnd","external interface DocumentEnd","dev.shibasis.reaktor.core.server.cloudflare.DocumentEnd"]},{"name":"external interface DurableObject","description":"dev.shibasis.reaktor.core.server.cloudflare.DurableObject","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-durable-object/index.html","searchKeys":["DurableObject","external interface DurableObject","dev.shibasis.reaktor.core.server.cloudflare.DurableObject"]},{"name":"external interface DurableObjectGetAlarmOptions","description":"dev.shibasis.reaktor.core.server.cloudflare.DurableObjectGetAlarmOptions","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-durable-object-get-alarm-options/index.html","searchKeys":["DurableObjectGetAlarmOptions","external interface DurableObjectGetAlarmOptions","dev.shibasis.reaktor.core.server.cloudflare.DurableObjectGetAlarmOptions"]},{"name":"external interface DurableObjectGetOptions","description":"dev.shibasis.reaktor.core.server.cloudflare.DurableObjectGetOptions","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-durable-object-get-options/index.html","searchKeys":["DurableObjectGetOptions","external interface DurableObjectGetOptions","dev.shibasis.reaktor.core.server.cloudflare.DurableObjectGetOptions"]},{"name":"external interface DurableObjectId","description":"dev.shibasis.reaktor.core.server.cloudflare.DurableObjectId","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-durable-object-id/index.html","searchKeys":["DurableObjectId","external interface DurableObjectId","dev.shibasis.reaktor.core.server.cloudflare.DurableObjectId"]},{"name":"external interface DurableObjectListOptions","description":"dev.shibasis.reaktor.core.server.cloudflare.DurableObjectListOptions","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-durable-object-list-options/index.html","searchKeys":["DurableObjectListOptions","external interface DurableObjectListOptions","dev.shibasis.reaktor.core.server.cloudflare.DurableObjectListOptions"]},{"name":"external interface DurableObjectNamespace","description":"dev.shibasis.reaktor.core.server.cloudflare.DurableObjectNamespace","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-durable-object-namespace/index.html","searchKeys":["DurableObjectNamespace","external interface DurableObjectNamespace","dev.shibasis.reaktor.core.server.cloudflare.DurableObjectNamespace"]},{"name":"external interface DurableObjectNamespaceGetDurableObjectOptions","description":"dev.shibasis.reaktor.core.server.cloudflare.DurableObjectNamespaceGetDurableObjectOptions","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-durable-object-namespace-get-durable-object-options/index.html","searchKeys":["DurableObjectNamespaceGetDurableObjectOptions","external interface DurableObjectNamespaceGetDurableObjectOptions","dev.shibasis.reaktor.core.server.cloudflare.DurableObjectNamespaceGetDurableObjectOptions"]},{"name":"external interface DurableObjectNamespaceNewUniqueIdOptions","description":"dev.shibasis.reaktor.core.server.cloudflare.DurableObjectNamespaceNewUniqueIdOptions","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-durable-object-namespace-new-unique-id-options/index.html","searchKeys":["DurableObjectNamespaceNewUniqueIdOptions","external interface DurableObjectNamespaceNewUniqueIdOptions","dev.shibasis.reaktor.core.server.cloudflare.DurableObjectNamespaceNewUniqueIdOptions"]},{"name":"external interface DurableObjectPutOptions","description":"dev.shibasis.reaktor.core.server.cloudflare.DurableObjectPutOptions","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-durable-object-put-options/index.html","searchKeys":["DurableObjectPutOptions","external interface DurableObjectPutOptions","dev.shibasis.reaktor.core.server.cloudflare.DurableObjectPutOptions"]},{"name":"external interface DurableObjectSetAlarmOptions","description":"dev.shibasis.reaktor.core.server.cloudflare.DurableObjectSetAlarmOptions","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-durable-object-set-alarm-options/index.html","searchKeys":["DurableObjectSetAlarmOptions","external interface DurableObjectSetAlarmOptions","dev.shibasis.reaktor.core.server.cloudflare.DurableObjectSetAlarmOptions"]},{"name":"external interface DurableObjectState","description":"dev.shibasis.reaktor.core.server.cloudflare.DurableObjectState","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-durable-object-state/index.html","searchKeys":["DurableObjectState","external interface DurableObjectState","dev.shibasis.reaktor.core.server.cloudflare.DurableObjectState"]},{"name":"external interface DurableObjectStorage","description":"dev.shibasis.reaktor.core.server.cloudflare.DurableObjectStorage","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-durable-object-storage/index.html","searchKeys":["DurableObjectStorage","external interface DurableObjectStorage","dev.shibasis.reaktor.core.server.cloudflare.DurableObjectStorage"]},{"name":"external interface DurableObjectStub : Fetcher","description":"dev.shibasis.reaktor.core.server.cloudflare.DurableObjectStub","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-durable-object-stub/index.html","searchKeys":["DurableObjectStub","external interface DurableObjectStub : Fetcher","dev.shibasis.reaktor.core.server.cloudflare.DurableObjectStub"]},{"name":"external interface DurableObjectTransaction","description":"dev.shibasis.reaktor.core.server.cloudflare.DurableObjectTransaction","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-durable-object-transaction/index.html","searchKeys":["DurableObjectTransaction","external interface DurableObjectTransaction","dev.shibasis.reaktor.core.server.cloudflare.DurableObjectTransaction"]},{"name":"external interface DynamicDispatchLimits","description":"dev.shibasis.reaktor.core.server.cloudflare.DynamicDispatchLimits","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-dynamic-dispatch-limits/index.html","searchKeys":["DynamicDispatchLimits","external interface DynamicDispatchLimits","dev.shibasis.reaktor.core.server.cloudflare.DynamicDispatchLimits"]},{"name":"external interface DynamicDispatchOptions","description":"dev.shibasis.reaktor.core.server.cloudflare.DynamicDispatchOptions","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-dynamic-dispatch-options/index.html","searchKeys":["DynamicDispatchOptions","external interface DynamicDispatchOptions","dev.shibasis.reaktor.core.server.cloudflare.DynamicDispatchOptions"]},{"name":"external interface Element","description":"dev.shibasis.reaktor.core.server.cloudflare.Element","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-element/index.html","searchKeys":["Element","external interface Element","dev.shibasis.reaktor.core.server.cloudflare.Element"]},{"name":"external interface EmailMessage","description":"dev.shibasis.reaktor.core.server.cloudflare.EmailMessage","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-email-message/index.html","searchKeys":["EmailMessage","external interface EmailMessage","dev.shibasis.reaktor.core.server.cloudflare.EmailMessage"]},{"name":"external interface EndTag","description":"dev.shibasis.reaktor.core.server.cloudflare.EndTag","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-end-tag/index.html","searchKeys":["EndTag","external interface EndTag","dev.shibasis.reaktor.core.server.cloudflare.EndTag"]},{"name":"external interface Env","description":"dev.shibasis.reaktor.core.server.cloudflare.Env","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-env/index.html","searchKeys":["Env","external interface Env","dev.shibasis.reaktor.core.server.cloudflare.Env"]},{"name":"external interface ErrorEvent : Event","description":"dev.shibasis.reaktor.core.server.cloudflare.ErrorEvent","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-error-event/index.html","searchKeys":["ErrorEvent","external interface ErrorEvent : Event","dev.shibasis.reaktor.core.server.cloudflare.ErrorEvent"]},{"name":"external interface EventContext<Env, P : String, Data>","description":"dev.shibasis.reaktor.core.server.cloudflare.EventContext","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-event-context/index.html","searchKeys":["EventContext","external interface EventContext<Env, P : String, Data>","dev.shibasis.reaktor.core.server.cloudflare.EventContext"]},{"name":"external interface EventInit","description":"dev.shibasis.reaktor.core.server.cloudflare.EventInit","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-event-init/index.html","searchKeys":["EventInit","external interface EventInit","dev.shibasis.reaktor.core.server.cloudflare.EventInit"]},{"name":"external interface EventListenerObject<EventType : Event>","description":"dev.shibasis.reaktor.core.server.cloudflare.EventListenerObject","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-event-listener-object/index.html","searchKeys":["EventListenerObject","external interface EventListenerObject<EventType : Event>","dev.shibasis.reaktor.core.server.cloudflare.EventListenerObject"]},{"name":"external interface EventPluginContext<Env, P : String, Data, PluginArgs>","description":"dev.shibasis.reaktor.core.server.cloudflare.EventPluginContext","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-event-plugin-context/index.html","searchKeys":["EventPluginContext","external interface EventPluginContext<Env, P : String, Data, PluginArgs>","dev.shibasis.reaktor.core.server.cloudflare.EventPluginContext"]},{"name":"external interface EventTargetAddEventListenerOptions","description":"dev.shibasis.reaktor.core.server.cloudflare.EventTargetAddEventListenerOptions","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-event-target-add-event-listener-options/index.html","searchKeys":["EventTargetAddEventListenerOptions","external interface EventTargetAddEventListenerOptions","dev.shibasis.reaktor.core.server.cloudflare.EventTargetAddEventListenerOptions"]},{"name":"external interface EventTargetEventListenerOptions","description":"dev.shibasis.reaktor.core.server.cloudflare.EventTargetEventListenerOptions","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-event-target-event-listener-options/index.html","searchKeys":["EventTargetEventListenerOptions","external interface EventTargetEventListenerOptions","dev.shibasis.reaktor.core.server.cloudflare.EventTargetEventListenerOptions"]},{"name":"external interface EventTargetHandlerObject","description":"dev.shibasis.reaktor.core.server.cloudflare.EventTargetHandlerObject","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-event-target-handler-object/index.html","searchKeys":["EventTargetHandlerObject","external interface EventTargetHandlerObject","dev.shibasis.reaktor.core.server.cloudflare.EventTargetHandlerObject"]},{"name":"external interface ExecutionContext","description":"dev.shibasis.reaktor.core.server.cloudflare.ExecutionContext","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-execution-context/index.html","searchKeys":["ExecutionContext","external interface ExecutionContext","dev.shibasis.reaktor.core.server.cloudflare.ExecutionContext"]},{"name":"external interface ExportedHandler<Env, QueueHandlerMessage, CfHostMetadata>","description":"dev.shibasis.reaktor.core.server.cloudflare.ExportedHandler","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-exported-handler/index.html","searchKeys":["ExportedHandler","external interface ExportedHandler<Env, QueueHandlerMessage, CfHostMetadata>","dev.shibasis.reaktor.core.server.cloudflare.ExportedHandler"]},{"name":"external interface FetcherPutOptions","description":"dev.shibasis.reaktor.core.server.cloudflare.FetcherPutOptions","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-fetcher-put-options/index.html","searchKeys":["FetcherPutOptions","external interface FetcherPutOptions","dev.shibasis.reaktor.core.server.cloudflare.FetcherPutOptions"]},{"name":"external interface FileOptions","description":"dev.shibasis.reaktor.core.server.cloudflare.FileOptions","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-file-options/index.html","searchKeys":["FileOptions","external interface FileOptions","dev.shibasis.reaktor.core.server.cloudflare.FileOptions"]},{"name":"external interface ForwardableEmailMessage : EmailMessage","description":"dev.shibasis.reaktor.core.server.cloudflare.ForwardableEmailMessage","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-forwardable-email-message/index.html","searchKeys":["ForwardableEmailMessage","external interface ForwardableEmailMessage : EmailMessage","dev.shibasis.reaktor.core.server.cloudflare.ForwardableEmailMessage"]},{"name":"external interface HTMLRewriterDocumentContentHandlers","description":"dev.shibasis.reaktor.core.server.cloudflare.HTMLRewriterDocumentContentHandlers","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-h-t-m-l-rewriter-document-content-handlers/index.html","searchKeys":["HTMLRewriterDocumentContentHandlers","external interface HTMLRewriterDocumentContentHandlers","dev.shibasis.reaktor.core.server.cloudflare.HTMLRewriterDocumentContentHandlers"]},{"name":"external interface HTMLRewriterElementContentHandlers","description":"dev.shibasis.reaktor.core.server.cloudflare.HTMLRewriterElementContentHandlers","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-h-t-m-l-rewriter-element-content-handlers/index.html","searchKeys":["HTMLRewriterElementContentHandlers","external interface HTMLRewriterElementContentHandlers","dev.shibasis.reaktor.core.server.cloudflare.HTMLRewriterElementContentHandlers"]},{"name":"external interface IdentityTransformStreamQueuingStrategy","description":"dev.shibasis.reaktor.core.server.cloudflare.IdentityTransformStreamQueuingStrategy","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-identity-transform-stream-queuing-strategy/index.html","searchKeys":["IdentityTransformStreamQueuingStrategy","external interface IdentityTransformStreamQueuingStrategy","dev.shibasis.reaktor.core.server.cloudflare.IdentityTransformStreamQueuingStrategy"]},{"name":"external interface IncomingRequestCfPropertiesBase : Record<String, Any> ","description":"dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesBase","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-incoming-request-cf-properties-base/index.html","searchKeys":["IncomingRequestCfPropertiesBase","external interface IncomingRequestCfPropertiesBase : Record<String, Any> ","dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesBase"]},{"name":"external interface IncomingRequestCfPropertiesBotManagement","description":"dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesBotManagement","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-incoming-request-cf-properties-bot-management/index.html","searchKeys":["IncomingRequestCfPropertiesBotManagement","external interface IncomingRequestCfPropertiesBotManagement","dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesBotManagement"]},{"name":"external interface IncomingRequestCfPropertiesBotManagementBase","description":"dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesBotManagementBase","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-incoming-request-cf-properties-bot-management-base/index.html","searchKeys":["IncomingRequestCfPropertiesBotManagementBase","external interface IncomingRequestCfPropertiesBotManagementBase","dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesBotManagementBase"]},{"name":"external interface IncomingRequestCfPropertiesBotManagementEnterprise : IncomingRequestCfPropertiesBotManagement","description":"dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesBotManagementEnterprise","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-incoming-request-cf-properties-bot-management-enterprise/index.html","searchKeys":["IncomingRequestCfPropertiesBotManagementEnterprise","external interface IncomingRequestCfPropertiesBotManagementEnterprise : IncomingRequestCfPropertiesBotManagement","dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesBotManagementEnterprise"]},{"name":"external interface IncomingRequestCfPropertiesCloudflareAccessOrApiShield","description":"dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesCloudflareAccessOrApiShield","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-incoming-request-cf-properties-cloudflare-access-or-api-shield/index.html","searchKeys":["IncomingRequestCfPropertiesCloudflareAccessOrApiShield","external interface IncomingRequestCfPropertiesCloudflareAccessOrApiShield","dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesCloudflareAccessOrApiShield"]},{"name":"external interface IncomingRequestCfPropertiesCloudflareForSaaSEnterprise<HostMetadata>","description":"dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesCloudflareForSaaSEnterprise","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-incoming-request-cf-properties-cloudflare-for-saa-s-enterprise/index.html","searchKeys":["IncomingRequestCfPropertiesCloudflareForSaaSEnterprise","external interface IncomingRequestCfPropertiesCloudflareForSaaSEnterprise<HostMetadata>","dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesCloudflareForSaaSEnterprise"]},{"name":"external interface IncomingRequestCfPropertiesExportedAuthenticatorMetadata","description":"dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesExportedAuthenticatorMetadata","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-incoming-request-cf-properties-exported-authenticator-metadata/index.html","searchKeys":["IncomingRequestCfPropertiesExportedAuthenticatorMetadata","external interface IncomingRequestCfPropertiesExportedAuthenticatorMetadata","dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesExportedAuthenticatorMetadata"]},{"name":"external interface IncomingRequestCfPropertiesGeographicInformation","description":"dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesGeographicInformation","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-incoming-request-cf-properties-geographic-information/index.html","searchKeys":["IncomingRequestCfPropertiesGeographicInformation","external interface IncomingRequestCfPropertiesGeographicInformation","dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesGeographicInformation"]},{"name":"external interface IncomingRequestCfPropertiesTLSClientAuth","description":"dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesTLSClientAuth","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-incoming-request-cf-properties-t-l-s-client-auth/index.html","searchKeys":["IncomingRequestCfPropertiesTLSClientAuth","external interface IncomingRequestCfPropertiesTLSClientAuth","dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesTLSClientAuth"]},{"name":"external interface IncomingRequestCfPropertiesTLSClientAuthPlaceholder","description":"dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesTLSClientAuthPlaceholder","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-incoming-request-cf-properties-t-l-s-client-auth-placeholder/index.html","searchKeys":["IncomingRequestCfPropertiesTLSClientAuthPlaceholder","external interface IncomingRequestCfPropertiesTLSClientAuthPlaceholder","dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesTLSClientAuthPlaceholder"]},{"name":"external interface JsonWebKey","description":"dev.shibasis.reaktor.core.server.cloudflare.JsonWebKey","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-json-web-key/index.html","searchKeys":["JsonWebKey","external interface JsonWebKey","dev.shibasis.reaktor.core.server.cloudflare.JsonWebKey"]},{"name":"external interface JsonWebKeyWithKid : JsonWebKey","description":"dev.shibasis.reaktor.core.server.cloudflare.JsonWebKeyWithKid","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-json-web-key-with-kid/index.html","searchKeys":["JsonWebKeyWithKid","external interface JsonWebKeyWithKid : JsonWebKey","dev.shibasis.reaktor.core.server.cloudflare.JsonWebKeyWithKid"]},{"name":"external interface KVNamespace<Key : String>","description":"dev.shibasis.reaktor.core.server.cloudflare.KVNamespace","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-k-v-namespace/index.html","searchKeys":["KVNamespace","external interface KVNamespace<Key : String>","dev.shibasis.reaktor.core.server.cloudflare.KVNamespace"]},{"name":"external interface KVNamespaceGetOptions<Type>","description":"dev.shibasis.reaktor.core.server.cloudflare.KVNamespaceGetOptions","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-k-v-namespace-get-options/index.html","searchKeys":["KVNamespaceGetOptions","external interface KVNamespaceGetOptions<Type>","dev.shibasis.reaktor.core.server.cloudflare.KVNamespaceGetOptions"]},{"name":"external interface KVNamespaceGetOptionsPartial<Type>","description":"dev.shibasis.reaktor.core.server.cloudflare.KVNamespaceGetOptionsPartial","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-k-v-namespace-get-options-partial/index.html","searchKeys":["KVNamespaceGetOptionsPartial","external interface KVNamespaceGetOptionsPartial<Type>","dev.shibasis.reaktor.core.server.cloudflare.KVNamespaceGetOptionsPartial"]},{"name":"external interface KVNamespaceGetWithMetadataResult<Value, Metadata>","description":"dev.shibasis.reaktor.core.server.cloudflare.KVNamespaceGetWithMetadataResult","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-k-v-namespace-get-with-metadata-result/index.html","searchKeys":["KVNamespaceGetWithMetadataResult","external interface KVNamespaceGetWithMetadataResult<Value, Metadata>","dev.shibasis.reaktor.core.server.cloudflare.KVNamespaceGetWithMetadataResult"]},{"name":"external interface KVNamespaceListKey<Metadata, Key : String>","description":"dev.shibasis.reaktor.core.server.cloudflare.KVNamespaceListKey","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-k-v-namespace-list-key/index.html","searchKeys":["KVNamespaceListKey","external interface KVNamespaceListKey<Metadata, Key : String>","dev.shibasis.reaktor.core.server.cloudflare.KVNamespaceListKey"]},{"name":"external interface KVNamespaceListOptions","description":"dev.shibasis.reaktor.core.server.cloudflare.KVNamespaceListOptions","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-k-v-namespace-list-options/index.html","searchKeys":["KVNamespaceListOptions","external interface KVNamespaceListOptions","dev.shibasis.reaktor.core.server.cloudflare.KVNamespaceListOptions"]},{"name":"external interface KVNamespacePutOptions","description":"dev.shibasis.reaktor.core.server.cloudflare.KVNamespacePutOptions","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-k-v-namespace-put-options/index.html","searchKeys":["KVNamespacePutOptions","external interface KVNamespacePutOptions","dev.shibasis.reaktor.core.server.cloudflare.KVNamespacePutOptions"]},{"name":"external interface Message<Body>","description":"dev.shibasis.reaktor.core.server.cloudflare.Message","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-message/index.html","searchKeys":["Message","external interface Message<Body>","dev.shibasis.reaktor.core.server.cloudflare.Message"]},{"name":"external interface MessageBatch<Body>","description":"dev.shibasis.reaktor.core.server.cloudflare.MessageBatch","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-message-batch/index.html","searchKeys":["MessageBatch","external interface MessageBatch<Body>","dev.shibasis.reaktor.core.server.cloudflare.MessageBatch"]},{"name":"external interface MessageEventInit","description":"dev.shibasis.reaktor.core.server.cloudflare.MessageEventInit","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-message-event-init/index.html","searchKeys":["MessageEventInit","external interface MessageEventInit","dev.shibasis.reaktor.core.server.cloudflare.MessageEventInit"]},{"name":"external interface MessageSendRequest<Body>","description":"dev.shibasis.reaktor.core.server.cloudflare.MessageSendRequest","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-message-send-request/index.html","searchKeys":["MessageSendRequest","external interface MessageSendRequest<Body>","dev.shibasis.reaktor.core.server.cloudflare.MessageSendRequest"]},{"name":"external interface Performance","description":"dev.shibasis.reaktor.core.server.cloudflare.Performance","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-performance/index.html","searchKeys":["Performance","external interface Performance","dev.shibasis.reaktor.core.server.cloudflare.Performance"]},{"name":"external interface PubSubMessage","description":"dev.shibasis.reaktor.core.server.cloudflare.PubSubMessage","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-pub-sub-message/index.html","searchKeys":["PubSubMessage","external interface PubSubMessage","dev.shibasis.reaktor.core.server.cloudflare.PubSubMessage"]},{"name":"external interface Queue<Body>","description":"dev.shibasis.reaktor.core.server.cloudflare.Queue","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-queue/index.html","searchKeys":["Queue","external interface Queue<Body>","dev.shibasis.reaktor.core.server.cloudflare.Queue"]},{"name":"external interface QueueEvent<Body> : ExtendableEvent","description":"dev.shibasis.reaktor.core.server.cloudflare.QueueEvent","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-queue-event/index.html","searchKeys":["QueueEvent","external interface QueueEvent<Body> : ExtendableEvent","dev.shibasis.reaktor.core.server.cloudflare.QueueEvent"]},{"name":"external interface QueueEvent__0 : QueueEvent<Any> ","description":"dev.shibasis.reaktor.core.server.cloudflare.QueueEvent__0","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-queue-event__0/index.html","searchKeys":["QueueEvent__0","external interface QueueEvent__0 : QueueEvent<Any> ","dev.shibasis.reaktor.core.server.cloudflare.QueueEvent__0"]},{"name":"external interface QueueSendOptions","description":"dev.shibasis.reaktor.core.server.cloudflare.QueueSendOptions","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-queue-send-options/index.html","searchKeys":["QueueSendOptions","external interface QueueSendOptions","dev.shibasis.reaktor.core.server.cloudflare.QueueSendOptions"]},{"name":"external interface QueuingStrategy<T>","description":"dev.shibasis.reaktor.core.server.cloudflare.QueuingStrategy","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-queuing-strategy/index.html","searchKeys":["QueuingStrategy","external interface QueuingStrategy<T>","dev.shibasis.reaktor.core.server.cloudflare.QueuingStrategy"]},{"name":"external interface QueuingStrategyInit","description":"dev.shibasis.reaktor.core.server.cloudflare.QueuingStrategyInit","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-queuing-strategy-init/index.html","searchKeys":["QueuingStrategyInit","external interface QueuingStrategyInit","dev.shibasis.reaktor.core.server.cloudflare.QueuingStrategyInit"]},{"name":"external interface QueuingStrategy__0 : QueuingStrategy<Any> ","description":"dev.shibasis.reaktor.core.server.cloudflare.QueuingStrategy__0","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-queuing-strategy__0/index.html","searchKeys":["QueuingStrategy__0","external interface QueuingStrategy__0 : QueuingStrategy<Any> ","dev.shibasis.reaktor.core.server.cloudflare.QueuingStrategy__0"]},{"name":"external interface R2Checksums","description":"dev.shibasis.reaktor.core.server.cloudflare.R2Checksums","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-r2-checksums/index.html","searchKeys":["R2Checksums","external interface R2Checksums","dev.shibasis.reaktor.core.server.cloudflare.R2Checksums"]},{"name":"external interface R2Conditional","description":"dev.shibasis.reaktor.core.server.cloudflare.R2Conditional","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-r2-conditional/index.html","searchKeys":["R2Conditional","external interface R2Conditional","dev.shibasis.reaktor.core.server.cloudflare.R2Conditional"]},{"name":"external interface R2GetOptions","description":"dev.shibasis.reaktor.core.server.cloudflare.R2GetOptions","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-r2-get-options/index.html","searchKeys":["R2GetOptions","external interface R2GetOptions","dev.shibasis.reaktor.core.server.cloudflare.R2GetOptions"]},{"name":"external interface R2HTTPMetadata","description":"dev.shibasis.reaktor.core.server.cloudflare.R2HTTPMetadata","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-r2-h-t-t-p-metadata/index.html","searchKeys":["R2HTTPMetadata","external interface R2HTTPMetadata","dev.shibasis.reaktor.core.server.cloudflare.R2HTTPMetadata"]},{"name":"external interface R2ListOptions","description":"dev.shibasis.reaktor.core.server.cloudflare.R2ListOptions","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-r2-list-options/index.html","searchKeys":["R2ListOptions","external interface R2ListOptions","dev.shibasis.reaktor.core.server.cloudflare.R2ListOptions"]},{"name":"external interface R2MultipartOptions","description":"dev.shibasis.reaktor.core.server.cloudflare.R2MultipartOptions","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-r2-multipart-options/index.html","searchKeys":["R2MultipartOptions","external interface R2MultipartOptions","dev.shibasis.reaktor.core.server.cloudflare.R2MultipartOptions"]},{"name":"external interface R2MultipartUpload","description":"dev.shibasis.reaktor.core.server.cloudflare.R2MultipartUpload","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-r2-multipart-upload/index.html","searchKeys":["R2MultipartUpload","external interface R2MultipartUpload","dev.shibasis.reaktor.core.server.cloudflare.R2MultipartUpload"]},{"name":"external interface R2ObjectBody : R2Object","description":"dev.shibasis.reaktor.core.server.cloudflare.R2ObjectBody","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-r2-object-body/index.html","searchKeys":["R2ObjectBody","external interface R2ObjectBody : R2Object","dev.shibasis.reaktor.core.server.cloudflare.R2ObjectBody"]},{"name":"external interface R2PutOptions","description":"dev.shibasis.reaktor.core.server.cloudflare.R2PutOptions","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-r2-put-options/index.html","searchKeys":["R2PutOptions","external interface R2PutOptions","dev.shibasis.reaktor.core.server.cloudflare.R2PutOptions"]},{"name":"external interface R2StringChecksums","description":"dev.shibasis.reaktor.core.server.cloudflare.R2StringChecksums","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-r2-string-checksums/index.html","searchKeys":["R2StringChecksums","external interface R2StringChecksums","dev.shibasis.reaktor.core.server.cloudflare.R2StringChecksums"]},{"name":"external interface R2UploadedPart","description":"dev.shibasis.reaktor.core.server.cloudflare.R2UploadedPart","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-r2-uploaded-part/index.html","searchKeys":["R2UploadedPart","external interface R2UploadedPart","dev.shibasis.reaktor.core.server.cloudflare.R2UploadedPart"]},{"name":"external interface ReadableByteStreamController","description":"dev.shibasis.reaktor.core.server.cloudflare.ReadableByteStreamController","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-readable-byte-stream-controller/index.html","searchKeys":["ReadableByteStreamController","external interface ReadableByteStreamController","dev.shibasis.reaktor.core.server.cloudflare.ReadableByteStreamController"]},{"name":"external interface ReadableStream<R>","description":"dev.shibasis.reaktor.core.server.cloudflare.ReadableStream","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-readable-stream/index.html","searchKeys":["ReadableStream","external interface ReadableStream<R>","dev.shibasis.reaktor.core.server.cloudflare.ReadableStream"]},{"name":"external interface ReadableStreamBYOBRequest","description":"dev.shibasis.reaktor.core.server.cloudflare.ReadableStreamBYOBRequest","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-readable-stream-b-y-o-b-request/index.html","searchKeys":["ReadableStreamBYOBRequest","external interface ReadableStreamBYOBRequest","dev.shibasis.reaktor.core.server.cloudflare.ReadableStreamBYOBRequest"]},{"name":"external interface ReadableStreamDefaultController<R>","description":"dev.shibasis.reaktor.core.server.cloudflare.ReadableStreamDefaultController","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-readable-stream-default-controller/index.html","searchKeys":["ReadableStreamDefaultController","external interface ReadableStreamDefaultController<R>","dev.shibasis.reaktor.core.server.cloudflare.ReadableStreamDefaultController"]},{"name":"external interface ReadableStreamGetReaderOptions","description":"dev.shibasis.reaktor.core.server.cloudflare.ReadableStreamGetReaderOptions","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-readable-stream-get-reader-options/index.html","searchKeys":["ReadableStreamGetReaderOptions","external interface ReadableStreamGetReaderOptions","dev.shibasis.reaktor.core.server.cloudflare.ReadableStreamGetReaderOptions"]},{"name":"external interface ReadableStreamValuesOptions","description":"dev.shibasis.reaktor.core.server.cloudflare.ReadableStreamValuesOptions","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-readable-stream-values-options/index.html","searchKeys":["ReadableStreamValuesOptions","external interface ReadableStreamValuesOptions","dev.shibasis.reaktor.core.server.cloudflare.ReadableStreamValuesOptions"]},{"name":"external interface ReadableWritablePair<R, W>","description":"dev.shibasis.reaktor.core.server.cloudflare.ReadableWritablePair","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-readable-writable-pair/index.html","searchKeys":["ReadableWritablePair","external interface ReadableWritablePair<R, W>","dev.shibasis.reaktor.core.server.cloudflare.ReadableWritablePair"]},{"name":"external interface RequestInit<Cf>","description":"dev.shibasis.reaktor.core.server.cloudflare.RequestInit","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-request-init/index.html","searchKeys":["RequestInit","external interface RequestInit<Cf>","dev.shibasis.reaktor.core.server.cloudflare.RequestInit"]},{"name":"external interface RequestInitCfProperties : Record<String, Any> ","description":"dev.shibasis.reaktor.core.server.cloudflare.RequestInitCfProperties","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-request-init-cf-properties/index.html","searchKeys":["RequestInitCfProperties","external interface RequestInitCfProperties : Record<String, Any> ","dev.shibasis.reaktor.core.server.cloudflare.RequestInitCfProperties"]},{"name":"external interface RequestInitCfPropertiesImage : BasicImageTransformations","description":"dev.shibasis.reaktor.core.server.cloudflare.RequestInitCfPropertiesImage","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-request-init-cf-properties-image/index.html","searchKeys":["RequestInitCfPropertiesImage","external interface RequestInitCfPropertiesImage : BasicImageTransformations","dev.shibasis.reaktor.core.server.cloudflare.RequestInitCfPropertiesImage"]},{"name":"external interface RequestInitCfPropertiesImageDraw : BasicImageTransformations","description":"dev.shibasis.reaktor.core.server.cloudflare.RequestInitCfPropertiesImageDraw","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-request-init-cf-properties-image-draw/index.html","searchKeys":["RequestInitCfPropertiesImageDraw","external interface RequestInitCfPropertiesImageDraw : BasicImageTransformations","dev.shibasis.reaktor.core.server.cloudflare.RequestInitCfPropertiesImageDraw"]},{"name":"external interface RequestInitCfPropertiesImageMinify","description":"dev.shibasis.reaktor.core.server.cloudflare.RequestInitCfPropertiesImageMinify","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-request-init-cf-properties-image-minify/index.html","searchKeys":["RequestInitCfPropertiesImageMinify","external interface RequestInitCfPropertiesImageMinify","dev.shibasis.reaktor.core.server.cloudflare.RequestInitCfPropertiesImageMinify"]},{"name":"external interface RequestInit__0 : RequestInit<dynamic> ","description":"dev.shibasis.reaktor.core.server.cloudflare.RequestInit__0","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-request-init__0/index.html","searchKeys":["RequestInit__0","external interface RequestInit__0 : RequestInit<dynamic> ","dev.shibasis.reaktor.core.server.cloudflare.RequestInit__0"]},{"name":"external interface ResponseInit","description":"dev.shibasis.reaktor.core.server.cloudflare.ResponseInit","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-response-init/index.html","searchKeys":["ResponseInit","external interface ResponseInit","dev.shibasis.reaktor.core.server.cloudflare.ResponseInit"]},{"name":"external interface RsaOtherPrimesInfo","description":"dev.shibasis.reaktor.core.server.cloudflare.RsaOtherPrimesInfo","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-rsa-other-primes-info/index.html","searchKeys":["RsaOtherPrimesInfo","external interface RsaOtherPrimesInfo","dev.shibasis.reaktor.core.server.cloudflare.RsaOtherPrimesInfo"]},{"name":"external interface ScheduledController","description":"dev.shibasis.reaktor.core.server.cloudflare.ScheduledController","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-scheduled-controller/index.html","searchKeys":["ScheduledController","external interface ScheduledController","dev.shibasis.reaktor.core.server.cloudflare.ScheduledController"]},{"name":"external interface Scheduler","description":"dev.shibasis.reaktor.core.server.cloudflare.Scheduler","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-scheduler/index.html","searchKeys":["Scheduler","external interface Scheduler","dev.shibasis.reaktor.core.server.cloudflare.Scheduler"]},{"name":"external interface SchedulerWaitOptions","description":"dev.shibasis.reaktor.core.server.cloudflare.SchedulerWaitOptions","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-scheduler-wait-options/index.html","searchKeys":["SchedulerWaitOptions","external interface SchedulerWaitOptions","dev.shibasis.reaktor.core.server.cloudflare.SchedulerWaitOptions"]},{"name":"external interface SendEmail","description":"dev.shibasis.reaktor.core.server.cloudflare.SendEmail","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-send-email/index.html","searchKeys":["SendEmail","external interface SendEmail","dev.shibasis.reaktor.core.server.cloudflare.SendEmail"]},{"name":"external interface ServiceWorkerGlobalScope : WorkerGlobalScope","description":"dev.shibasis.reaktor.core.server.cloudflare.ServiceWorkerGlobalScope","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-service-worker-global-scope/index.html","searchKeys":["ServiceWorkerGlobalScope","external interface ServiceWorkerGlobalScope : WorkerGlobalScope","dev.shibasis.reaktor.core.server.cloudflare.ServiceWorkerGlobalScope"]},{"name":"external interface Socket","description":"dev.shibasis.reaktor.core.server.cloudflare.Socket","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-socket/index.html","searchKeys":["Socket","external interface Socket","dev.shibasis.reaktor.core.server.cloudflare.Socket"]},{"name":"external interface SocketAddress","description":"dev.shibasis.reaktor.core.server.cloudflare.SocketAddress","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-socket-address/index.html","searchKeys":["SocketAddress","external interface SocketAddress","dev.shibasis.reaktor.core.server.cloudflare.SocketAddress"]},{"name":"external interface SocketOptions","description":"dev.shibasis.reaktor.core.server.cloudflare.SocketOptions","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-socket-options/index.html","searchKeys":["SocketOptions","external interface SocketOptions","dev.shibasis.reaktor.core.server.cloudflare.SocketOptions"]},{"name":"external interface StreamPipeOptions","description":"dev.shibasis.reaktor.core.server.cloudflare.StreamPipeOptions","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-stream-pipe-options/index.html","searchKeys":["StreamPipeOptions","external interface StreamPipeOptions","dev.shibasis.reaktor.core.server.cloudflare.StreamPipeOptions"]},{"name":"external interface StructuredSerializeOptions","description":"dev.shibasis.reaktor.core.server.cloudflare.StructuredSerializeOptions","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-structured-serialize-options/index.html","searchKeys":["StructuredSerializeOptions","external interface StructuredSerializeOptions","dev.shibasis.reaktor.core.server.cloudflare.StructuredSerializeOptions"]},{"name":"external interface SubtleCryptoDeriveKeyAlgorithm","description":"dev.shibasis.reaktor.core.server.cloudflare.SubtleCryptoDeriveKeyAlgorithm","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-subtle-crypto-derive-key-algorithm/index.html","searchKeys":["SubtleCryptoDeriveKeyAlgorithm","external interface SubtleCryptoDeriveKeyAlgorithm","dev.shibasis.reaktor.core.server.cloudflare.SubtleCryptoDeriveKeyAlgorithm"]},{"name":"external interface SubtleCryptoEncryptAlgorithm","description":"dev.shibasis.reaktor.core.server.cloudflare.SubtleCryptoEncryptAlgorithm","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-subtle-crypto-encrypt-algorithm/index.html","searchKeys":["SubtleCryptoEncryptAlgorithm","external interface SubtleCryptoEncryptAlgorithm","dev.shibasis.reaktor.core.server.cloudflare.SubtleCryptoEncryptAlgorithm"]},{"name":"external interface SubtleCryptoGenerateKeyAlgorithm","description":"dev.shibasis.reaktor.core.server.cloudflare.SubtleCryptoGenerateKeyAlgorithm","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-subtle-crypto-generate-key-algorithm/index.html","searchKeys":["SubtleCryptoGenerateKeyAlgorithm","external interface SubtleCryptoGenerateKeyAlgorithm","dev.shibasis.reaktor.core.server.cloudflare.SubtleCryptoGenerateKeyAlgorithm"]},{"name":"external interface SubtleCryptoHashAlgorithm","description":"dev.shibasis.reaktor.core.server.cloudflare.SubtleCryptoHashAlgorithm","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-subtle-crypto-hash-algorithm/index.html","searchKeys":["SubtleCryptoHashAlgorithm","external interface SubtleCryptoHashAlgorithm","dev.shibasis.reaktor.core.server.cloudflare.SubtleCryptoHashAlgorithm"]},{"name":"external interface SubtleCryptoImportKeyAlgorithm","description":"dev.shibasis.reaktor.core.server.cloudflare.SubtleCryptoImportKeyAlgorithm","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-subtle-crypto-import-key-algorithm/index.html","searchKeys":["SubtleCryptoImportKeyAlgorithm","external interface SubtleCryptoImportKeyAlgorithm","dev.shibasis.reaktor.core.server.cloudflare.SubtleCryptoImportKeyAlgorithm"]},{"name":"external interface SubtleCryptoSignAlgorithm","description":"dev.shibasis.reaktor.core.server.cloudflare.SubtleCryptoSignAlgorithm","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-subtle-crypto-sign-algorithm/index.html","searchKeys":["SubtleCryptoSignAlgorithm","external interface SubtleCryptoSignAlgorithm","dev.shibasis.reaktor.core.server.cloudflare.SubtleCryptoSignAlgorithm"]},{"name":"external interface T$1","description":"dev.shibasis.reaktor.core.server.cloudflare.T$1","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-t$1/index.html","searchKeys":["T$1","external interface T$1","dev.shibasis.reaktor.core.server.cloudflare.T$1"]},{"name":"external interface T$12","description":"dev.shibasis.reaktor.core.server.cloudflare.T$12","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-t$12/index.html","searchKeys":["T$12","external interface T$12","dev.shibasis.reaktor.core.server.cloudflare.T$12"]},{"name":"external interface T$5","description":"dev.shibasis.reaktor.core.server.cloudflare.T$5","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-t$5/index.html","searchKeys":["T$5","external interface T$5","dev.shibasis.reaktor.core.server.cloudflare.T$5"]},{"name":"external interface TestController","description":"dev.shibasis.reaktor.core.server.cloudflare.TestController","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-test-controller/index.html","searchKeys":["TestController","external interface TestController","dev.shibasis.reaktor.core.server.cloudflare.TestController"]},{"name":"external interface Text","description":"dev.shibasis.reaktor.core.server.cloudflare.Text","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-text/index.html","searchKeys":["Text","external interface Text","dev.shibasis.reaktor.core.server.cloudflare.Text"]},{"name":"external interface TextDecoderConstructorOptions","description":"dev.shibasis.reaktor.core.server.cloudflare.TextDecoderConstructorOptions","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-text-decoder-constructor-options/index.html","searchKeys":["TextDecoderConstructorOptions","external interface TextDecoderConstructorOptions","dev.shibasis.reaktor.core.server.cloudflare.TextDecoderConstructorOptions"]},{"name":"external interface TextDecoderDecodeOptions","description":"dev.shibasis.reaktor.core.server.cloudflare.TextDecoderDecodeOptions","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-text-decoder-decode-options/index.html","searchKeys":["TextDecoderDecodeOptions","external interface TextDecoderDecodeOptions","dev.shibasis.reaktor.core.server.cloudflare.TextDecoderDecodeOptions"]},{"name":"external interface TextDecoderStreamTextDecoderStreamInit","description":"dev.shibasis.reaktor.core.server.cloudflare.TextDecoderStreamTextDecoderStreamInit","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-text-decoder-stream-text-decoder-stream-init/index.html","searchKeys":["TextDecoderStreamTextDecoderStreamInit","external interface TextDecoderStreamTextDecoderStreamInit","dev.shibasis.reaktor.core.server.cloudflare.TextDecoderStreamTextDecoderStreamInit"]},{"name":"external interface TextEncoderEncodeIntoResult","description":"dev.shibasis.reaktor.core.server.cloudflare.TextEncoderEncodeIntoResult","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-text-encoder-encode-into-result/index.html","searchKeys":["TextEncoderEncodeIntoResult","external interface TextEncoderEncodeIntoResult","dev.shibasis.reaktor.core.server.cloudflare.TextEncoderEncodeIntoResult"]},{"name":"external interface TlsOptions","description":"dev.shibasis.reaktor.core.server.cloudflare.TlsOptions","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-tls-options/index.html","searchKeys":["TlsOptions","external interface TlsOptions","dev.shibasis.reaktor.core.server.cloudflare.TlsOptions"]},{"name":"external interface TraceDiagnosticChannelEvent","description":"dev.shibasis.reaktor.core.server.cloudflare.TraceDiagnosticChannelEvent","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-trace-diagnostic-channel-event/index.html","searchKeys":["TraceDiagnosticChannelEvent","external interface TraceDiagnosticChannelEvent","dev.shibasis.reaktor.core.server.cloudflare.TraceDiagnosticChannelEvent"]},{"name":"external interface TraceException","description":"dev.shibasis.reaktor.core.server.cloudflare.TraceException","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-trace-exception/index.html","searchKeys":["TraceException","external interface TraceException","dev.shibasis.reaktor.core.server.cloudflare.TraceException"]},{"name":"external interface TraceItem","description":"dev.shibasis.reaktor.core.server.cloudflare.TraceItem","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-trace-item/index.html","searchKeys":["TraceItem","external interface TraceItem","dev.shibasis.reaktor.core.server.cloudflare.TraceItem"]},{"name":"external interface TraceItemAlarmEventInfo","description":"dev.shibasis.reaktor.core.server.cloudflare.TraceItemAlarmEventInfo","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-trace-item-alarm-event-info/index.html","searchKeys":["TraceItemAlarmEventInfo","external interface TraceItemAlarmEventInfo","dev.shibasis.reaktor.core.server.cloudflare.TraceItemAlarmEventInfo"]},{"name":"external interface TraceItemCustomEventInfo","description":"dev.shibasis.reaktor.core.server.cloudflare.TraceItemCustomEventInfo","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-trace-item-custom-event-info/index.html","searchKeys":["TraceItemCustomEventInfo","external interface TraceItemCustomEventInfo","dev.shibasis.reaktor.core.server.cloudflare.TraceItemCustomEventInfo"]},{"name":"external interface TraceItemEmailEventInfo","description":"dev.shibasis.reaktor.core.server.cloudflare.TraceItemEmailEventInfo","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-trace-item-email-event-info/index.html","searchKeys":["TraceItemEmailEventInfo","external interface TraceItemEmailEventInfo","dev.shibasis.reaktor.core.server.cloudflare.TraceItemEmailEventInfo"]},{"name":"external interface TraceItemFetchEventInfo","description":"dev.shibasis.reaktor.core.server.cloudflare.TraceItemFetchEventInfo","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-trace-item-fetch-event-info/index.html","searchKeys":["TraceItemFetchEventInfo","external interface TraceItemFetchEventInfo","dev.shibasis.reaktor.core.server.cloudflare.TraceItemFetchEventInfo"]},{"name":"external interface TraceItemFetchEventInfoRequest","description":"dev.shibasis.reaktor.core.server.cloudflare.TraceItemFetchEventInfoRequest","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-trace-item-fetch-event-info-request/index.html","searchKeys":["TraceItemFetchEventInfoRequest","external interface TraceItemFetchEventInfoRequest","dev.shibasis.reaktor.core.server.cloudflare.TraceItemFetchEventInfoRequest"]},{"name":"external interface TraceItemFetchEventInfoResponse","description":"dev.shibasis.reaktor.core.server.cloudflare.TraceItemFetchEventInfoResponse","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-trace-item-fetch-event-info-response/index.html","searchKeys":["TraceItemFetchEventInfoResponse","external interface TraceItemFetchEventInfoResponse","dev.shibasis.reaktor.core.server.cloudflare.TraceItemFetchEventInfoResponse"]},{"name":"external interface TraceItemQueueEventInfo","description":"dev.shibasis.reaktor.core.server.cloudflare.TraceItemQueueEventInfo","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-trace-item-queue-event-info/index.html","searchKeys":["TraceItemQueueEventInfo","external interface TraceItemQueueEventInfo","dev.shibasis.reaktor.core.server.cloudflare.TraceItemQueueEventInfo"]},{"name":"external interface TraceItemScheduledEventInfo","description":"dev.shibasis.reaktor.core.server.cloudflare.TraceItemScheduledEventInfo","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-trace-item-scheduled-event-info/index.html","searchKeys":["TraceItemScheduledEventInfo","external interface TraceItemScheduledEventInfo","dev.shibasis.reaktor.core.server.cloudflare.TraceItemScheduledEventInfo"]},{"name":"external interface TraceLog","description":"dev.shibasis.reaktor.core.server.cloudflare.TraceLog","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-trace-log/index.html","searchKeys":["TraceLog","external interface TraceLog","dev.shibasis.reaktor.core.server.cloudflare.TraceLog"]},{"name":"external interface TraceMetrics","description":"dev.shibasis.reaktor.core.server.cloudflare.TraceMetrics","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-trace-metrics/index.html","searchKeys":["TraceMetrics","external interface TraceMetrics","dev.shibasis.reaktor.core.server.cloudflare.TraceMetrics"]},{"name":"external interface TransformStreamDefaultController<O>","description":"dev.shibasis.reaktor.core.server.cloudflare.TransformStreamDefaultController","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-transform-stream-default-controller/index.html","searchKeys":["TransformStreamDefaultController","external interface TransformStreamDefaultController<O>","dev.shibasis.reaktor.core.server.cloudflare.TransformStreamDefaultController"]},{"name":"external interface Transformer<I, O>","description":"dev.shibasis.reaktor.core.server.cloudflare.Transformer","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-transformer/index.html","searchKeys":["Transformer","external interface Transformer<I, O>","dev.shibasis.reaktor.core.server.cloudflare.Transformer"]},{"name":"external interface URLPatternURLPatternComponentResult","description":"dev.shibasis.reaktor.core.server.cloudflare.URLPatternURLPatternComponentResult","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-u-r-l-pattern-u-r-l-pattern-component-result/index.html","searchKeys":["URLPatternURLPatternComponentResult","external interface URLPatternURLPatternComponentResult","dev.shibasis.reaktor.core.server.cloudflare.URLPatternURLPatternComponentResult"]},{"name":"external interface URLPatternURLPatternInit","description":"dev.shibasis.reaktor.core.server.cloudflare.URLPatternURLPatternInit","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-u-r-l-pattern-u-r-l-pattern-init/index.html","searchKeys":["URLPatternURLPatternInit","external interface URLPatternURLPatternInit","dev.shibasis.reaktor.core.server.cloudflare.URLPatternURLPatternInit"]},{"name":"external interface URLPatternURLPatternResult","description":"dev.shibasis.reaktor.core.server.cloudflare.URLPatternURLPatternResult","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-u-r-l-pattern-u-r-l-pattern-result/index.html","searchKeys":["URLPatternURLPatternResult","external interface URLPatternURLPatternResult","dev.shibasis.reaktor.core.server.cloudflare.URLPatternURLPatternResult"]},{"name":"external interface UnderlyingByteSource","description":"dev.shibasis.reaktor.core.server.cloudflare.UnderlyingByteSource","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-underlying-byte-source/index.html","searchKeys":["UnderlyingByteSource","external interface UnderlyingByteSource","dev.shibasis.reaktor.core.server.cloudflare.UnderlyingByteSource"]},{"name":"external interface UnderlyingSink<W>","description":"dev.shibasis.reaktor.core.server.cloudflare.UnderlyingSink","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-underlying-sink/index.html","searchKeys":["UnderlyingSink","external interface UnderlyingSink<W>","dev.shibasis.reaktor.core.server.cloudflare.UnderlyingSink"]},{"name":"external interface UnderlyingSink__0 : UnderlyingSink<Any> ","description":"dev.shibasis.reaktor.core.server.cloudflare.UnderlyingSink__0","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-underlying-sink__0/index.html","searchKeys":["UnderlyingSink__0","external interface UnderlyingSink__0 : UnderlyingSink<Any> ","dev.shibasis.reaktor.core.server.cloudflare.UnderlyingSink__0"]},{"name":"external interface UnderlyingSource<R>","description":"dev.shibasis.reaktor.core.server.cloudflare.UnderlyingSource","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-underlying-source/index.html","searchKeys":["UnderlyingSource","external interface UnderlyingSource<R>","dev.shibasis.reaktor.core.server.cloudflare.UnderlyingSource"]},{"name":"external interface UnsafeTraceMetrics","description":"dev.shibasis.reaktor.core.server.cloudflare.UnsafeTraceMetrics","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-unsafe-trace-metrics/index.html","searchKeys":["UnsafeTraceMetrics","external interface UnsafeTraceMetrics","dev.shibasis.reaktor.core.server.cloudflare.UnsafeTraceMetrics"]},{"name":"external interface WebSocketEventMap","description":"dev.shibasis.reaktor.core.server.cloudflare.WebSocketEventMap","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-web-socket-event-map/index.html","searchKeys":["WebSocketEventMap","external interface WebSocketEventMap","dev.shibasis.reaktor.core.server.cloudflare.WebSocketEventMap"]},{"name":"external interface WorkerGlobalScopeEventMap","description":"dev.shibasis.reaktor.core.server.cloudflare.WorkerGlobalScopeEventMap","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-worker-global-scope-event-map/index.html","searchKeys":["WorkerGlobalScopeEventMap","external interface WorkerGlobalScopeEventMap","dev.shibasis.reaktor.core.server.cloudflare.WorkerGlobalScopeEventMap"]},{"name":"external interface WritableStreamDefaultController","description":"dev.shibasis.reaktor.core.server.cloudflare.WritableStreamDefaultController","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-writable-stream-default-controller/index.html","searchKeys":["WritableStreamDefaultController","external interface WritableStreamDefaultController","dev.shibasis.reaktor.core.server.cloudflare.WritableStreamDefaultController"]},{"name":"external object WebSocketPair","description":"dev.shibasis.reaktor.core.server.cloudflare.WebSocketPair","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-web-socket-pair/index.html","searchKeys":["WebSocketPair","external object WebSocketPair","dev.shibasis.reaktor.core.server.cloudflare.WebSocketPair"]},{"name":"external var caches: CacheStorage","description":"dev.shibasis.reaktor.core.server.cloudflare.caches","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/caches.html","searchKeys":["caches","external var caches: CacheStorage","dev.shibasis.reaktor.core.server.cloudflare.caches"]},{"name":"external var console: Console","description":"dev.shibasis.reaktor.core.server.cloudflare.console","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/console.html","searchKeys":["console","external var console: Console","dev.shibasis.reaktor.core.server.cloudflare.console"]},{"name":"external var crypto: Crypto","description":"dev.shibasis.reaktor.core.server.cloudflare.crypto","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/crypto.html","searchKeys":["crypto","external var crypto: Crypto","dev.shibasis.reaktor.core.server.cloudflare.crypto"]},{"name":"external var origin: String","description":"dev.shibasis.reaktor.core.server.cloudflare.origin","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/origin.html","searchKeys":["origin","external var origin: String","dev.shibasis.reaktor.core.server.cloudflare.origin"]},{"name":"external var performance: Performance","description":"dev.shibasis.reaktor.core.server.cloudflare.performance","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/performance.html","searchKeys":["performance","external var performance: Performance","dev.shibasis.reaktor.core.server.cloudflare.performance"]},{"name":"external var scheduler: Scheduler","description":"dev.shibasis.reaktor.core.server.cloudflare.scheduler","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/scheduler.html","searchKeys":["scheduler","external var scheduler: Scheduler","dev.shibasis.reaktor.core.server.cloudflare.scheduler"]},{"name":"external var self: ServiceWorkerGlobalScope","description":"dev.shibasis.reaktor.core.server.cloudflare.self","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/self.html","searchKeys":["self","external var self: ServiceWorkerGlobalScope","dev.shibasis.reaktor.core.server.cloudflare.self"]},{"name":"fun <Result> async(fn: suspend () -> Result): Deferred<Result>","description":"dev.shibasis.reaktor.core.framework.DispatchGroup.async","location":"reaktor-core/dev.shibasis.reaktor.core.framework/-dispatch-group/async.html","searchKeys":["async","fun <Result> async(fn: suspend () -> Result): Deferred<Result>","dev.shibasis.reaktor.core.framework.DispatchGroup.async"]},{"name":"fun <Result> launch(fn: suspend () -> Result): Job","description":"dev.shibasis.reaktor.core.framework.DispatchGroup.launch","location":"reaktor-core/dev.shibasis.reaktor.core.framework/-dispatch-group/launch.html","searchKeys":["launch","fun <Result> launch(fn: suspend () -> Result): Job","dev.shibasis.reaktor.core.framework.DispatchGroup.launch"]},{"name":"fun <T> nullControllerResult(): Result<T>","description":"dev.shibasis.reaktor.core.framework.Adapter.nullControllerResult","location":"reaktor-core/dev.shibasis.reaktor.core.framework/-adapter/null-controller-result.html","searchKeys":["nullControllerResult","fun <T> nullControllerResult(): Result<T>","dev.shibasis.reaktor.core.framework.Adapter.nullControllerResult"]},{"name":"fun Activity.hasPermission(permission: String): Boolean","description":"dev.shibasis.reaktor.core.extensions.hasPermission","location":"reaktor-core/dev.shibasis.reaktor.core.extensions/has-permission.html","searchKeys":["hasPermission","fun Activity.hasPermission(permission: String): Boolean","dev.shibasis.reaktor.core.extensions.hasPermission"]},{"name":"fun Activity.toast(message: String)","description":"dev.shibasis.reaktor.core.extensions.toast","location":"reaktor-core/dev.shibasis.reaktor.core.extensions/toast.html","searchKeys":["toast","fun Activity.toast(message: String)","dev.shibasis.reaktor.core.extensions.toast"]},{"name":"fun Any(signals: Array<AbortSignal>): AbortSignal","description":"dev.shibasis.reaktor.core.server.cloudflare.AbortSignal.Companion.Any","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-abort-signal/-companion/-any.html","searchKeys":["Any","fun Any(signals: Array<AbortSignal>): AbortSignal","dev.shibasis.reaktor.core.server.cloudflare.AbortSignal.Companion.Any"]},{"name":"fun ComponentActivity.getSimpleName(): String","description":"dev.shibasis.reaktor.core.extensions.getSimpleName","location":"reaktor-core/dev.shibasis.reaktor.core.extensions/get-simple-name.html","searchKeys":["getSimpleName","fun ComponentActivity.getSimpleName(): String","dev.shibasis.reaktor.core.extensions.getSimpleName"]},{"name":"fun ComponentActivity.getTag(): String","description":"dev.shibasis.reaktor.core.extensions.getTag","location":"reaktor-core/dev.shibasis.reaktor.core.extensions/get-tag.html","searchKeys":["getTag","fun ComponentActivity.getTag(): String","dev.shibasis.reaktor.core.extensions.getTag"]},{"name":"fun ComponentActivity.logDebug(message: String?)","description":"dev.shibasis.reaktor.core.extensions.logDebug","location":"reaktor-core/dev.shibasis.reaktor.core.extensions/log-debug.html","searchKeys":["logDebug","fun ComponentActivity.logDebug(message: String?)","dev.shibasis.reaktor.core.extensions.logDebug"]},{"name":"fun ComponentActivity.logError(error: Throwable)","description":"dev.shibasis.reaktor.core.extensions.logError","location":"reaktor-core/dev.shibasis.reaktor.core.extensions/log-error.html","searchKeys":["logError","fun ComponentActivity.logError(error: Throwable)","dev.shibasis.reaktor.core.extensions.logError"]},{"name":"fun ComponentActivity.safeIntentDispatch(intent: Intent)","description":"dev.shibasis.reaktor.core.extensions.safeIntentDispatch","location":"reaktor-core/dev.shibasis.reaktor.core.extensions/safe-intent-dispatch.html","searchKeys":["safeIntentDispatch","fun ComponentActivity.safeIntentDispatch(intent: Intent)","dev.shibasis.reaktor.core.extensions.safeIntentDispatch"]},{"name":"fun CoroutineDispatcher.toQueue(): dispatch_queue_global_t","description":"dev.shibasis.reaktor.core.framework.toQueue","location":"reaktor-core/dev.shibasis.reaktor.core.framework/to-queue.html","searchKeys":["toQueue","fun CoroutineDispatcher.toQueue(): dispatch_queue_global_t","dev.shibasis.reaktor.core.framework.toQueue"]},{"name":"fun PackageManager.intentHandlerExists(intent: Intent): Boolean","description":"dev.shibasis.reaktor.core.extensions.intentHandlerExists","location":"reaktor-core/dev.shibasis.reaktor.core.extensions/intent-handler-exists.html","searchKeys":["intentHandlerExists","fun PackageManager.intentHandlerExists(intent: Intent): Boolean","dev.shibasis.reaktor.core.extensions.intentHandlerExists"]},{"name":"fun abort(reason: Any = definedExternally): AbortSignal","description":"dev.shibasis.reaktor.core.server.cloudflare.AbortSignal.Companion.abort","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-abort-signal/-companion/abort.html","searchKeys":["abort","fun abort(reason: Any = definedExternally): AbortSignal","dev.shibasis.reaktor.core.server.cloudflare.AbortSignal.Companion.abort"]},{"name":"fun addHandler(permission: String, handler: PermissionRequestHandler)","description":"dev.shibasis.reaktor.core.adapters.DarwinPermissionAdapter.addHandler","location":"reaktor-core/dev.shibasis.reaktor.core.adapters/-darwin-permission-adapter/add-handler.html","searchKeys":["addHandler","fun addHandler(permission: String, handler: PermissionRequestHandler)","dev.shibasis.reaktor.core.adapters.DarwinPermissionAdapter.addHandler"]},{"name":"fun cancelAll()","description":"dev.shibasis.reaktor.core.framework.DispatchGroup.cancelAll","location":"reaktor-core/dev.shibasis.reaktor.core.framework/-dispatch-group/cancel-all.html","searchKeys":["cancelAll","fun cancelAll()","dev.shibasis.reaktor.core.framework.DispatchGroup.cancelAll"]},{"name":"fun connect(adapterList: List<Adapter<ComponentActivity>>)","description":"dev.shibasis.reaktor.core.framework.BaseActivity.connect","location":"reaktor-core/dev.shibasis.reaktor.core.framework/-base-activity/connect.html","searchKeys":["connect","fun connect(adapterList: List<Adapter<ComponentActivity>>)","dev.shibasis.reaktor.core.framework.BaseActivity.connect"]},{"name":"fun connect(vararg adapters: Adapter<ComponentActivity>)","description":"dev.shibasis.reaktor.core.framework.BaseActivity.connect","location":"reaktor-core/dev.shibasis.reaktor.core.framework/-base-activity/connect.html","searchKeys":["connect","fun connect(vararg adapters: Adapter<ComponentActivity>)","dev.shibasis.reaktor.core.framework.BaseActivity.connect"]},{"name":"fun disconnect(adapterList: List<Adapter<ComponentActivity>>)","description":"dev.shibasis.reaktor.core.framework.BaseActivity.disconnect","location":"reaktor-core/dev.shibasis.reaktor.core.framework/-base-activity/disconnect.html","searchKeys":["disconnect","fun disconnect(adapterList: List<Adapter<ComponentActivity>>)","dev.shibasis.reaktor.core.framework.BaseActivity.disconnect"]},{"name":"fun disconnect(vararg adapters: Adapter<ComponentActivity>)","description":"dev.shibasis.reaktor.core.framework.BaseActivity.disconnect","location":"reaktor-core/dev.shibasis.reaktor.core.framework/-base-activity/disconnect.html","searchKeys":["disconnect","fun disconnect(vararg adapters: Adapter<ComponentActivity>)","dev.shibasis.reaktor.core.framework.BaseActivity.disconnect"]},{"name":"fun getEnvInt(key: String, defaultValue: Int): Int","description":"dev.shibasis.reaktor.core.actor.getEnvInt","location":"reaktor-core/dev.shibasis.reaktor.core.actor/get-env-int.html","searchKeys":["getEnvInt","fun getEnvInt(key: String, defaultValue: Int): Int","dev.shibasis.reaktor.core.actor.getEnvInt"]},{"name":"fun getEnvString(key: String, defaultValue: String): String","description":"dev.shibasis.reaktor.core.actor.getEnvString","location":"reaktor-core/dev.shibasis.reaktor.core.actor/get-env-string.html","searchKeys":["getEnvString","fun getEnvString(key: String, defaultValue: String): String","dev.shibasis.reaktor.core.actor.getEnvString"]},{"name":"fun getHomeDirectory(directory: String = \"Manna\"): File?","description":"dev.shibasis.reaktor.core.adapters.AndroidStorageAdapter.getHomeDirectory","location":"reaktor-core/dev.shibasis.reaktor.core.adapters/-android-storage-adapter/get-home-directory.html","searchKeys":["getHomeDirectory","fun getHomeDirectory(directory: String = \"Manna\"): File?","dev.shibasis.reaktor.core.adapters.AndroidStorageAdapter.getHomeDirectory"]},{"name":"fun handle(controller: Controller, event: ControllerEvent)","description":"dev.shibasis.reaktor.core.framework.Adapter.handle","location":"reaktor-core/dev.shibasis.reaktor.core.framework/-adapter/handle.html","searchKeys":["handle","fun handle(controller: Controller, event: ControllerEvent)","dev.shibasis.reaktor.core.framework.Adapter.handle"]},{"name":"fun isAndroid(): Boolean","description":"dev.shibasis.reaktor.core.framework.Platform.isAndroid","location":"reaktor-core/dev.shibasis.reaktor.core.framework/-platform/is-android.html","searchKeys":["isAndroid","fun isAndroid(): Boolean","dev.shibasis.reaktor.core.framework.Platform.isAndroid"]},{"name":"fun isDarwin(): Boolean","description":"dev.shibasis.reaktor.core.framework.Platform.isDarwin","location":"reaktor-core/dev.shibasis.reaktor.core.framework/-platform/is-darwin.html","searchKeys":["isDarwin","fun isDarwin(): Boolean","dev.shibasis.reaktor.core.framework.Platform.isDarwin"]},{"name":"fun isJvm(): Boolean","description":"dev.shibasis.reaktor.core.framework.Platform.isJvm","location":"reaktor-core/dev.shibasis.reaktor.core.framework/-platform/is-jvm.html","searchKeys":["isJvm","fun isJvm(): Boolean","dev.shibasis.reaktor.core.framework.Platform.isJvm"]},{"name":"fun isWeb(): Boolean","description":"dev.shibasis.reaktor.core.framework.Platform.isWeb","location":"reaktor-core/dev.shibasis.reaktor.core.framework/-platform/is-web.html","searchKeys":["isWeb","fun isWeb(): Boolean","dev.shibasis.reaktor.core.framework.Platform.isWeb"]},{"name":"fun isWorker(): Boolean","description":"dev.shibasis.reaktor.core.framework.Platform.isWorker","location":"reaktor-core/dev.shibasis.reaktor.core.framework/-platform/is-worker.html","searchKeys":["isWorker","fun isWorker(): Boolean","dev.shibasis.reaktor.core.framework.Platform.isWorker"]},{"name":"fun json(Any: Any, maybeInit: Response = definedExternally): Response","description":"dev.shibasis.reaktor.core.server.cloudflare.Response.Companion.json","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-response/-companion/json.html","searchKeys":["json","fun json(Any: Any, maybeInit: Response = definedExternally): Response","dev.shibasis.reaktor.core.server.cloudflare.Response.Companion.json"]},{"name":"fun json(Any: Any, maybeInit: ResponseInit = definedExternally): Response","description":"dev.shibasis.reaktor.core.server.cloudflare.Response.Companion.json","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-response/-companion/json.html","searchKeys":["json","fun json(Any: Any, maybeInit: ResponseInit = definedExternally): Response","dev.shibasis.reaktor.core.server.cloudflare.Response.Companion.json"]},{"name":"fun logDebug(message: String?, tag: String = \"GlobalLog\")","description":"dev.shibasis.reaktor.core.extensions.logDebug","location":"reaktor-core/dev.shibasis.reaktor.core.extensions/log-debug.html","searchKeys":["logDebug","fun logDebug(message: String?, tag: String = \"GlobalLog\")","dev.shibasis.reaktor.core.extensions.logDebug"]},{"name":"fun logError(error: Throwable)","description":"dev.shibasis.reaktor.core.extensions.logError","location":"reaktor-core/dev.shibasis.reaktor.core.extensions/log-error.html","searchKeys":["logError","fun logError(error: Throwable)","dev.shibasis.reaktor.core.extensions.logError"]},{"name":"fun logError(tag: String = \"GlobalLog\", exception: Throwable)","description":"dev.shibasis.reaktor.core.extensions.logError","location":"reaktor-core/dev.shibasis.reaktor.core.extensions/log-error.html","searchKeys":["logError","fun logError(tag: String = \"GlobalLog\", exception: Throwable)","dev.shibasis.reaktor.core.extensions.logError"]},{"name":"fun redirect(url: String, status: Number = definedExternally): Response","description":"dev.shibasis.reaktor.core.server.cloudflare.Response.Companion.redirect","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-response/-companion/redirect.html","searchKeys":["redirect","fun redirect(url: String, status: Number = definedExternally): Response","dev.shibasis.reaktor.core.server.cloudflare.Response.Companion.redirect"]},{"name":"fun timeStampedFileName(extension: String): String","description":"dev.shibasis.reaktor.core.adapters.AndroidStorageAdapter.timeStampedFileName","location":"reaktor-core/dev.shibasis.reaktor.core.adapters/-android-storage-adapter/time-stamped-file-name.html","searchKeys":["timeStampedFileName","fun timeStampedFileName(extension: String): String","dev.shibasis.reaktor.core.adapters.AndroidStorageAdapter.timeStampedFileName"]},{"name":"fun timeout(delay: Number): AbortSignal","description":"dev.shibasis.reaktor.core.server.cloudflare.AbortSignal.Companion.timeout","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-abort-signal/-companion/timeout.html","searchKeys":["timeout","fun timeout(delay: Number): AbortSignal","dev.shibasis.reaktor.core.server.cloudflare.AbortSignal.Companion.timeout"]},{"name":"fun valueOf(value: String): PlatformType","description":"dev.shibasis.reaktor.core.framework.PlatformType.valueOf","location":"reaktor-core/dev.shibasis.reaktor.core.framework/-platform-type/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): PlatformType","dev.shibasis.reaktor.core.framework.PlatformType.valueOf"]},{"name":"fun valueOf(value: String): StatusCode","description":"dev.shibasis.reaktor.core.network.StatusCode.valueOf","location":"reaktor-core/dev.shibasis.reaktor.core.network/-status-code/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): StatusCode","dev.shibasis.reaktor.core.network.StatusCode.valueOf"]},{"name":"fun values(): Array<PlatformType>","description":"dev.shibasis.reaktor.core.framework.PlatformType.values","location":"reaktor-core/dev.shibasis.reaktor.core.framework/-platform-type/values.html","searchKeys":["values","fun values(): Array<PlatformType>","dev.shibasis.reaktor.core.framework.PlatformType.values"]},{"name":"fun values(): Array<StatusCode>","description":"dev.shibasis.reaktor.core.network.StatusCode.values","location":"reaktor-core/dev.shibasis.reaktor.core.network/-status-code/values.html","searchKeys":["values","fun values(): Array<StatusCode>","dev.shibasis.reaktor.core.network.StatusCode.values"]},{"name":"inline fun <T : Activity> ComponentActivity.finishAndStart()","description":"dev.shibasis.reaktor.core.extensions.finishAndStart","location":"reaktor-core/dev.shibasis.reaktor.core.extensions/finish-and-start.html","searchKeys":["finishAndStart","inline fun <T : Activity> ComponentActivity.finishAndStart()","dev.shibasis.reaktor.core.extensions.finishAndStart"]},{"name":"inline fun <T : Activity> ComponentActivity.startActivity(disableAnimation: Boolean = false)","description":"dev.shibasis.reaktor.core.extensions.startActivity","location":"reaktor-core/dev.shibasis.reaktor.core.extensions/start-activity.html","searchKeys":["startActivity","inline fun <T : Activity> ComponentActivity.startActivity(disableAnimation: Boolean = false)","dev.shibasis.reaktor.core.extensions.startActivity"]},{"name":"inline fun <T> JsonResponse(data: T, statusCode: StatusCode = StatusCode.OK): Response","description":"dev.shibasis.reaktor.core.network.JsonResponse","location":"reaktor-core/dev.shibasis.reaktor.core.network/-json-response.html","searchKeys":["JsonResponse","inline fun <T> JsonResponse(data: T, statusCode: StatusCode = StatusCode.OK): Response","dev.shibasis.reaktor.core.network.JsonResponse"]},{"name":"inline fun <T> Result<T>.toResponse(): Response","description":"dev.shibasis.reaktor.core.network.toResponse","location":"reaktor-core/dev.shibasis.reaktor.core.network/to-response.html","searchKeys":["toResponse","inline fun <T> Result<T>.toResponse(): Response","dev.shibasis.reaktor.core.network.toResponse"]},{"name":"inline fun <T> async(context: CoroutineContext = EmptyCoroutineContext, start: CoroutineStart = CoroutineStart.DEFAULT, crossinline block: suspend CoroutineScope.() -> T): Deferred<T>","description":"dev.shibasis.reaktor.core.framework.BaseActivity.async","location":"reaktor-core/dev.shibasis.reaktor.core.framework/-base-activity/async.html","searchKeys":["async","inline fun <T> async(context: CoroutineContext = EmptyCoroutineContext, start: CoroutineStart = CoroutineStart.DEFAULT, crossinline block: suspend CoroutineScope.() -> T): Deferred<T>","dev.shibasis.reaktor.core.framework.BaseActivity.async"]},{"name":"inline fun <T> fromJson(string: String): T","description":"dev.shibasis.reaktor.core.framework.fromJson","location":"reaktor-core/dev.shibasis.reaktor.core.framework/from-json.html","searchKeys":["fromJson","inline fun <T> fromJson(string: String): T","dev.shibasis.reaktor.core.framework.fromJson"]},{"name":"inline fun <T> toJson(data: T): String","description":"dev.shibasis.reaktor.core.framework.toJson","location":"reaktor-core/dev.shibasis.reaktor.core.framework/to-json.html","searchKeys":["toJson","inline fun <T> toJson(data: T): String","dev.shibasis.reaktor.core.framework.toJson"]},{"name":"inline fun ErrorResponse(code: Int, message: String, statusCode: StatusCode = StatusCode.BAD_REQUEST): Response","description":"dev.shibasis.reaktor.core.network.ErrorResponse","location":"reaktor-core/dev.shibasis.reaktor.core.network/-error-response.html","searchKeys":["ErrorResponse","inline fun ErrorResponse(code: Int, message: String, statusCode: StatusCode = StatusCode.BAD_REQUEST): Response","dev.shibasis.reaktor.core.network.ErrorResponse"]},{"name":"inline fun launch(context: CoroutineContext = EmptyCoroutineContext, start: CoroutineStart = CoroutineStart.DEFAULT, crossinline block: suspend CoroutineScope.() -> Unit): Job","description":"dev.shibasis.reaktor.core.framework.BaseActivity.launch","location":"reaktor-core/dev.shibasis.reaktor.core.framework/-base-activity/launch.html","searchKeys":["launch","inline fun launch(context: CoroutineContext = EmptyCoroutineContext, start: CoroutineStart = CoroutineStart.DEFAULT, crossinline block: suspend CoroutineScope.() -> Unit): Job","dev.shibasis.reaktor.core.framework.BaseActivity.launch"]},{"name":"interface CloudflareWorker","description":"dev.shibasis.reaktor.core.cloudflare.CloudflareWorker","location":"reaktor-core/dev.shibasis.reaktor.core.cloudflare/-cloudflare-worker/index.html","searchKeys":["CloudflareWorker","interface CloudflareWorker","dev.shibasis.reaktor.core.cloudflare.CloudflareWorker"]},{"name":"interface Component : ControllerEventObserver","description":"dev.shibasis.reaktor.core.framework.Component","location":"reaktor-core/dev.shibasis.reaktor.core.framework/-component/index.html","searchKeys":["Component","interface Component : ControllerEventObserver","dev.shibasis.reaktor.core.framework.Component"]},{"name":"interface DependencyModule : AutoCloseable","description":"dev.shibasis.reaktor.core.framework.DependencyModule","location":"reaktor-core/dev.shibasis.reaktor.core.framework/-dependency-module/index.html","searchKeys":["DependencyModule","interface DependencyModule : AutoCloseable","dev.shibasis.reaktor.core.framework.DependencyModule"]},{"name":"object Companion","description":"dev.shibasis.reaktor.core.server.cloudflare.AbortSignal.Companion","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-abort-signal/-companion/index.html","searchKeys":["Companion","object Companion","dev.shibasis.reaktor.core.server.cloudflare.AbortSignal.Companion"]},{"name":"object Companion","description":"dev.shibasis.reaktor.core.server.cloudflare.Event.Companion","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-event/-companion/index.html","searchKeys":["Companion","object Companion","dev.shibasis.reaktor.core.server.cloudflare.Event.Companion"]},{"name":"object Companion","description":"dev.shibasis.reaktor.core.server.cloudflare.ReadableStream.Companion","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-readable-stream/-companion/index.html","searchKeys":["Companion","object Companion","dev.shibasis.reaktor.core.server.cloudflare.ReadableStream.Companion"]},{"name":"object Companion","description":"dev.shibasis.reaktor.core.server.cloudflare.Response.Companion","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-response/-companion/index.html","searchKeys":["Companion","object Companion","dev.shibasis.reaktor.core.server.cloudflare.Response.Companion"]},{"name":"object Companion","description":"dev.shibasis.reaktor.core.server.cloudflare.WebSocket.Companion","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-web-socket/-companion/index.html","searchKeys":["Companion","object Companion","dev.shibasis.reaktor.core.server.cloudflare.WebSocket.Companion"]},{"name":"object Dispatch","description":"dev.shibasis.reaktor.core.framework.Dispatch","location":"reaktor-core/dev.shibasis.reaktor.core.framework/-dispatch/index.html","searchKeys":["Dispatch","object Dispatch","dev.shibasis.reaktor.core.framework.Dispatch"]},{"name":"object Feature : DependencyModule","description":"dev.shibasis.reaktor.core.framework.Feature","location":"reaktor-core/dev.shibasis.reaktor.core.framework/-feature/index.html","searchKeys":["Feature","object Feature : DependencyModule","dev.shibasis.reaktor.core.framework.Feature"]},{"name":"object Permission","description":"dev.shibasis.reaktor.core.adapters.Permission","location":"reaktor-core/dev.shibasis.reaktor.core.adapters/-permission/index.html","searchKeys":["Permission","object Permission","dev.shibasis.reaktor.core.adapters.Permission"]},{"name":"object Platform","description":"dev.shibasis.reaktor.core.framework.Platform","location":"reaktor-core/dev.shibasis.reaktor.core.framework/-platform/index.html","searchKeys":["Platform","object Platform","dev.shibasis.reaktor.core.framework.Platform"]},{"name":"open class Adapter<Controller>(controller: Controller, val scope: CoroutineScope = CoroutineScope(Dispatchers.Main)) : Component","description":"dev.shibasis.reaktor.core.framework.Adapter","location":"reaktor-core/dev.shibasis.reaktor.core.framework/-adapter/index.html","searchKeys":["Adapter","open class Adapter<Controller>(controller: Controller, val scope: CoroutineScope = CoroutineScope(Dispatchers.Main)) : Component","dev.shibasis.reaktor.core.framework.Adapter"]},{"name":"open external class AbortController","description":"dev.shibasis.reaktor.core.server.cloudflare.AbortController","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-abort-controller/index.html","searchKeys":["AbortController","open external class AbortController","dev.shibasis.reaktor.core.server.cloudflare.AbortController"]},{"name":"open external class AbortSignal : EventTarget__0","description":"dev.shibasis.reaktor.core.server.cloudflare.AbortSignal","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-abort-signal/index.html","searchKeys":["AbortSignal","open external class AbortSignal : EventTarget__0","dev.shibasis.reaktor.core.server.cloudflare.AbortSignal"]},{"name":"open external class Blob(bits: Array<Any> = definedExternally, options: BlobOptions = definedExternally)","description":"dev.shibasis.reaktor.core.server.cloudflare.Blob","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-blob/index.html","searchKeys":["Blob","open external class Blob(bits: Array<Any> = definedExternally, options: BlobOptions = definedExternally)","dev.shibasis.reaktor.core.server.cloudflare.Blob"]},{"name":"open external class Body","description":"dev.shibasis.reaktor.core.server.cloudflare.Body","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-body/index.html","searchKeys":["Body","open external class Body","dev.shibasis.reaktor.core.server.cloudflare.Body"]},{"name":"open external class ByteLengthQueuingStrategy(init: QueuingStrategyInit) : QueuingStrategy<ArrayBufferView> ","description":"dev.shibasis.reaktor.core.server.cloudflare.ByteLengthQueuingStrategy","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-byte-length-queuing-strategy/index.html","searchKeys":["ByteLengthQueuingStrategy","open external class ByteLengthQueuingStrategy(init: QueuingStrategyInit) : QueuingStrategy<ArrayBufferView> ","dev.shibasis.reaktor.core.server.cloudflare.ByteLengthQueuingStrategy"]},{"name":"open external class Cache","description":"dev.shibasis.reaktor.core.server.cloudflare.Cache","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-cache/index.html","searchKeys":["Cache","open external class Cache","dev.shibasis.reaktor.core.server.cloudflare.Cache"]},{"name":"open external class CacheStorage","description":"dev.shibasis.reaktor.core.server.cloudflare.CacheStorage","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-cache-storage/index.html","searchKeys":["CacheStorage","open external class CacheStorage","dev.shibasis.reaktor.core.server.cloudflare.CacheStorage"]},{"name":"open external class CloseEvent(type: String, initializer: CloseEventInit) : Event","description":"dev.shibasis.reaktor.core.server.cloudflare.CloseEvent","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-close-event/index.html","searchKeys":["CloseEvent","open external class CloseEvent(type: String, initializer: CloseEventInit) : Event","dev.shibasis.reaktor.core.server.cloudflare.CloseEvent"]},{"name":"open external class CompressionStream(format: String) : TransformStream<dynamic, Uint8Array> ","description":"dev.shibasis.reaktor.core.server.cloudflare.CompressionStream","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-compression-stream/index.html","searchKeys":["CompressionStream","open external class CompressionStream(format: String) : TransformStream<dynamic, Uint8Array> ","dev.shibasis.reaktor.core.server.cloudflare.CompressionStream"]},{"name":"open external class CountQueuingStrategy(init: QueuingStrategyInit) : QueuingStrategy__0","description":"dev.shibasis.reaktor.core.server.cloudflare.CountQueuingStrategy","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-count-queuing-strategy/index.html","searchKeys":["CountQueuingStrategy","open external class CountQueuingStrategy(init: QueuingStrategyInit) : QueuingStrategy__0","dev.shibasis.reaktor.core.server.cloudflare.CountQueuingStrategy"]},{"name":"open external class Crypto","description":"dev.shibasis.reaktor.core.server.cloudflare.Crypto","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-crypto/index.html","searchKeys":["Crypto","open external class Crypto","dev.shibasis.reaktor.core.server.cloudflare.Crypto"]},{"name":"open external class CryptoKey","description":"dev.shibasis.reaktor.core.server.cloudflare.CryptoKey","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-crypto-key/index.html","searchKeys":["CryptoKey","open external class CryptoKey","dev.shibasis.reaktor.core.server.cloudflare.CryptoKey"]},{"name":"open external class D1Database","description":"dev.shibasis.reaktor.core.server.cloudflare.D1Database","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-d1-database/index.html","searchKeys":["D1Database","open external class D1Database","dev.shibasis.reaktor.core.server.cloudflare.D1Database"]},{"name":"open external class D1PreparedStatement","description":"dev.shibasis.reaktor.core.server.cloudflare.D1PreparedStatement","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-d1-prepared-statement/index.html","searchKeys":["D1PreparedStatement","open external class D1PreparedStatement","dev.shibasis.reaktor.core.server.cloudflare.D1PreparedStatement"]},{"name":"open external class DecompressionStream(format: String) : TransformStream<dynamic, Uint8Array> ","description":"dev.shibasis.reaktor.core.server.cloudflare.DecompressionStream","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-decompression-stream/index.html","searchKeys":["DecompressionStream","open external class DecompressionStream(format: String) : TransformStream<dynamic, Uint8Array> ","dev.shibasis.reaktor.core.server.cloudflare.DecompressionStream"]},{"name":"open external class DigestStream : WritableStream<dynamic> ","description":"dev.shibasis.reaktor.core.server.cloudflare.DigestStream","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-digest-stream/index.html","searchKeys":["DigestStream","open external class DigestStream : WritableStream<dynamic> ","dev.shibasis.reaktor.core.server.cloudflare.DigestStream"]},{"name":"open external class EmailEvent(type: String, init: EventInit = definedExternally) : ExtendableEvent","description":"dev.shibasis.reaktor.core.server.cloudflare.EmailEvent","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-email-event/index.html","searchKeys":["EmailEvent","open external class EmailEvent(type: String, init: EventInit = definedExternally) : ExtendableEvent","dev.shibasis.reaktor.core.server.cloudflare.EmailEvent"]},{"name":"open external class Event(type: String, init: EventInit = definedExternally)","description":"dev.shibasis.reaktor.core.server.cloudflare.Event","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-event/index.html","searchKeys":["Event","open external class Event(type: String, init: EventInit = definedExternally)","dev.shibasis.reaktor.core.server.cloudflare.Event"]},{"name":"open external class EventTarget<EventMap : Record<String, Event>>","description":"dev.shibasis.reaktor.core.server.cloudflare.EventTarget","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-event-target/index.html","searchKeys":["EventTarget","open external class EventTarget<EventMap : Record<String, Event>>","dev.shibasis.reaktor.core.server.cloudflare.EventTarget"]},{"name":"open external class EventTarget__0 : EventTarget<Record<String, Event>> ","description":"dev.shibasis.reaktor.core.server.cloudflare.EventTarget__0","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-event-target__0/index.html","searchKeys":["EventTarget__0","open external class EventTarget__0 : EventTarget<Record<String, Event>> ","dev.shibasis.reaktor.core.server.cloudflare.EventTarget__0"]},{"name":"open external class ExtendableEvent(type: String, init: EventInit = definedExternally) : Event","description":"dev.shibasis.reaktor.core.server.cloudflare.ExtendableEvent","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-extendable-event/index.html","searchKeys":["ExtendableEvent","open external class ExtendableEvent(type: String, init: EventInit = definedExternally) : Event","dev.shibasis.reaktor.core.server.cloudflare.ExtendableEvent"]},{"name":"open external class FetchEvent(type: String, init: EventInit = definedExternally) : ExtendableEvent","description":"dev.shibasis.reaktor.core.server.cloudflare.FetchEvent","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-fetch-event/index.html","searchKeys":["FetchEvent","open external class FetchEvent(type: String, init: EventInit = definedExternally) : ExtendableEvent","dev.shibasis.reaktor.core.server.cloudflare.FetchEvent"]},{"name":"open external class Fetcher","description":"dev.shibasis.reaktor.core.server.cloudflare.Fetcher","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-fetcher/index.html","searchKeys":["Fetcher","open external class Fetcher","dev.shibasis.reaktor.core.server.cloudflare.Fetcher"]},{"name":"open external class FixedLengthStream : IdentityTransformStream","description":"dev.shibasis.reaktor.core.server.cloudflare.FixedLengthStream","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-fixed-length-stream/index.html","searchKeys":["FixedLengthStream","open external class FixedLengthStream : IdentityTransformStream","dev.shibasis.reaktor.core.server.cloudflare.FixedLengthStream"]},{"name":"open external class FormData","description":"dev.shibasis.reaktor.core.server.cloudflare.FormData","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-form-data/index.html","searchKeys":["FormData","open external class FormData","dev.shibasis.reaktor.core.server.cloudflare.FormData"]},{"name":"open external class HTMLRewriter","description":"dev.shibasis.reaktor.core.server.cloudflare.HTMLRewriter","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-h-t-m-l-rewriter/index.html","searchKeys":["HTMLRewriter","open external class HTMLRewriter","dev.shibasis.reaktor.core.server.cloudflare.HTMLRewriter"]},{"name":"open external class Headers","description":"dev.shibasis.reaktor.core.server.cloudflare.Headers","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-headers/index.html","searchKeys":["Headers","open external class Headers","dev.shibasis.reaktor.core.server.cloudflare.Headers"]},{"name":"open external class IdentityTransformStream(queuingStrategy: IdentityTransformStreamQueuingStrategy = definedExternally) : TransformStream<dynamic, Uint8Array> ","description":"dev.shibasis.reaktor.core.server.cloudflare.IdentityTransformStream","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-identity-transform-stream/index.html","searchKeys":["IdentityTransformStream","open external class IdentityTransformStream(queuingStrategy: IdentityTransformStreamQueuingStrategy = definedExternally) : TransformStream<dynamic, Uint8Array> ","dev.shibasis.reaktor.core.server.cloudflare.IdentityTransformStream"]},{"name":"open external class MessageEvent(type: String, initializer: MessageEventInit) : Event","description":"dev.shibasis.reaktor.core.server.cloudflare.MessageEvent","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-message-event/index.html","searchKeys":["MessageEvent","open external class MessageEvent(type: String, initializer: MessageEventInit) : Event","dev.shibasis.reaktor.core.server.cloudflare.MessageEvent"]},{"name":"open external class PromiseRejectionEvent(type: String, init: EventInit = definedExternally) : Event","description":"dev.shibasis.reaktor.core.server.cloudflare.PromiseRejectionEvent","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-promise-rejection-event/index.html","searchKeys":["PromiseRejectionEvent","open external class PromiseRejectionEvent(type: String, init: EventInit = definedExternally) : Event","dev.shibasis.reaktor.core.server.cloudflare.PromiseRejectionEvent"]},{"name":"open external class R2Bucket","description":"dev.shibasis.reaktor.core.server.cloudflare.R2Bucket","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-r2-bucket/index.html","searchKeys":["R2Bucket","open external class R2Bucket","dev.shibasis.reaktor.core.server.cloudflare.R2Bucket"]},{"name":"open external class R2Object","description":"dev.shibasis.reaktor.core.server.cloudflare.R2Object","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-r2-object/index.html","searchKeys":["R2Object","open external class R2Object","dev.shibasis.reaktor.core.server.cloudflare.R2Object"]},{"name":"open external class ReadableStreamBYOBReader(stream: ReadableStream<Uint8Array>)","description":"dev.shibasis.reaktor.core.server.cloudflare.ReadableStreamBYOBReader","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-readable-stream-b-y-o-b-reader/index.html","searchKeys":["ReadableStreamBYOBReader","open external class ReadableStreamBYOBReader(stream: ReadableStream<Uint8Array>)","dev.shibasis.reaktor.core.server.cloudflare.ReadableStreamBYOBReader"]},{"name":"open external class ReadableStreamDefaultReader<R>(stream: ReadableStream<Uint8Array>)","description":"dev.shibasis.reaktor.core.server.cloudflare.ReadableStreamDefaultReader","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-readable-stream-default-reader/index.html","searchKeys":["ReadableStreamDefaultReader","open external class ReadableStreamDefaultReader<R>(stream: ReadableStream<Uint8Array>)","dev.shibasis.reaktor.core.server.cloudflare.ReadableStreamDefaultReader"]},{"name":"open external class Request<CfHostMetadata, Cf> : Body","description":"dev.shibasis.reaktor.core.server.cloudflare.Request","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-request/index.html","searchKeys":["Request","open external class Request<CfHostMetadata, Cf> : Body","dev.shibasis.reaktor.core.server.cloudflare.Request"]},{"name":"open external class Request__0 : Request<Any, dynamic> ","description":"dev.shibasis.reaktor.core.server.cloudflare.Request__0","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-request__0/index.html","searchKeys":["Request__0","open external class Request__0 : Request<Any, dynamic> ","dev.shibasis.reaktor.core.server.cloudflare.Request__0"]},{"name":"open external class Response : Body","description":"dev.shibasis.reaktor.core.server.cloudflare.Response","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-response/index.html","searchKeys":["Response","open external class Response : Body","dev.shibasis.reaktor.core.server.cloudflare.Response"]},{"name":"open external class ScheduledEvent(type: String, init: EventInit = definedExternally) : ExtendableEvent","description":"dev.shibasis.reaktor.core.server.cloudflare.ScheduledEvent","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-scheduled-event/index.html","searchKeys":["ScheduledEvent","open external class ScheduledEvent(type: String, init: EventInit = definedExternally) : ExtendableEvent","dev.shibasis.reaktor.core.server.cloudflare.ScheduledEvent"]},{"name":"open external class SubtleCrypto","description":"dev.shibasis.reaktor.core.server.cloudflare.SubtleCrypto","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-subtle-crypto/index.html","searchKeys":["SubtleCrypto","open external class SubtleCrypto","dev.shibasis.reaktor.core.server.cloudflare.SubtleCrypto"]},{"name":"open external class TailEvent(type: String, init: EventInit = definedExternally) : ExtendableEvent","description":"dev.shibasis.reaktor.core.server.cloudflare.TailEvent","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-tail-event/index.html","searchKeys":["TailEvent","open external class TailEvent(type: String, init: EventInit = definedExternally) : ExtendableEvent","dev.shibasis.reaktor.core.server.cloudflare.TailEvent"]},{"name":"open external class TextDecoder(decoder: String = definedExternally, options: TextDecoderConstructorOptions = definedExternally)","description":"dev.shibasis.reaktor.core.server.cloudflare.TextDecoder","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-text-decoder/index.html","searchKeys":["TextDecoder","open external class TextDecoder(decoder: String = definedExternally, options: TextDecoderConstructorOptions = definedExternally)","dev.shibasis.reaktor.core.server.cloudflare.TextDecoder"]},{"name":"open external class TextDecoderStream(label: String = definedExternally, options: TextDecoderStreamTextDecoderStreamInit = definedExternally) : TransformStream<dynamic, String> ","description":"dev.shibasis.reaktor.core.server.cloudflare.TextDecoderStream","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-text-decoder-stream/index.html","searchKeys":["TextDecoderStream","open external class TextDecoderStream(label: String = definedExternally, options: TextDecoderStreamTextDecoderStreamInit = definedExternally) : TransformStream<dynamic, String> ","dev.shibasis.reaktor.core.server.cloudflare.TextDecoderStream"]},{"name":"open external class TextEncoder","description":"dev.shibasis.reaktor.core.server.cloudflare.TextEncoder","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-text-encoder/index.html","searchKeys":["TextEncoder","open external class TextEncoder","dev.shibasis.reaktor.core.server.cloudflare.TextEncoder"]},{"name":"open external class TextEncoderStream : TransformStream<String, Uint8Array> ","description":"dev.shibasis.reaktor.core.server.cloudflare.TextEncoderStream","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-text-encoder-stream/index.html","searchKeys":["TextEncoderStream","open external class TextEncoderStream : TransformStream<String, Uint8Array> ","dev.shibasis.reaktor.core.server.cloudflare.TextEncoderStream"]},{"name":"open external class TransformStream<I, O>(transformer: Transformer<I, O> = definedExternally, writableStrategy: QueuingStrategy<I> = definedExternally, readableStrategy: QueuingStrategy<O> = definedExternally)","description":"dev.shibasis.reaktor.core.server.cloudflare.TransformStream","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-transform-stream/index.html","searchKeys":["TransformStream","open external class TransformStream<I, O>(transformer: Transformer<I, O> = definedExternally, writableStrategy: QueuingStrategy<I> = definedExternally, readableStrategy: QueuingStrategy<O> = definedExternally)","dev.shibasis.reaktor.core.server.cloudflare.TransformStream"]},{"name":"open external class URL","description":"dev.shibasis.reaktor.core.server.cloudflare.URL","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-u-r-l/index.html","searchKeys":["URL","open external class URL","dev.shibasis.reaktor.core.server.cloudflare.URL"]},{"name":"open external class URLPattern","description":"dev.shibasis.reaktor.core.server.cloudflare.URLPattern","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-u-r-l-pattern/index.html","searchKeys":["URLPattern","open external class URLPattern","dev.shibasis.reaktor.core.server.cloudflare.URLPattern"]},{"name":"open external class URLSearchParams","description":"dev.shibasis.reaktor.core.server.cloudflare.URLSearchParams","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-u-r-l-search-params/index.html","searchKeys":["URLSearchParams","open external class URLSearchParams","dev.shibasis.reaktor.core.server.cloudflare.URLSearchParams"]},{"name":"open external class WebSocket : EventTarget<Record<String, Event>> ","description":"dev.shibasis.reaktor.core.server.cloudflare.WebSocket","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-web-socket/index.html","searchKeys":["WebSocket","open external class WebSocket : EventTarget<Record<String, Event>> ","dev.shibasis.reaktor.core.server.cloudflare.WebSocket"]},{"name":"open external class WebSocketRequestResponsePair(request: String, response: String)","description":"dev.shibasis.reaktor.core.server.cloudflare.WebSocketRequestResponsePair","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-web-socket-request-response-pair/index.html","searchKeys":["WebSocketRequestResponsePair","open external class WebSocketRequestResponsePair(request: String, response: String)","dev.shibasis.reaktor.core.server.cloudflare.WebSocketRequestResponsePair"]},{"name":"open external class WorkerGlobalScope : EventTarget<Record<String, Event>> ","description":"dev.shibasis.reaktor.core.server.cloudflare.WorkerGlobalScope","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-worker-global-scope/index.html","searchKeys":["WorkerGlobalScope","open external class WorkerGlobalScope : EventTarget<Record<String, Event>> ","dev.shibasis.reaktor.core.server.cloudflare.WorkerGlobalScope"]},{"name":"open external class WritableStream<W>(underlyingSink: UnderlyingSink__0 = definedExternally, queuingStrategy: QueuingStrategy__0 = definedExternally)","description":"dev.shibasis.reaktor.core.server.cloudflare.WritableStream","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-writable-stream/index.html","searchKeys":["WritableStream","open external class WritableStream<W>(underlyingSink: UnderlyingSink__0 = definedExternally, queuingStrategy: QueuingStrategy__0 = definedExternally)","dev.shibasis.reaktor.core.server.cloudflare.WritableStream"]},{"name":"open external class WritableStreamDefaultWriter<W>(stream: WritableStream__0)","description":"dev.shibasis.reaktor.core.server.cloudflare.WritableStreamDefaultWriter","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-writable-stream-default-writer/index.html","searchKeys":["WritableStreamDefaultWriter","open external class WritableStreamDefaultWriter<W>(stream: WritableStream__0)","dev.shibasis.reaktor.core.server.cloudflare.WritableStreamDefaultWriter"]},{"name":"open external class WritableStream__0 : WritableStream<Any> ","description":"dev.shibasis.reaktor.core.server.cloudflare.WritableStream__0","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-writable-stream__0/index.html","searchKeys":["WritableStream__0","open external class WritableStream__0 : WritableStream<Any> ","dev.shibasis.reaktor.core.server.cloudflare.WritableStream__0"]},{"name":"open fun <T : Any> first(): Promise<Record<String, T>?>","description":"dev.shibasis.reaktor.core.server.cloudflare.D1PreparedStatement.first","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-d1-prepared-statement/first.html","searchKeys":["first","open fun <T : Any> first(): Promise<Record<String, T>?>","dev.shibasis.reaktor.core.server.cloudflare.D1PreparedStatement.first"]},{"name":"open fun <T : ArrayBufferView> read(view: T): Promise<dynamic>","description":"dev.shibasis.reaktor.core.server.cloudflare.ReadableStreamBYOBReader.read","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-readable-stream-b-y-o-b-reader/read.html","searchKeys":["read","open fun <T : ArrayBufferView> read(view: T): Promise<dynamic>","dev.shibasis.reaktor.core.server.cloudflare.ReadableStreamBYOBReader.read"]},{"name":"open fun <T : ArrayBufferView> readAtLeast(minElements: Number, view: T): Promise<dynamic>","description":"dev.shibasis.reaktor.core.server.cloudflare.ReadableStreamBYOBReader.readAtLeast","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-readable-stream-b-y-o-b-reader/read-at-least.html","searchKeys":["readAtLeast","open fun <T : ArrayBufferView> readAtLeast(minElements: Number, view: T): Promise<dynamic>","dev.shibasis.reaktor.core.server.cloudflare.ReadableStreamBYOBReader.readAtLeast"]},{"name":"open fun <T> all(): Promise<D1Result<Array<T>>>","description":"dev.shibasis.reaktor.core.server.cloudflare.D1PreparedStatement.all","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-d1-prepared-statement/all.html","searchKeys":["all","open fun <T> all(): Promise<D1Result<Array<T>>>","dev.shibasis.reaktor.core.server.cloudflare.D1PreparedStatement.all"]},{"name":"open fun <T> batch(statements: Array<D1PreparedStatement>): Promise<Array<D1Result<T>>>","description":"dev.shibasis.reaktor.core.server.cloudflare.D1Database.batch","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-d1-database/batch.html","searchKeys":["batch","open fun <T> batch(statements: Array<D1PreparedStatement>): Promise<Array<D1Result<T>>>","dev.shibasis.reaktor.core.server.cloudflare.D1Database.batch"]},{"name":"open fun <T> first(colName: String): Promise<T?>","description":"dev.shibasis.reaktor.core.server.cloudflare.D1PreparedStatement.first","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-d1-prepared-statement/first.html","searchKeys":["first","open fun <T> first(colName: String): Promise<T?>","dev.shibasis.reaktor.core.server.cloudflare.D1PreparedStatement.first"]},{"name":"open fun <T> getRandomValues(buffer: T): T","description":"dev.shibasis.reaktor.core.server.cloudflare.Crypto.getRandomValues","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-crypto/get-random-values.html","searchKeys":["getRandomValues","open fun <T> getRandomValues(buffer: T): T","dev.shibasis.reaktor.core.server.cloudflare.Crypto.getRandomValues"]},{"name":"open fun <T> json(): Promise<T>","description":"dev.shibasis.reaktor.core.server.cloudflare.Body.json","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-body/json.html","searchKeys":["json","open fun <T> json(): Promise<T>","dev.shibasis.reaktor.core.server.cloudflare.Body.json"]},{"name":"open fun <T> raw(): Promise<Array<T>>","description":"dev.shibasis.reaktor.core.server.cloudflare.D1PreparedStatement.raw","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-d1-prepared-statement/raw.html","searchKeys":["raw","open fun <T> raw(): Promise<Array<T>>","dev.shibasis.reaktor.core.server.cloudflare.D1PreparedStatement.raw"]},{"name":"open fun <T> run(): Promise<D1Result<T>>","description":"dev.shibasis.reaktor.core.server.cloudflare.D1PreparedStatement.run","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-d1-prepared-statement/run.html","searchKeys":["run","open fun <T> run(): Promise<D1Result<T>>","dev.shibasis.reaktor.core.server.cloudflare.D1PreparedStatement.run"]},{"name":"open fun <This> forEach(callback: (self: This, value: String, key: String, parent: Headers) -> Unit, thisArg: This = definedExternally)","description":"dev.shibasis.reaktor.core.server.cloudflare.Headers.forEach","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-headers/for-each.html","searchKeys":["forEach","open fun <This> forEach(callback: (self: This, value: String, key: String, parent: Headers) -> Unit, thisArg: This = definedExternally)","dev.shibasis.reaktor.core.server.cloudflare.Headers.forEach"]},{"name":"open fun <Type : Any> addEventListener(type: Type, handler: EventListener<Any>)","description":"dev.shibasis.reaktor.core.server.cloudflare.EventTarget.addEventListener","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-event-target/add-event-listener.html","searchKeys":["addEventListener","open fun <Type : Any> addEventListener(type: Type, handler: EventListener<Any>)","dev.shibasis.reaktor.core.server.cloudflare.EventTarget.addEventListener"]},{"name":"open fun <Type : Any> addEventListener(type: Type, handler: EventListener<Any>, options: Boolean = definedExternally)","description":"dev.shibasis.reaktor.core.server.cloudflare.EventTarget.addEventListener","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-event-target/add-event-listener.html","searchKeys":["addEventListener","open fun <Type : Any> addEventListener(type: Type, handler: EventListener<Any>, options: Boolean = definedExternally)","dev.shibasis.reaktor.core.server.cloudflare.EventTarget.addEventListener"]},{"name":"open fun <Type : Any> addEventListener(type: Type, handler: EventListener<Any>, options: EventTargetAddEventListenerOptions = definedExternally)","description":"dev.shibasis.reaktor.core.server.cloudflare.EventTarget.addEventListener","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-event-target/add-event-listener.html","searchKeys":["addEventListener","open fun <Type : Any> addEventListener(type: Type, handler: EventListener<Any>, options: EventTargetAddEventListenerOptions = definedExternally)","dev.shibasis.reaktor.core.server.cloudflare.EventTarget.addEventListener"]},{"name":"open fun <Type : Any> addEventListener(type: Type, handler: EventListenerObject<Event>)","description":"dev.shibasis.reaktor.core.server.cloudflare.EventTarget.addEventListener","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-event-target/add-event-listener.html","searchKeys":["addEventListener","open fun <Type : Any> addEventListener(type: Type, handler: EventListenerObject<Event>)","dev.shibasis.reaktor.core.server.cloudflare.EventTarget.addEventListener"]},{"name":"open fun <Type : Any> addEventListener(type: Type, handler: EventListenerObject<Event>, options: Boolean = definedExternally)","description":"dev.shibasis.reaktor.core.server.cloudflare.EventTarget.addEventListener","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-event-target/add-event-listener.html","searchKeys":["addEventListener","open fun <Type : Any> addEventListener(type: Type, handler: EventListenerObject<Event>, options: Boolean = definedExternally)","dev.shibasis.reaktor.core.server.cloudflare.EventTarget.addEventListener"]},{"name":"open fun <Type : Any> addEventListener(type: Type, handler: EventListenerObject<Event>, options: EventTargetAddEventListenerOptions = definedExternally)","description":"dev.shibasis.reaktor.core.server.cloudflare.EventTarget.addEventListener","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-event-target/add-event-listener.html","searchKeys":["addEventListener","open fun <Type : Any> addEventListener(type: Type, handler: EventListenerObject<Event>, options: EventTargetAddEventListenerOptions = definedExternally)","dev.shibasis.reaktor.core.server.cloudflare.EventTarget.addEventListener"]},{"name":"open fun <Type : Any> removeEventListener(type: Type, handler: EventListener<Any>)","description":"dev.shibasis.reaktor.core.server.cloudflare.EventTarget.removeEventListener","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-event-target/remove-event-listener.html","searchKeys":["removeEventListener","open fun <Type : Any> removeEventListener(type: Type, handler: EventListener<Any>)","dev.shibasis.reaktor.core.server.cloudflare.EventTarget.removeEventListener"]},{"name":"open fun <Type : Any> removeEventListener(type: Type, handler: EventListener<Any>, options: Boolean = definedExternally)","description":"dev.shibasis.reaktor.core.server.cloudflare.EventTarget.removeEventListener","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-event-target/remove-event-listener.html","searchKeys":["removeEventListener","open fun <Type : Any> removeEventListener(type: Type, handler: EventListener<Any>, options: Boolean = definedExternally)","dev.shibasis.reaktor.core.server.cloudflare.EventTarget.removeEventListener"]},{"name":"open fun <Type : Any> removeEventListener(type: Type, handler: EventListener<Any>, options: EventTargetEventListenerOptions = definedExternally)","description":"dev.shibasis.reaktor.core.server.cloudflare.EventTarget.removeEventListener","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-event-target/remove-event-listener.html","searchKeys":["removeEventListener","open fun <Type : Any> removeEventListener(type: Type, handler: EventListener<Any>, options: EventTargetEventListenerOptions = definedExternally)","dev.shibasis.reaktor.core.server.cloudflare.EventTarget.removeEventListener"]},{"name":"open fun <Type : Any> removeEventListener(type: Type, handler: EventListenerObject<Event>)","description":"dev.shibasis.reaktor.core.server.cloudflare.EventTarget.removeEventListener","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-event-target/remove-event-listener.html","searchKeys":["removeEventListener","open fun <Type : Any> removeEventListener(type: Type, handler: EventListenerObject<Event>)","dev.shibasis.reaktor.core.server.cloudflare.EventTarget.removeEventListener"]},{"name":"open fun <Type : Any> removeEventListener(type: Type, handler: EventListenerObject<Event>, options: Boolean = definedExternally)","description":"dev.shibasis.reaktor.core.server.cloudflare.EventTarget.removeEventListener","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-event-target/remove-event-listener.html","searchKeys":["removeEventListener","open fun <Type : Any> removeEventListener(type: Type, handler: EventListenerObject<Event>, options: Boolean = definedExternally)","dev.shibasis.reaktor.core.server.cloudflare.EventTarget.removeEventListener"]},{"name":"open fun <Type : Any> removeEventListener(type: Type, handler: EventListenerObject<Event>, options: EventTargetEventListenerOptions = definedExternally)","description":"dev.shibasis.reaktor.core.server.cloudflare.EventTarget.removeEventListener","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-event-target/remove-event-listener.html","searchKeys":["removeEventListener","open fun <Type : Any> removeEventListener(type: Type, handler: EventListenerObject<Event>, options: EventTargetEventListenerOptions = definedExternally)","dev.shibasis.reaktor.core.server.cloudflare.EventTarget.removeEventListener"]},{"name":"open fun abort(reason: Any = definedExternally)","description":"dev.shibasis.reaktor.core.server.cloudflare.AbortController.abort","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-abort-controller/abort.html","searchKeys":["abort","open fun abort(reason: Any = definedExternally)","dev.shibasis.reaktor.core.server.cloudflare.AbortController.abort"]},{"name":"open fun abort(reason: Any = definedExternally): Promise<Unit>","description":"dev.shibasis.reaktor.core.server.cloudflare.WritableStream.abort","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-writable-stream/abort.html","searchKeys":["abort","open fun abort(reason: Any = definedExternally): Promise<Unit>","dev.shibasis.reaktor.core.server.cloudflare.WritableStream.abort"]},{"name":"open fun abort(reason: Any = definedExternally): Promise<Unit>","description":"dev.shibasis.reaktor.core.server.cloudflare.WritableStreamDefaultWriter.abort","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-writable-stream-default-writer/abort.html","searchKeys":["abort","open fun abort(reason: Any = definedExternally): Promise<Unit>","dev.shibasis.reaktor.core.server.cloudflare.WritableStreamDefaultWriter.abort"]},{"name":"open fun accept()","description":"dev.shibasis.reaktor.core.server.cloudflare.WebSocket.accept","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-web-socket/accept.html","searchKeys":["accept","open fun accept()","dev.shibasis.reaktor.core.server.cloudflare.WebSocket.accept"]},{"name":"open fun append(name: String, value: Blob)","description":"dev.shibasis.reaktor.core.server.cloudflare.FormData.append","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-form-data/append.html","searchKeys":["append","open fun append(name: String, value: Blob)","dev.shibasis.reaktor.core.server.cloudflare.FormData.append"]},{"name":"open fun append(name: String, value: Blob, filename: String = definedExternally)","description":"dev.shibasis.reaktor.core.server.cloudflare.FormData.append","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-form-data/append.html","searchKeys":["append","open fun append(name: String, value: Blob, filename: String = definedExternally)","dev.shibasis.reaktor.core.server.cloudflare.FormData.append"]},{"name":"open fun append(name: String, value: String)","description":"dev.shibasis.reaktor.core.server.cloudflare.FormData.append","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-form-data/append.html","searchKeys":["append","open fun append(name: String, value: String)","dev.shibasis.reaktor.core.server.cloudflare.FormData.append"]},{"name":"open fun append(name: String, value: String)","description":"dev.shibasis.reaktor.core.server.cloudflare.Headers.append","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-headers/append.html","searchKeys":["append","open fun append(name: String, value: String)","dev.shibasis.reaktor.core.server.cloudflare.Headers.append"]},{"name":"open fun append(name: String, value: String)","description":"dev.shibasis.reaktor.core.server.cloudflare.URLSearchParams.append","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-u-r-l-search-params/append.html","searchKeys":["append","open fun append(name: String, value: String)","dev.shibasis.reaktor.core.server.cloudflare.URLSearchParams.append"]},{"name":"open fun arrayBuffer(): Promise<ArrayBuffer>","description":"dev.shibasis.reaktor.core.server.cloudflare.Blob.arrayBuffer","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-blob/array-buffer.html","searchKeys":["arrayBuffer","open fun arrayBuffer(): Promise<ArrayBuffer>","dev.shibasis.reaktor.core.server.cloudflare.Blob.arrayBuffer"]},{"name":"open fun arrayBuffer(): Promise<ArrayBuffer>","description":"dev.shibasis.reaktor.core.server.cloudflare.Body.arrayBuffer","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-body/array-buffer.html","searchKeys":["arrayBuffer","open fun arrayBuffer(): Promise<ArrayBuffer>","dev.shibasis.reaktor.core.server.cloudflare.Body.arrayBuffer"]},{"name":"open fun bind(vararg values: Any): D1PreparedStatement","description":"dev.shibasis.reaktor.core.server.cloudflare.D1PreparedStatement.bind","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-d1-prepared-statement/bind.html","searchKeys":["bind","open fun bind(vararg values: Any): D1PreparedStatement","dev.shibasis.reaktor.core.server.cloudflare.D1PreparedStatement.bind"]},{"name":"open fun blob(): Promise<Blob>","description":"dev.shibasis.reaktor.core.server.cloudflare.Body.blob","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-body/blob.html","searchKeys":["blob","open fun blob(): Promise<Blob>","dev.shibasis.reaktor.core.server.cloudflare.Body.blob"]},{"name":"open fun cancel(reason: Any = definedExternally): Promise<Unit>","description":"dev.shibasis.reaktor.core.server.cloudflare.ReadableStreamBYOBReader.cancel","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-readable-stream-b-y-o-b-reader/cancel.html","searchKeys":["cancel","open fun cancel(reason: Any = definedExternally): Promise<Unit>","dev.shibasis.reaktor.core.server.cloudflare.ReadableStreamBYOBReader.cancel"]},{"name":"open fun cancel(reason: Any = definedExternally): Promise<Unit>","description":"dev.shibasis.reaktor.core.server.cloudflare.ReadableStreamDefaultReader.cancel","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-readable-stream-default-reader/cancel.html","searchKeys":["cancel","open fun cancel(reason: Any = definedExternally): Promise<Unit>","dev.shibasis.reaktor.core.server.cloudflare.ReadableStreamDefaultReader.cancel"]},{"name":"open fun clone(): Request<CfHostMetadata, Cf>","description":"dev.shibasis.reaktor.core.server.cloudflare.Request.clone","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-request/clone.html","searchKeys":["clone","open fun clone(): Request<CfHostMetadata, Cf>","dev.shibasis.reaktor.core.server.cloudflare.Request.clone"]},{"name":"open fun clone(): Response","description":"dev.shibasis.reaktor.core.server.cloudflare.Response.clone","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-response/clone.html","searchKeys":["clone","open fun clone(): Response","dev.shibasis.reaktor.core.server.cloudflare.Response.clone"]},{"name":"open fun close(): Promise<Unit>","description":"dev.shibasis.reaktor.core.server.cloudflare.WritableStream.close","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-writable-stream/close.html","searchKeys":["close","open fun close(): Promise<Unit>","dev.shibasis.reaktor.core.server.cloudflare.WritableStream.close"]},{"name":"open fun close(): Promise<Unit>","description":"dev.shibasis.reaktor.core.server.cloudflare.WritableStreamDefaultWriter.close","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-writable-stream-default-writer/close.html","searchKeys":["close","open fun close(): Promise<Unit>","dev.shibasis.reaktor.core.server.cloudflare.WritableStreamDefaultWriter.close"]},{"name":"open fun close(code: Number = definedExternally, reason: String = definedExternally)","description":"dev.shibasis.reaktor.core.server.cloudflare.WebSocket.close","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-web-socket/close.html","searchKeys":["close","open fun close(code: Number = definedExternally, reason: String = definedExternally)","dev.shibasis.reaktor.core.server.cloudflare.WebSocket.close"]},{"name":"open fun composedPath(): Array<EventTarget__0>","description":"dev.shibasis.reaktor.core.server.cloudflare.Event.composedPath","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-event/composed-path.html","searchKeys":["composedPath","open fun composedPath(): Array<EventTarget__0>","dev.shibasis.reaktor.core.server.cloudflare.Event.composedPath"]},{"name":"open fun connect(address: SocketAddress): Socket","description":"dev.shibasis.reaktor.core.server.cloudflare.Fetcher.connect","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-fetcher/connect.html","searchKeys":["connect","open fun connect(address: SocketAddress): Socket","dev.shibasis.reaktor.core.server.cloudflare.Fetcher.connect"]},{"name":"open fun connect(address: SocketAddress, options: SocketOptions = definedExternally): Socket","description":"dev.shibasis.reaktor.core.server.cloudflare.Fetcher.connect","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-fetcher/connect.html","searchKeys":["connect","open fun connect(address: SocketAddress, options: SocketOptions = definedExternally): Socket","dev.shibasis.reaktor.core.server.cloudflare.Fetcher.connect"]},{"name":"open fun connect(address: String): Socket","description":"dev.shibasis.reaktor.core.server.cloudflare.Fetcher.connect","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-fetcher/connect.html","searchKeys":["connect","open fun connect(address: String): Socket","dev.shibasis.reaktor.core.server.cloudflare.Fetcher.connect"]},{"name":"open fun connect(address: String, options: SocketOptions = definedExternally): Socket","description":"dev.shibasis.reaktor.core.server.cloudflare.Fetcher.connect","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-fetcher/connect.html","searchKeys":["connect","open fun connect(address: String, options: SocketOptions = definedExternally): Socket","dev.shibasis.reaktor.core.server.cloudflare.Fetcher.connect"]},{"name":"open fun createMultipartUpload(key: String, options: R2MultipartOptions = definedExternally): Promise<R2MultipartUpload>","description":"dev.shibasis.reaktor.core.server.cloudflare.R2Bucket.createMultipartUpload","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-r2-bucket/create-multipart-upload.html","searchKeys":["createMultipartUpload","open fun createMultipartUpload(key: String, options: R2MultipartOptions = definedExternally): Promise<R2MultipartUpload>","dev.shibasis.reaktor.core.server.cloudflare.R2Bucket.createMultipartUpload"]},{"name":"open fun decode(): String","description":"dev.shibasis.reaktor.core.server.cloudflare.TextDecoder.decode","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-text-decoder/decode.html","searchKeys":["decode","open fun decode(): String","dev.shibasis.reaktor.core.server.cloudflare.TextDecoder.decode"]},{"name":"open fun decode(input: ArrayBuffer = definedExternally): String","description":"dev.shibasis.reaktor.core.server.cloudflare.TextDecoder.decode","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-text-decoder/decode.html","searchKeys":["decode","open fun decode(input: ArrayBuffer = definedExternally): String","dev.shibasis.reaktor.core.server.cloudflare.TextDecoder.decode"]},{"name":"open fun decode(input: ArrayBuffer = definedExternally, options: TextDecoderDecodeOptions = definedExternally): String","description":"dev.shibasis.reaktor.core.server.cloudflare.TextDecoder.decode","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-text-decoder/decode.html","searchKeys":["decode","open fun decode(input: ArrayBuffer = definedExternally, options: TextDecoderDecodeOptions = definedExternally): String","dev.shibasis.reaktor.core.server.cloudflare.TextDecoder.decode"]},{"name":"open fun decode(input: ArrayBufferView = definedExternally): String","description":"dev.shibasis.reaktor.core.server.cloudflare.TextDecoder.decode","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-text-decoder/decode.html","searchKeys":["decode","open fun decode(input: ArrayBufferView = definedExternally): String","dev.shibasis.reaktor.core.server.cloudflare.TextDecoder.decode"]},{"name":"open fun decode(input: ArrayBufferView = definedExternally, options: TextDecoderDecodeOptions = definedExternally): String","description":"dev.shibasis.reaktor.core.server.cloudflare.TextDecoder.decode","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-text-decoder/decode.html","searchKeys":["decode","open fun decode(input: ArrayBufferView = definedExternally, options: TextDecoderDecodeOptions = definedExternally): String","dev.shibasis.reaktor.core.server.cloudflare.TextDecoder.decode"]},{"name":"open fun decrypt(algorithm: String, key: CryptoKey, cipherText: ArrayBuffer): Promise<ArrayBuffer>","description":"dev.shibasis.reaktor.core.server.cloudflare.SubtleCrypto.decrypt","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-subtle-crypto/decrypt.html","searchKeys":["decrypt","open fun decrypt(algorithm: String, key: CryptoKey, cipherText: ArrayBuffer): Promise<ArrayBuffer>","dev.shibasis.reaktor.core.server.cloudflare.SubtleCrypto.decrypt"]},{"name":"open fun decrypt(algorithm: String, key: CryptoKey, cipherText: ArrayBufferView): Promise<ArrayBuffer>","description":"dev.shibasis.reaktor.core.server.cloudflare.SubtleCrypto.decrypt","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-subtle-crypto/decrypt.html","searchKeys":["decrypt","open fun decrypt(algorithm: String, key: CryptoKey, cipherText: ArrayBufferView): Promise<ArrayBuffer>","dev.shibasis.reaktor.core.server.cloudflare.SubtleCrypto.decrypt"]},{"name":"open fun decrypt(algorithm: SubtleCryptoEncryptAlgorithm, key: CryptoKey, cipherText: ArrayBuffer): Promise<ArrayBuffer>","description":"dev.shibasis.reaktor.core.server.cloudflare.SubtleCrypto.decrypt","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-subtle-crypto/decrypt.html","searchKeys":["decrypt","open fun decrypt(algorithm: SubtleCryptoEncryptAlgorithm, key: CryptoKey, cipherText: ArrayBuffer): Promise<ArrayBuffer>","dev.shibasis.reaktor.core.server.cloudflare.SubtleCrypto.decrypt"]},{"name":"open fun decrypt(algorithm: SubtleCryptoEncryptAlgorithm, key: CryptoKey, cipherText: ArrayBufferView): Promise<ArrayBuffer>","description":"dev.shibasis.reaktor.core.server.cloudflare.SubtleCrypto.decrypt","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-subtle-crypto/decrypt.html","searchKeys":["decrypt","open fun decrypt(algorithm: SubtleCryptoEncryptAlgorithm, key: CryptoKey, cipherText: ArrayBufferView): Promise<ArrayBuffer>","dev.shibasis.reaktor.core.server.cloudflare.SubtleCrypto.decrypt"]},{"name":"open fun delete(keys: Array<String>): Promise<Unit>","description":"dev.shibasis.reaktor.core.server.cloudflare.R2Bucket.delete","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-r2-bucket/delete.html","searchKeys":["delete","open fun delete(keys: Array<String>): Promise<Unit>","dev.shibasis.reaktor.core.server.cloudflare.R2Bucket.delete"]},{"name":"open fun delete(keys: String): Promise<Unit>","description":"dev.shibasis.reaktor.core.server.cloudflare.R2Bucket.delete","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-r2-bucket/delete.html","searchKeys":["delete","open fun delete(keys: String): Promise<Unit>","dev.shibasis.reaktor.core.server.cloudflare.R2Bucket.delete"]},{"name":"open fun delete(name: String)","description":"dev.shibasis.reaktor.core.server.cloudflare.FormData.delete","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-form-data/delete.html","searchKeys":["delete","open fun delete(name: String)","dev.shibasis.reaktor.core.server.cloudflare.FormData.delete"]},{"name":"open fun delete(name: String)","description":"dev.shibasis.reaktor.core.server.cloudflare.Headers.delete","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-headers/delete.html","searchKeys":["delete","open fun delete(name: String)","dev.shibasis.reaktor.core.server.cloudflare.Headers.delete"]},{"name":"open fun delete(name: String)","description":"dev.shibasis.reaktor.core.server.cloudflare.URLSearchParams.delete","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-u-r-l-search-params/delete.html","searchKeys":["delete","open fun delete(name: String)","dev.shibasis.reaktor.core.server.cloudflare.URLSearchParams.delete"]},{"name":"open fun delete(request: Request<Any, Any>): Promise<Boolean>","description":"dev.shibasis.reaktor.core.server.cloudflare.Cache.delete","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-cache/delete.html","searchKeys":["delete","open fun delete(request: Request<Any, Any>): Promise<Boolean>","dev.shibasis.reaktor.core.server.cloudflare.Cache.delete"]},{"name":"open fun delete(request: Request<Any, Any>, options: CacheQueryOptions = definedExternally): Promise<Boolean>","description":"dev.shibasis.reaktor.core.server.cloudflare.Cache.delete","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-cache/delete.html","searchKeys":["delete","open fun delete(request: Request<Any, Any>, options: CacheQueryOptions = definedExternally): Promise<Boolean>","dev.shibasis.reaktor.core.server.cloudflare.Cache.delete"]},{"name":"open fun delete(request: String): Promise<Boolean>","description":"dev.shibasis.reaktor.core.server.cloudflare.Cache.delete","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-cache/delete.html","searchKeys":["delete","open fun delete(request: String): Promise<Boolean>","dev.shibasis.reaktor.core.server.cloudflare.Cache.delete"]},{"name":"open fun delete(request: String, options: CacheQueryOptions = definedExternally): Promise<Boolean>","description":"dev.shibasis.reaktor.core.server.cloudflare.Cache.delete","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-cache/delete.html","searchKeys":["delete","open fun delete(request: String, options: CacheQueryOptions = definedExternally): Promise<Boolean>","dev.shibasis.reaktor.core.server.cloudflare.Cache.delete"]},{"name":"open fun delete(request: URL): Promise<Boolean>","description":"dev.shibasis.reaktor.core.server.cloudflare.Cache.delete","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-cache/delete.html","searchKeys":["delete","open fun delete(request: URL): Promise<Boolean>","dev.shibasis.reaktor.core.server.cloudflare.Cache.delete"]},{"name":"open fun delete(request: URL, options: CacheQueryOptions = definedExternally): Promise<Boolean>","description":"dev.shibasis.reaktor.core.server.cloudflare.Cache.delete","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-cache/delete.html","searchKeys":["delete","open fun delete(request: URL, options: CacheQueryOptions = definedExternally): Promise<Boolean>","dev.shibasis.reaktor.core.server.cloudflare.Cache.delete"]},{"name":"open fun deriveBits(algorithm: String, baseKey: CryptoKey, length: Number?): Promise<ArrayBuffer>","description":"dev.shibasis.reaktor.core.server.cloudflare.SubtleCrypto.deriveBits","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-subtle-crypto/derive-bits.html","searchKeys":["deriveBits","open fun deriveBits(algorithm: String, baseKey: CryptoKey, length: Number?): Promise<ArrayBuffer>","dev.shibasis.reaktor.core.server.cloudflare.SubtleCrypto.deriveBits"]},{"name":"open fun deriveBits(algorithm: SubtleCryptoDeriveKeyAlgorithm, baseKey: CryptoKey, length: Number?): Promise<ArrayBuffer>","description":"dev.shibasis.reaktor.core.server.cloudflare.SubtleCrypto.deriveBits","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-subtle-crypto/derive-bits.html","searchKeys":["deriveBits","open fun deriveBits(algorithm: SubtleCryptoDeriveKeyAlgorithm, baseKey: CryptoKey, length: Number?): Promise<ArrayBuffer>","dev.shibasis.reaktor.core.server.cloudflare.SubtleCrypto.deriveBits"]},{"name":"open fun deriveKey(algorithm: String, baseKey: CryptoKey, derivedKeyAlgorithm: String, extractable: Boolean, keyUsages: Array<String>): Promise<CryptoKey>","description":"dev.shibasis.reaktor.core.server.cloudflare.SubtleCrypto.deriveKey","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-subtle-crypto/derive-key.html","searchKeys":["deriveKey","open fun deriveKey(algorithm: String, baseKey: CryptoKey, derivedKeyAlgorithm: String, extractable: Boolean, keyUsages: Array<String>): Promise<CryptoKey>","dev.shibasis.reaktor.core.server.cloudflare.SubtleCrypto.deriveKey"]},{"name":"open fun deriveKey(algorithm: String, baseKey: CryptoKey, derivedKeyAlgorithm: SubtleCryptoImportKeyAlgorithm, extractable: Boolean, keyUsages: Array<String>): Promise<CryptoKey>","description":"dev.shibasis.reaktor.core.server.cloudflare.SubtleCrypto.deriveKey","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-subtle-crypto/derive-key.html","searchKeys":["deriveKey","open fun deriveKey(algorithm: String, baseKey: CryptoKey, derivedKeyAlgorithm: SubtleCryptoImportKeyAlgorithm, extractable: Boolean, keyUsages: Array<String>): Promise<CryptoKey>","dev.shibasis.reaktor.core.server.cloudflare.SubtleCrypto.deriveKey"]},{"name":"open fun deriveKey(algorithm: SubtleCryptoDeriveKeyAlgorithm, baseKey: CryptoKey, derivedKeyAlgorithm: String, extractable: Boolean, keyUsages: Array<String>): Promise<CryptoKey>","description":"dev.shibasis.reaktor.core.server.cloudflare.SubtleCrypto.deriveKey","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-subtle-crypto/derive-key.html","searchKeys":["deriveKey","open fun deriveKey(algorithm: SubtleCryptoDeriveKeyAlgorithm, baseKey: CryptoKey, derivedKeyAlgorithm: String, extractable: Boolean, keyUsages: Array<String>): Promise<CryptoKey>","dev.shibasis.reaktor.core.server.cloudflare.SubtleCrypto.deriveKey"]},{"name":"open fun deriveKey(algorithm: SubtleCryptoDeriveKeyAlgorithm, baseKey: CryptoKey, derivedKeyAlgorithm: SubtleCryptoImportKeyAlgorithm, extractable: Boolean, keyUsages: Array<String>): Promise<CryptoKey>","description":"dev.shibasis.reaktor.core.server.cloudflare.SubtleCrypto.deriveKey","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-subtle-crypto/derive-key.html","searchKeys":["deriveKey","open fun deriveKey(algorithm: SubtleCryptoDeriveKeyAlgorithm, baseKey: CryptoKey, derivedKeyAlgorithm: SubtleCryptoImportKeyAlgorithm, extractable: Boolean, keyUsages: Array<String>): Promise<CryptoKey>","dev.shibasis.reaktor.core.server.cloudflare.SubtleCrypto.deriveKey"]},{"name":"open fun deserializeAttachment(): Any?","description":"dev.shibasis.reaktor.core.server.cloudflare.WebSocket.deserializeAttachment","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-web-socket/deserialize-attachment.html","searchKeys":["deserializeAttachment","open fun deserializeAttachment(): Any?","dev.shibasis.reaktor.core.server.cloudflare.WebSocket.deserializeAttachment"]},{"name":"open fun digest(algorithm: String, data: ArrayBuffer): Promise<ArrayBuffer>","description":"dev.shibasis.reaktor.core.server.cloudflare.SubtleCrypto.digest","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-subtle-crypto/digest.html","searchKeys":["digest","open fun digest(algorithm: String, data: ArrayBuffer): Promise<ArrayBuffer>","dev.shibasis.reaktor.core.server.cloudflare.SubtleCrypto.digest"]},{"name":"open fun digest(algorithm: String, data: ArrayBufferView): Promise<ArrayBuffer>","description":"dev.shibasis.reaktor.core.server.cloudflare.SubtleCrypto.digest","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-subtle-crypto/digest.html","searchKeys":["digest","open fun digest(algorithm: String, data: ArrayBufferView): Promise<ArrayBuffer>","dev.shibasis.reaktor.core.server.cloudflare.SubtleCrypto.digest"]},{"name":"open fun digest(algorithm: SubtleCryptoHashAlgorithm, data: ArrayBuffer): Promise<ArrayBuffer>","description":"dev.shibasis.reaktor.core.server.cloudflare.SubtleCrypto.digest","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-subtle-crypto/digest.html","searchKeys":["digest","open fun digest(algorithm: SubtleCryptoHashAlgorithm, data: ArrayBuffer): Promise<ArrayBuffer>","dev.shibasis.reaktor.core.server.cloudflare.SubtleCrypto.digest"]},{"name":"open fun digest(algorithm: SubtleCryptoHashAlgorithm, data: ArrayBufferView): Promise<ArrayBuffer>","description":"dev.shibasis.reaktor.core.server.cloudflare.SubtleCrypto.digest","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-subtle-crypto/digest.html","searchKeys":["digest","open fun digest(algorithm: SubtleCryptoHashAlgorithm, data: ArrayBufferView): Promise<ArrayBuffer>","dev.shibasis.reaktor.core.server.cloudflare.SubtleCrypto.digest"]},{"name":"open fun dispatchEvent(event: Any): Boolean","description":"dev.shibasis.reaktor.core.server.cloudflare.EventTarget.dispatchEvent","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-event-target/dispatch-event.html","searchKeys":["dispatchEvent","open fun dispatchEvent(event: Any): Boolean","dev.shibasis.reaktor.core.server.cloudflare.EventTarget.dispatchEvent"]},{"name":"open fun dump(): Promise<ArrayBuffer>","description":"dev.shibasis.reaktor.core.server.cloudflare.D1Database.dump","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-d1-database/dump.html","searchKeys":["dump","open fun dump(): Promise<ArrayBuffer>","dev.shibasis.reaktor.core.server.cloudflare.D1Database.dump"]},{"name":"open fun encode(input: String = definedExternally): Uint8Array","description":"dev.shibasis.reaktor.core.server.cloudflare.TextEncoder.encode","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-text-encoder/encode.html","searchKeys":["encode","open fun encode(input: String = definedExternally): Uint8Array","dev.shibasis.reaktor.core.server.cloudflare.TextEncoder.encode"]},{"name":"open fun encodeInto(input: String, buffer: Uint8Array): TextEncoderEncodeIntoResult","description":"dev.shibasis.reaktor.core.server.cloudflare.TextEncoder.encodeInto","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-text-encoder/encode-into.html","searchKeys":["encodeInto","open fun encodeInto(input: String, buffer: Uint8Array): TextEncoderEncodeIntoResult","dev.shibasis.reaktor.core.server.cloudflare.TextEncoder.encodeInto"]},{"name":"open fun encrypt(algorithm: String, key: CryptoKey, plainText: ArrayBuffer): Promise<ArrayBuffer>","description":"dev.shibasis.reaktor.core.server.cloudflare.SubtleCrypto.encrypt","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-subtle-crypto/encrypt.html","searchKeys":["encrypt","open fun encrypt(algorithm: String, key: CryptoKey, plainText: ArrayBuffer): Promise<ArrayBuffer>","dev.shibasis.reaktor.core.server.cloudflare.SubtleCrypto.encrypt"]},{"name":"open fun encrypt(algorithm: String, key: CryptoKey, plainText: ArrayBufferView): Promise<ArrayBuffer>","description":"dev.shibasis.reaktor.core.server.cloudflare.SubtleCrypto.encrypt","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-subtle-crypto/encrypt.html","searchKeys":["encrypt","open fun encrypt(algorithm: String, key: CryptoKey, plainText: ArrayBufferView): Promise<ArrayBuffer>","dev.shibasis.reaktor.core.server.cloudflare.SubtleCrypto.encrypt"]},{"name":"open fun encrypt(algorithm: SubtleCryptoEncryptAlgorithm, key: CryptoKey, plainText: ArrayBuffer): Promise<ArrayBuffer>","description":"dev.shibasis.reaktor.core.server.cloudflare.SubtleCrypto.encrypt","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-subtle-crypto/encrypt.html","searchKeys":["encrypt","open fun encrypt(algorithm: SubtleCryptoEncryptAlgorithm, key: CryptoKey, plainText: ArrayBuffer): Promise<ArrayBuffer>","dev.shibasis.reaktor.core.server.cloudflare.SubtleCrypto.encrypt"]},{"name":"open fun encrypt(algorithm: SubtleCryptoEncryptAlgorithm, key: CryptoKey, plainText: ArrayBufferView): Promise<ArrayBuffer>","description":"dev.shibasis.reaktor.core.server.cloudflare.SubtleCrypto.encrypt","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-subtle-crypto/encrypt.html","searchKeys":["encrypt","open fun encrypt(algorithm: SubtleCryptoEncryptAlgorithm, key: CryptoKey, plainText: ArrayBufferView): Promise<ArrayBuffer>","dev.shibasis.reaktor.core.server.cloudflare.SubtleCrypto.encrypt"]},{"name":"open fun entries(): Array<dynamic>","description":"dev.shibasis.reaktor.core.server.cloudflare.FormData.entries","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-form-data/entries.html","searchKeys":["entries","open fun entries(): Array<dynamic>","dev.shibasis.reaktor.core.server.cloudflare.FormData.entries"]},{"name":"open fun entries(): JsIterable<dynamic>","description":"dev.shibasis.reaktor.core.server.cloudflare.Headers.entries","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-headers/entries.html","searchKeys":["entries","open fun entries(): JsIterable<dynamic>","dev.shibasis.reaktor.core.server.cloudflare.Headers.entries"]},{"name":"open fun entries(): JsIterable<dynamic>","description":"dev.shibasis.reaktor.core.server.cloudflare.URLSearchParams.entries","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-u-r-l-search-params/entries.html","searchKeys":["entries","open fun entries(): JsIterable<dynamic>","dev.shibasis.reaktor.core.server.cloudflare.URLSearchParams.entries"]},{"name":"open fun exec(): URLPatternURLPatternResult?","description":"dev.shibasis.reaktor.core.server.cloudflare.URLPattern.exec","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-u-r-l-pattern/exec.html","searchKeys":["exec","open fun exec(): URLPatternURLPatternResult?","dev.shibasis.reaktor.core.server.cloudflare.URLPattern.exec"]},{"name":"open fun exec(input: String = definedExternally): URLPatternURLPatternResult?","description":"dev.shibasis.reaktor.core.server.cloudflare.URLPattern.exec","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-u-r-l-pattern/exec.html","searchKeys":["exec","open fun exec(input: String = definedExternally): URLPatternURLPatternResult?","dev.shibasis.reaktor.core.server.cloudflare.URLPattern.exec"]},{"name":"open fun exec(input: String = definedExternally, baseURL: String = definedExternally): URLPatternURLPatternResult?","description":"dev.shibasis.reaktor.core.server.cloudflare.URLPattern.exec","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-u-r-l-pattern/exec.html","searchKeys":["exec","open fun exec(input: String = definedExternally, baseURL: String = definedExternally): URLPatternURLPatternResult?","dev.shibasis.reaktor.core.server.cloudflare.URLPattern.exec"]},{"name":"open fun exec(input: URLPatternURLPatternInit = definedExternally): URLPatternURLPatternResult?","description":"dev.shibasis.reaktor.core.server.cloudflare.URLPattern.exec","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-u-r-l-pattern/exec.html","searchKeys":["exec","open fun exec(input: URLPatternURLPatternInit = definedExternally): URLPatternURLPatternResult?","dev.shibasis.reaktor.core.server.cloudflare.URLPattern.exec"]},{"name":"open fun exec(input: URLPatternURLPatternInit = definedExternally, baseURL: String = definedExternally): URLPatternURLPatternResult?","description":"dev.shibasis.reaktor.core.server.cloudflare.URLPattern.exec","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-u-r-l-pattern/exec.html","searchKeys":["exec","open fun exec(input: URLPatternURLPatternInit = definedExternally, baseURL: String = definedExternally): URLPatternURLPatternResult?","dev.shibasis.reaktor.core.server.cloudflare.URLPattern.exec"]},{"name":"open fun exec(query: String): Promise<D1ExecResult>","description":"dev.shibasis.reaktor.core.server.cloudflare.D1Database.exec","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-d1-database/exec.html","searchKeys":["exec","open fun exec(query: String): Promise<D1ExecResult>","dev.shibasis.reaktor.core.server.cloudflare.D1Database.exec"]},{"name":"open fun exportKey(format: String, key: CryptoKey): Promise<dynamic>","description":"dev.shibasis.reaktor.core.server.cloudflare.SubtleCrypto.exportKey","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-subtle-crypto/export-key.html","searchKeys":["exportKey","open fun exportKey(format: String, key: CryptoKey): Promise<dynamic>","dev.shibasis.reaktor.core.server.cloudflare.SubtleCrypto.exportKey"]},{"name":"open fun fetch(input: Request<Any, Any>): Promise<Response>","description":"dev.shibasis.reaktor.core.server.cloudflare.Fetcher.fetch","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-fetcher/fetch.html","searchKeys":["fetch","open fun fetch(input: Request<Any, Any>): Promise<Response>","dev.shibasis.reaktor.core.server.cloudflare.Fetcher.fetch"]},{"name":"open fun fetch(input: Request<Any, Any>, init: RequestInit__0 = definedExternally): Promise<Response>","description":"dev.shibasis.reaktor.core.server.cloudflare.Fetcher.fetch","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-fetcher/fetch.html","searchKeys":["fetch","open fun fetch(input: Request<Any, Any>, init: RequestInit__0 = definedExternally): Promise<Response>","dev.shibasis.reaktor.core.server.cloudflare.Fetcher.fetch"]},{"name":"open fun fetch(input: String): Promise<Response>","description":"dev.shibasis.reaktor.core.server.cloudflare.Fetcher.fetch","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-fetcher/fetch.html","searchKeys":["fetch","open fun fetch(input: String): Promise<Response>","dev.shibasis.reaktor.core.server.cloudflare.Fetcher.fetch"]},{"name":"open fun fetch(input: String, init: RequestInit__0 = definedExternally): Promise<Response>","description":"dev.shibasis.reaktor.core.server.cloudflare.Fetcher.fetch","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-fetcher/fetch.html","searchKeys":["fetch","open fun fetch(input: String, init: RequestInit__0 = definedExternally): Promise<Response>","dev.shibasis.reaktor.core.server.cloudflare.Fetcher.fetch"]},{"name":"open fun fetch(input: URL): Promise<Response>","description":"dev.shibasis.reaktor.core.server.cloudflare.Fetcher.fetch","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-fetcher/fetch.html","searchKeys":["fetch","open fun fetch(input: URL): Promise<Response>","dev.shibasis.reaktor.core.server.cloudflare.Fetcher.fetch"]},{"name":"open fun fetch(input: URL, init: RequestInit__0 = definedExternally): Promise<Response>","description":"dev.shibasis.reaktor.core.server.cloudflare.Fetcher.fetch","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-fetcher/fetch.html","searchKeys":["fetch","open fun fetch(input: URL, init: RequestInit__0 = definedExternally): Promise<Response>","dev.shibasis.reaktor.core.server.cloudflare.Fetcher.fetch"]},{"name":"open fun formData(): Promise<FormData>","description":"dev.shibasis.reaktor.core.server.cloudflare.Body.formData","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-body/form-data.html","searchKeys":["formData","open fun formData(): Promise<FormData>","dev.shibasis.reaktor.core.server.cloudflare.Body.formData"]},{"name":"open fun generateKey(algorithm: String, extractable: Boolean, keyUsages: Array<String>): Promise<dynamic>","description":"dev.shibasis.reaktor.core.server.cloudflare.SubtleCrypto.generateKey","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-subtle-crypto/generate-key.html","searchKeys":["generateKey","open fun generateKey(algorithm: String, extractable: Boolean, keyUsages: Array<String>): Promise<dynamic>","dev.shibasis.reaktor.core.server.cloudflare.SubtleCrypto.generateKey"]},{"name":"open fun generateKey(algorithm: SubtleCryptoGenerateKeyAlgorithm, extractable: Boolean, keyUsages: Array<String>): Promise<dynamic>","description":"dev.shibasis.reaktor.core.server.cloudflare.SubtleCrypto.generateKey","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-subtle-crypto/generate-key.html","searchKeys":["generateKey","open fun generateKey(algorithm: SubtleCryptoGenerateKeyAlgorithm, extractable: Boolean, keyUsages: Array<String>): Promise<dynamic>","dev.shibasis.reaktor.core.server.cloudflare.SubtleCrypto.generateKey"]},{"name":"open fun get(key: String): Promise<R2ObjectBody?>","description":"dev.shibasis.reaktor.core.server.cloudflare.R2Bucket.get","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-r2-bucket/get.html","searchKeys":["get","open fun get(key: String): Promise<R2ObjectBody?>","dev.shibasis.reaktor.core.server.cloudflare.R2Bucket.get"]},{"name":"open fun get(key: String, options: R2GetOptions): Promise<Any?>","description":"dev.shibasis.reaktor.core.server.cloudflare.R2Bucket.get","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-r2-bucket/get.html","searchKeys":["get","open fun get(key: String, options: R2GetOptions): Promise<Any?>","dev.shibasis.reaktor.core.server.cloudflare.R2Bucket.get"]},{"name":"open fun get(name: String): String?","description":"dev.shibasis.reaktor.core.server.cloudflare.Headers.get","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-headers/get.html","searchKeys":["get","open fun get(name: String): String?","dev.shibasis.reaktor.core.server.cloudflare.Headers.get"]},{"name":"open fun get(name: String): String?","description":"dev.shibasis.reaktor.core.server.cloudflare.URLSearchParams.get","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-u-r-l-search-params/get.html","searchKeys":["get","open fun get(name: String): String?","dev.shibasis.reaktor.core.server.cloudflare.URLSearchParams.get"]},{"name":"open fun get(name: String): dynamic","description":"dev.shibasis.reaktor.core.server.cloudflare.FormData.get","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-form-data/get.html","searchKeys":["get","open fun get(name: String): dynamic","dev.shibasis.reaktor.core.server.cloudflare.FormData.get"]},{"name":"open fun getAll(name: String): Array<String>","description":"dev.shibasis.reaktor.core.server.cloudflare.FormData.getAll","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-form-data/get-all.html","searchKeys":["getAll","open fun getAll(name: String): Array<String>","dev.shibasis.reaktor.core.server.cloudflare.FormData.getAll"]},{"name":"open fun getAll(name: String): Array<String>","description":"dev.shibasis.reaktor.core.server.cloudflare.Headers.getAll","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-headers/get-all.html","searchKeys":["getAll","open fun getAll(name: String): Array<String>","dev.shibasis.reaktor.core.server.cloudflare.Headers.getAll"]},{"name":"open fun getAll(name: String): Array<String>","description":"dev.shibasis.reaktor.core.server.cloudflare.URLSearchParams.getAll","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-u-r-l-search-params/get-all.html","searchKeys":["getAll","open fun getAll(name: String): Array<String>","dev.shibasis.reaktor.core.server.cloudflare.URLSearchParams.getAll"]},{"name":"open fun getWriter(): WritableStreamDefaultWriter<W>","description":"dev.shibasis.reaktor.core.server.cloudflare.WritableStream.getWriter","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-writable-stream/get-writer.html","searchKeys":["getWriter","open fun getWriter(): WritableStreamDefaultWriter<W>","dev.shibasis.reaktor.core.server.cloudflare.WritableStream.getWriter"]},{"name":"open fun has(name: String): Boolean","description":"dev.shibasis.reaktor.core.server.cloudflare.FormData.has","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-form-data/has.html","searchKeys":["has","open fun has(name: String): Boolean","dev.shibasis.reaktor.core.server.cloudflare.FormData.has"]},{"name":"open fun has(name: String): Boolean","description":"dev.shibasis.reaktor.core.server.cloudflare.Headers.has","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-headers/has.html","searchKeys":["has","open fun has(name: String): Boolean","dev.shibasis.reaktor.core.server.cloudflare.Headers.has"]},{"name":"open fun has(name: String): Boolean","description":"dev.shibasis.reaktor.core.server.cloudflare.URLSearchParams.has","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-u-r-l-search-params/has.html","searchKeys":["has","open fun has(name: String): Boolean","dev.shibasis.reaktor.core.server.cloudflare.URLSearchParams.has"]},{"name":"open fun head(key: String): Promise<R2Object?>","description":"dev.shibasis.reaktor.core.server.cloudflare.R2Bucket.head","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-r2-bucket/head.html","searchKeys":["head","open fun head(key: String): Promise<R2Object?>","dev.shibasis.reaktor.core.server.cloudflare.R2Bucket.head"]},{"name":"open fun importKey(format: String, keyData: ArrayBuffer, algorithm: String, extractable: Boolean, keyUsages: Array<String>): Promise<CryptoKey>","description":"dev.shibasis.reaktor.core.server.cloudflare.SubtleCrypto.importKey","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-subtle-crypto/import-key.html","searchKeys":["importKey","open fun importKey(format: String, keyData: ArrayBuffer, algorithm: String, extractable: Boolean, keyUsages: Array<String>): Promise<CryptoKey>","dev.shibasis.reaktor.core.server.cloudflare.SubtleCrypto.importKey"]},{"name":"open fun importKey(format: String, keyData: ArrayBuffer, algorithm: SubtleCryptoImportKeyAlgorithm, extractable: Boolean, keyUsages: Array<String>): Promise<CryptoKey>","description":"dev.shibasis.reaktor.core.server.cloudflare.SubtleCrypto.importKey","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-subtle-crypto/import-key.html","searchKeys":["importKey","open fun importKey(format: String, keyData: ArrayBuffer, algorithm: SubtleCryptoImportKeyAlgorithm, extractable: Boolean, keyUsages: Array<String>): Promise<CryptoKey>","dev.shibasis.reaktor.core.server.cloudflare.SubtleCrypto.importKey"]},{"name":"open fun importKey(format: String, keyData: ArrayBufferView, algorithm: String, extractable: Boolean, keyUsages: Array<String>): Promise<CryptoKey>","description":"dev.shibasis.reaktor.core.server.cloudflare.SubtleCrypto.importKey","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-subtle-crypto/import-key.html","searchKeys":["importKey","open fun importKey(format: String, keyData: ArrayBufferView, algorithm: String, extractable: Boolean, keyUsages: Array<String>): Promise<CryptoKey>","dev.shibasis.reaktor.core.server.cloudflare.SubtleCrypto.importKey"]},{"name":"open fun importKey(format: String, keyData: ArrayBufferView, algorithm: SubtleCryptoImportKeyAlgorithm, extractable: Boolean, keyUsages: Array<String>): Promise<CryptoKey>","description":"dev.shibasis.reaktor.core.server.cloudflare.SubtleCrypto.importKey","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-subtle-crypto/import-key.html","searchKeys":["importKey","open fun importKey(format: String, keyData: ArrayBufferView, algorithm: SubtleCryptoImportKeyAlgorithm, extractable: Boolean, keyUsages: Array<String>): Promise<CryptoKey>","dev.shibasis.reaktor.core.server.cloudflare.SubtleCrypto.importKey"]},{"name":"open fun importKey(format: String, keyData: JsonWebKey, algorithm: String, extractable: Boolean, keyUsages: Array<String>): Promise<CryptoKey>","description":"dev.shibasis.reaktor.core.server.cloudflare.SubtleCrypto.importKey","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-subtle-crypto/import-key.html","searchKeys":["importKey","open fun importKey(format: String, keyData: JsonWebKey, algorithm: String, extractable: Boolean, keyUsages: Array<String>): Promise<CryptoKey>","dev.shibasis.reaktor.core.server.cloudflare.SubtleCrypto.importKey"]},{"name":"open fun importKey(format: String, keyData: JsonWebKey, algorithm: SubtleCryptoImportKeyAlgorithm, extractable: Boolean, keyUsages: Array<String>): Promise<CryptoKey>","description":"dev.shibasis.reaktor.core.server.cloudflare.SubtleCrypto.importKey","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-subtle-crypto/import-key.html","searchKeys":["importKey","open fun importKey(format: String, keyData: JsonWebKey, algorithm: SubtleCryptoImportKeyAlgorithm, extractable: Boolean, keyUsages: Array<String>): Promise<CryptoKey>","dev.shibasis.reaktor.core.server.cloudflare.SubtleCrypto.importKey"]},{"name":"open fun list(options: R2ListOptions = definedExternally): Promise<T$12>","description":"dev.shibasis.reaktor.core.server.cloudflare.R2Bucket.list","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-r2-bucket/list.html","searchKeys":["list","open fun list(options: R2ListOptions = definedExternally): Promise<T$12>","dev.shibasis.reaktor.core.server.cloudflare.R2Bucket.list"]},{"name":"open fun match(request: Request<Any, Any>): Promise<Response?>","description":"dev.shibasis.reaktor.core.server.cloudflare.Cache.match","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-cache/match.html","searchKeys":["match","open fun match(request: Request<Any, Any>): Promise<Response?>","dev.shibasis.reaktor.core.server.cloudflare.Cache.match"]},{"name":"open fun match(request: Request<Any, Any>, options: CacheQueryOptions = definedExternally): Promise<Response?>","description":"dev.shibasis.reaktor.core.server.cloudflare.Cache.match","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-cache/match.html","searchKeys":["match","open fun match(request: Request<Any, Any>, options: CacheQueryOptions = definedExternally): Promise<Response?>","dev.shibasis.reaktor.core.server.cloudflare.Cache.match"]},{"name":"open fun match(request: String): Promise<Response?>","description":"dev.shibasis.reaktor.core.server.cloudflare.Cache.match","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-cache/match.html","searchKeys":["match","open fun match(request: String): Promise<Response?>","dev.shibasis.reaktor.core.server.cloudflare.Cache.match"]},{"name":"open fun match(request: String, options: CacheQueryOptions = definedExternally): Promise<Response?>","description":"dev.shibasis.reaktor.core.server.cloudflare.Cache.match","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-cache/match.html","searchKeys":["match","open fun match(request: String, options: CacheQueryOptions = definedExternally): Promise<Response?>","dev.shibasis.reaktor.core.server.cloudflare.Cache.match"]},{"name":"open fun match(request: URL): Promise<Response?>","description":"dev.shibasis.reaktor.core.server.cloudflare.Cache.match","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-cache/match.html","searchKeys":["match","open fun match(request: URL): Promise<Response?>","dev.shibasis.reaktor.core.server.cloudflare.Cache.match"]},{"name":"open fun match(request: URL, options: CacheQueryOptions = definedExternally): Promise<Response?>","description":"dev.shibasis.reaktor.core.server.cloudflare.Cache.match","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-cache/match.html","searchKeys":["match","open fun match(request: URL, options: CacheQueryOptions = definedExternally): Promise<Response?>","dev.shibasis.reaktor.core.server.cloudflare.Cache.match"]},{"name":"open fun noRetry()","description":"dev.shibasis.reaktor.core.server.cloudflare.ScheduledEvent.noRetry","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-scheduled-event/no-retry.html","searchKeys":["noRetry","open fun noRetry()","dev.shibasis.reaktor.core.server.cloudflare.ScheduledEvent.noRetry"]},{"name":"open fun on(selector: String, handlers: HTMLRewriterElementContentHandlers): HTMLRewriter","description":"dev.shibasis.reaktor.core.server.cloudflare.HTMLRewriter.on","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-h-t-m-l-rewriter/on.html","searchKeys":["on","open fun on(selector: String, handlers: HTMLRewriterElementContentHandlers): HTMLRewriter","dev.shibasis.reaktor.core.server.cloudflare.HTMLRewriter.on"]},{"name":"open fun onDocument(handlers: HTMLRewriterDocumentContentHandlers): HTMLRewriter","description":"dev.shibasis.reaktor.core.server.cloudflare.HTMLRewriter.onDocument","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-h-t-m-l-rewriter/on-document.html","searchKeys":["onDocument","open fun onDocument(handlers: HTMLRewriterDocumentContentHandlers): HTMLRewriter","dev.shibasis.reaktor.core.server.cloudflare.HTMLRewriter.onDocument"]},{"name":"open fun open(cacheName: String): Promise<Cache>","description":"dev.shibasis.reaktor.core.server.cloudflare.CacheStorage.open","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-cache-storage/open.html","searchKeys":["open","open fun open(cacheName: String): Promise<Cache>","dev.shibasis.reaktor.core.server.cloudflare.CacheStorage.open"]},{"name":"open fun passThroughOnException()","description":"dev.shibasis.reaktor.core.server.cloudflare.FetchEvent.passThroughOnException","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-fetch-event/pass-through-on-exception.html","searchKeys":["passThroughOnException","open fun passThroughOnException()","dev.shibasis.reaktor.core.server.cloudflare.FetchEvent.passThroughOnException"]},{"name":"open fun prepare(query: String): D1PreparedStatement","description":"dev.shibasis.reaktor.core.server.cloudflare.D1Database.prepare","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-d1-database/prepare.html","searchKeys":["prepare","open fun prepare(query: String): D1PreparedStatement","dev.shibasis.reaktor.core.server.cloudflare.D1Database.prepare"]},{"name":"open fun preventDefault()","description":"dev.shibasis.reaktor.core.server.cloudflare.Event.preventDefault","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-event/prevent-default.html","searchKeys":["preventDefault","open fun preventDefault()","dev.shibasis.reaktor.core.server.cloudflare.Event.preventDefault"]},{"name":"open fun put(key: String, value: ArrayBuffer?): Promise<Any?>","description":"dev.shibasis.reaktor.core.server.cloudflare.R2Bucket.put","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-r2-bucket/put.html","searchKeys":["put","open fun put(key: String, value: ArrayBuffer?): Promise<Any?>","dev.shibasis.reaktor.core.server.cloudflare.R2Bucket.put"]},{"name":"open fun put(key: String, value: ArrayBuffer?, options: R2PutOptions = definedExternally): Promise<Any?>","description":"dev.shibasis.reaktor.core.server.cloudflare.R2Bucket.put","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-r2-bucket/put.html","searchKeys":["put","open fun put(key: String, value: ArrayBuffer?, options: R2PutOptions = definedExternally): Promise<Any?>","dev.shibasis.reaktor.core.server.cloudflare.R2Bucket.put"]},{"name":"open fun put(key: String, value: ArrayBufferView?): Promise<Any?>","description":"dev.shibasis.reaktor.core.server.cloudflare.R2Bucket.put","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-r2-bucket/put.html","searchKeys":["put","open fun put(key: String, value: ArrayBufferView?): Promise<Any?>","dev.shibasis.reaktor.core.server.cloudflare.R2Bucket.put"]},{"name":"open fun put(key: String, value: ArrayBufferView?, options: R2PutOptions = definedExternally): Promise<Any?>","description":"dev.shibasis.reaktor.core.server.cloudflare.R2Bucket.put","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-r2-bucket/put.html","searchKeys":["put","open fun put(key: String, value: ArrayBufferView?, options: R2PutOptions = definedExternally): Promise<Any?>","dev.shibasis.reaktor.core.server.cloudflare.R2Bucket.put"]},{"name":"open fun put(key: String, value: Blob?): Promise<Any?>","description":"dev.shibasis.reaktor.core.server.cloudflare.R2Bucket.put","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-r2-bucket/put.html","searchKeys":["put","open fun put(key: String, value: Blob?): Promise<Any?>","dev.shibasis.reaktor.core.server.cloudflare.R2Bucket.put"]},{"name":"open fun put(key: String, value: Blob?, options: R2PutOptions = definedExternally): Promise<Any?>","description":"dev.shibasis.reaktor.core.server.cloudflare.R2Bucket.put","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-r2-bucket/put.html","searchKeys":["put","open fun put(key: String, value: Blob?, options: R2PutOptions = definedExternally): Promise<Any?>","dev.shibasis.reaktor.core.server.cloudflare.R2Bucket.put"]},{"name":"open fun put(key: String, value: ReadableStream<Uint8Array>?): Promise<Any?>","description":"dev.shibasis.reaktor.core.server.cloudflare.R2Bucket.put","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-r2-bucket/put.html","searchKeys":["put","open fun put(key: String, value: ReadableStream<Uint8Array>?): Promise<Any?>","dev.shibasis.reaktor.core.server.cloudflare.R2Bucket.put"]},{"name":"open fun put(key: String, value: ReadableStream<Uint8Array>?, options: R2PutOptions = definedExternally): Promise<Any?>","description":"dev.shibasis.reaktor.core.server.cloudflare.R2Bucket.put","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-r2-bucket/put.html","searchKeys":["put","open fun put(key: String, value: ReadableStream<Uint8Array>?, options: R2PutOptions = definedExternally): Promise<Any?>","dev.shibasis.reaktor.core.server.cloudflare.R2Bucket.put"]},{"name":"open fun put(key: String, value: String?): Promise<Any?>","description":"dev.shibasis.reaktor.core.server.cloudflare.R2Bucket.put","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-r2-bucket/put.html","searchKeys":["put","open fun put(key: String, value: String?): Promise<Any?>","dev.shibasis.reaktor.core.server.cloudflare.R2Bucket.put"]},{"name":"open fun put(key: String, value: String?, options: R2PutOptions = definedExternally): Promise<Any?>","description":"dev.shibasis.reaktor.core.server.cloudflare.R2Bucket.put","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-r2-bucket/put.html","searchKeys":["put","open fun put(key: String, value: String?, options: R2PutOptions = definedExternally): Promise<Any?>","dev.shibasis.reaktor.core.server.cloudflare.R2Bucket.put"]},{"name":"open fun put(request: Request<Any, Any>, response: Response): Promise<Unit>","description":"dev.shibasis.reaktor.core.server.cloudflare.Cache.put","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-cache/put.html","searchKeys":["put","open fun put(request: Request<Any, Any>, response: Response): Promise<Unit>","dev.shibasis.reaktor.core.server.cloudflare.Cache.put"]},{"name":"open fun put(request: String, response: Response): Promise<Unit>","description":"dev.shibasis.reaktor.core.server.cloudflare.Cache.put","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-cache/put.html","searchKeys":["put","open fun put(request: String, response: Response): Promise<Unit>","dev.shibasis.reaktor.core.server.cloudflare.Cache.put"]},{"name":"open fun put(request: URL, response: Response): Promise<Unit>","description":"dev.shibasis.reaktor.core.server.cloudflare.Cache.put","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-cache/put.html","searchKeys":["put","open fun put(request: URL, response: Response): Promise<Unit>","dev.shibasis.reaktor.core.server.cloudflare.Cache.put"]},{"name":"open fun randomUUID(): String","description":"dev.shibasis.reaktor.core.server.cloudflare.Crypto.randomUUID","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-crypto/random-u-u-i-d.html","searchKeys":["randomUUID","open fun randomUUID(): String","dev.shibasis.reaktor.core.server.cloudflare.Crypto.randomUUID"]},{"name":"open fun read(): Promise<dynamic>","description":"dev.shibasis.reaktor.core.server.cloudflare.ReadableStreamDefaultReader.read","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-readable-stream-default-reader/read.html","searchKeys":["read","open fun read(): Promise<dynamic>","dev.shibasis.reaktor.core.server.cloudflare.ReadableStreamDefaultReader.read"]},{"name":"open fun releaseLock()","description":"dev.shibasis.reaktor.core.server.cloudflare.ReadableStreamBYOBReader.releaseLock","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-readable-stream-b-y-o-b-reader/release-lock.html","searchKeys":["releaseLock","open fun releaseLock()","dev.shibasis.reaktor.core.server.cloudflare.ReadableStreamBYOBReader.releaseLock"]},{"name":"open fun releaseLock()","description":"dev.shibasis.reaktor.core.server.cloudflare.ReadableStreamDefaultReader.releaseLock","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-readable-stream-default-reader/release-lock.html","searchKeys":["releaseLock","open fun releaseLock()","dev.shibasis.reaktor.core.server.cloudflare.ReadableStreamDefaultReader.releaseLock"]},{"name":"open fun releaseLock()","description":"dev.shibasis.reaktor.core.server.cloudflare.WritableStreamDefaultWriter.releaseLock","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-writable-stream-default-writer/release-lock.html","searchKeys":["releaseLock","open fun releaseLock()","dev.shibasis.reaktor.core.server.cloudflare.WritableStreamDefaultWriter.releaseLock"]},{"name":"open fun respondWith(promise: Promise<Response>)","description":"dev.shibasis.reaktor.core.server.cloudflare.FetchEvent.respondWith","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-fetch-event/respond-with.html","searchKeys":["respondWith","open fun respondWith(promise: Promise<Response>)","dev.shibasis.reaktor.core.server.cloudflare.FetchEvent.respondWith"]},{"name":"open fun respondWith(promise: Response)","description":"dev.shibasis.reaktor.core.server.cloudflare.FetchEvent.respondWith","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-fetch-event/respond-with.html","searchKeys":["respondWith","open fun respondWith(promise: Response)","dev.shibasis.reaktor.core.server.cloudflare.FetchEvent.respondWith"]},{"name":"open fun resumeMultipartUpload(key: String, uploadId: String): R2MultipartUpload","description":"dev.shibasis.reaktor.core.server.cloudflare.R2Bucket.resumeMultipartUpload","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-r2-bucket/resume-multipart-upload.html","searchKeys":["resumeMultipartUpload","open fun resumeMultipartUpload(key: String, uploadId: String): R2MultipartUpload","dev.shibasis.reaktor.core.server.cloudflare.R2Bucket.resumeMultipartUpload"]},{"name":"open fun send(message: ArrayBuffer)","description":"dev.shibasis.reaktor.core.server.cloudflare.WebSocket.send","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-web-socket/send.html","searchKeys":["send","open fun send(message: ArrayBuffer)","dev.shibasis.reaktor.core.server.cloudflare.WebSocket.send"]},{"name":"open fun send(message: ArrayBufferView)","description":"dev.shibasis.reaktor.core.server.cloudflare.WebSocket.send","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-web-socket/send.html","searchKeys":["send","open fun send(message: ArrayBufferView)","dev.shibasis.reaktor.core.server.cloudflare.WebSocket.send"]},{"name":"open fun send(message: String)","description":"dev.shibasis.reaktor.core.server.cloudflare.WebSocket.send","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-web-socket/send.html","searchKeys":["send","open fun send(message: String)","dev.shibasis.reaktor.core.server.cloudflare.WebSocket.send"]},{"name":"open fun serializeAttachment(attachment: Any)","description":"dev.shibasis.reaktor.core.server.cloudflare.WebSocket.serializeAttachment","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-web-socket/serialize-attachment.html","searchKeys":["serializeAttachment","open fun serializeAttachment(attachment: Any)","dev.shibasis.reaktor.core.server.cloudflare.WebSocket.serializeAttachment"]},{"name":"open fun set(name: String, value: Blob)","description":"dev.shibasis.reaktor.core.server.cloudflare.FormData.set","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-form-data/set.html","searchKeys":["set","open fun set(name: String, value: Blob)","dev.shibasis.reaktor.core.server.cloudflare.FormData.set"]},{"name":"open fun set(name: String, value: Blob, filename: String = definedExternally)","description":"dev.shibasis.reaktor.core.server.cloudflare.FormData.set","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-form-data/set.html","searchKeys":["set","open fun set(name: String, value: Blob, filename: String = definedExternally)","dev.shibasis.reaktor.core.server.cloudflare.FormData.set"]},{"name":"open fun set(name: String, value: String)","description":"dev.shibasis.reaktor.core.server.cloudflare.FormData.set","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-form-data/set.html","searchKeys":["set","open fun set(name: String, value: String)","dev.shibasis.reaktor.core.server.cloudflare.FormData.set"]},{"name":"open fun set(name: String, value: String)","description":"dev.shibasis.reaktor.core.server.cloudflare.Headers.set","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-headers/set.html","searchKeys":["set","open fun set(name: String, value: String)","dev.shibasis.reaktor.core.server.cloudflare.Headers.set"]},{"name":"open fun set(name: String, value: String)","description":"dev.shibasis.reaktor.core.server.cloudflare.URLSearchParams.set","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-u-r-l-search-params/set.html","searchKeys":["set","open fun set(name: String, value: String)","dev.shibasis.reaktor.core.server.cloudflare.URLSearchParams.set"]},{"name":"open fun sign(algorithm: String, key: CryptoKey, data: ArrayBuffer): Promise<ArrayBuffer>","description":"dev.shibasis.reaktor.core.server.cloudflare.SubtleCrypto.sign","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-subtle-crypto/sign.html","searchKeys":["sign","open fun sign(algorithm: String, key: CryptoKey, data: ArrayBuffer): Promise<ArrayBuffer>","dev.shibasis.reaktor.core.server.cloudflare.SubtleCrypto.sign"]},{"name":"open fun sign(algorithm: String, key: CryptoKey, data: ArrayBufferView): Promise<ArrayBuffer>","description":"dev.shibasis.reaktor.core.server.cloudflare.SubtleCrypto.sign","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-subtle-crypto/sign.html","searchKeys":["sign","open fun sign(algorithm: String, key: CryptoKey, data: ArrayBufferView): Promise<ArrayBuffer>","dev.shibasis.reaktor.core.server.cloudflare.SubtleCrypto.sign"]},{"name":"open fun sign(algorithm: SubtleCryptoSignAlgorithm, key: CryptoKey, data: ArrayBuffer): Promise<ArrayBuffer>","description":"dev.shibasis.reaktor.core.server.cloudflare.SubtleCrypto.sign","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-subtle-crypto/sign.html","searchKeys":["sign","open fun sign(algorithm: SubtleCryptoSignAlgorithm, key: CryptoKey, data: ArrayBuffer): Promise<ArrayBuffer>","dev.shibasis.reaktor.core.server.cloudflare.SubtleCrypto.sign"]},{"name":"open fun sign(algorithm: SubtleCryptoSignAlgorithm, key: CryptoKey, data: ArrayBufferView): Promise<ArrayBuffer>","description":"dev.shibasis.reaktor.core.server.cloudflare.SubtleCrypto.sign","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-subtle-crypto/sign.html","searchKeys":["sign","open fun sign(algorithm: SubtleCryptoSignAlgorithm, key: CryptoKey, data: ArrayBufferView): Promise<ArrayBuffer>","dev.shibasis.reaktor.core.server.cloudflare.SubtleCrypto.sign"]},{"name":"open fun slice(start: Number = definedExternally, end: Number = definedExternally, type: String = definedExternally): Blob","description":"dev.shibasis.reaktor.core.server.cloudflare.Blob.slice","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-blob/slice.html","searchKeys":["slice","open fun slice(start: Number = definedExternally, end: Number = definedExternally, type: String = definedExternally): Blob","dev.shibasis.reaktor.core.server.cloudflare.Blob.slice"]},{"name":"open fun sort()","description":"dev.shibasis.reaktor.core.server.cloudflare.URLSearchParams.sort","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-u-r-l-search-params/sort.html","searchKeys":["sort","open fun sort()","dev.shibasis.reaktor.core.server.cloudflare.URLSearchParams.sort"]},{"name":"open fun stopImmediatePropagation()","description":"dev.shibasis.reaktor.core.server.cloudflare.Event.stopImmediatePropagation","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-event/stop-immediate-propagation.html","searchKeys":["stopImmediatePropagation","open fun stopImmediatePropagation()","dev.shibasis.reaktor.core.server.cloudflare.Event.stopImmediatePropagation"]},{"name":"open fun stopPropagation()","description":"dev.shibasis.reaktor.core.server.cloudflare.Event.stopPropagation","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-event/stop-propagation.html","searchKeys":["stopPropagation","open fun stopPropagation()","dev.shibasis.reaktor.core.server.cloudflare.Event.stopPropagation"]},{"name":"open fun stream(): ReadableStream<Uint8Array>","description":"dev.shibasis.reaktor.core.server.cloudflare.Blob.stream","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-blob/stream.html","searchKeys":["stream","open fun stream(): ReadableStream<Uint8Array>","dev.shibasis.reaktor.core.server.cloudflare.Blob.stream"]},{"name":"open fun test(): Boolean","description":"dev.shibasis.reaktor.core.server.cloudflare.URLPattern.test","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-u-r-l-pattern/test.html","searchKeys":["test","open fun test(): Boolean","dev.shibasis.reaktor.core.server.cloudflare.URLPattern.test"]},{"name":"open fun test(input: String = definedExternally): Boolean","description":"dev.shibasis.reaktor.core.server.cloudflare.URLPattern.test","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-u-r-l-pattern/test.html","searchKeys":["test","open fun test(input: String = definedExternally): Boolean","dev.shibasis.reaktor.core.server.cloudflare.URLPattern.test"]},{"name":"open fun test(input: String = definedExternally, baseURL: String = definedExternally): Boolean","description":"dev.shibasis.reaktor.core.server.cloudflare.URLPattern.test","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-u-r-l-pattern/test.html","searchKeys":["test","open fun test(input: String = definedExternally, baseURL: String = definedExternally): Boolean","dev.shibasis.reaktor.core.server.cloudflare.URLPattern.test"]},{"name":"open fun test(input: URLPatternURLPatternInit = definedExternally): Boolean","description":"dev.shibasis.reaktor.core.server.cloudflare.URLPattern.test","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-u-r-l-pattern/test.html","searchKeys":["test","open fun test(input: URLPatternURLPatternInit = definedExternally): Boolean","dev.shibasis.reaktor.core.server.cloudflare.URLPattern.test"]},{"name":"open fun test(input: URLPatternURLPatternInit = definedExternally, baseURL: String = definedExternally): Boolean","description":"dev.shibasis.reaktor.core.server.cloudflare.URLPattern.test","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-u-r-l-pattern/test.html","searchKeys":["test","open fun test(input: URLPatternURLPatternInit = definedExternally, baseURL: String = definedExternally): Boolean","dev.shibasis.reaktor.core.server.cloudflare.URLPattern.test"]},{"name":"open fun text(): Promise<String>","description":"dev.shibasis.reaktor.core.server.cloudflare.Blob.text","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-blob/text.html","searchKeys":["text","open fun text(): Promise<String>","dev.shibasis.reaktor.core.server.cloudflare.Blob.text"]},{"name":"open fun text(): Promise<String>","description":"dev.shibasis.reaktor.core.server.cloudflare.Body.text","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-body/text.html","searchKeys":["text","open fun text(): Promise<String>","dev.shibasis.reaktor.core.server.cloudflare.Body.text"]},{"name":"open fun throwIfAborted()","description":"dev.shibasis.reaktor.core.server.cloudflare.AbortSignal.throwIfAborted","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-abort-signal/throw-if-aborted.html","searchKeys":["throwIfAborted","open fun throwIfAborted()","dev.shibasis.reaktor.core.server.cloudflare.AbortSignal.throwIfAborted"]},{"name":"open fun timingSafeEqual(a: ArrayBuffer, b: ArrayBuffer): Boolean","description":"dev.shibasis.reaktor.core.server.cloudflare.SubtleCrypto.timingSafeEqual","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-subtle-crypto/timing-safe-equal.html","searchKeys":["timingSafeEqual","open fun timingSafeEqual(a: ArrayBuffer, b: ArrayBuffer): Boolean","dev.shibasis.reaktor.core.server.cloudflare.SubtleCrypto.timingSafeEqual"]},{"name":"open fun timingSafeEqual(a: ArrayBuffer, b: ArrayBufferView): Boolean","description":"dev.shibasis.reaktor.core.server.cloudflare.SubtleCrypto.timingSafeEqual","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-subtle-crypto/timing-safe-equal.html","searchKeys":["timingSafeEqual","open fun timingSafeEqual(a: ArrayBuffer, b: ArrayBufferView): Boolean","dev.shibasis.reaktor.core.server.cloudflare.SubtleCrypto.timingSafeEqual"]},{"name":"open fun timingSafeEqual(a: ArrayBufferView, b: ArrayBuffer): Boolean","description":"dev.shibasis.reaktor.core.server.cloudflare.SubtleCrypto.timingSafeEqual","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-subtle-crypto/timing-safe-equal.html","searchKeys":["timingSafeEqual","open fun timingSafeEqual(a: ArrayBufferView, b: ArrayBuffer): Boolean","dev.shibasis.reaktor.core.server.cloudflare.SubtleCrypto.timingSafeEqual"]},{"name":"open fun timingSafeEqual(a: ArrayBufferView, b: ArrayBufferView): Boolean","description":"dev.shibasis.reaktor.core.server.cloudflare.SubtleCrypto.timingSafeEqual","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-subtle-crypto/timing-safe-equal.html","searchKeys":["timingSafeEqual","open fun timingSafeEqual(a: ArrayBufferView, b: ArrayBufferView): Boolean","dev.shibasis.reaktor.core.server.cloudflare.SubtleCrypto.timingSafeEqual"]},{"name":"open fun toJSON(): String","description":"dev.shibasis.reaktor.core.server.cloudflare.URL.toJSON","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-u-r-l/to-j-s-o-n.html","searchKeys":["toJSON","open fun toJSON(): String","dev.shibasis.reaktor.core.server.cloudflare.URL.toJSON"]},{"name":"open fun transform(response: Response): Response","description":"dev.shibasis.reaktor.core.server.cloudflare.HTMLRewriter.transform","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-h-t-m-l-rewriter/transform.html","searchKeys":["transform","open fun transform(response: Response): Response","dev.shibasis.reaktor.core.server.cloudflare.HTMLRewriter.transform"]},{"name":"open fun unwrapKey(format: String, wrappedKey: ArrayBuffer, unwrappingKey: CryptoKey, unwrapAlgorithm: String, unwrappedKeyAlgorithm: String, extractable: Boolean, keyUsages: Array<String>): Promise<CryptoKey>","description":"dev.shibasis.reaktor.core.server.cloudflare.SubtleCrypto.unwrapKey","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-subtle-crypto/unwrap-key.html","searchKeys":["unwrapKey","open fun unwrapKey(format: String, wrappedKey: ArrayBuffer, unwrappingKey: CryptoKey, unwrapAlgorithm: String, unwrappedKeyAlgorithm: String, extractable: Boolean, keyUsages: Array<String>): Promise<CryptoKey>","dev.shibasis.reaktor.core.server.cloudflare.SubtleCrypto.unwrapKey"]},{"name":"open fun unwrapKey(format: String, wrappedKey: ArrayBuffer, unwrappingKey: CryptoKey, unwrapAlgorithm: String, unwrappedKeyAlgorithm: SubtleCryptoImportKeyAlgorithm, extractable: Boolean, keyUsages: Array<String>): Promise<CryptoKey>","description":"dev.shibasis.reaktor.core.server.cloudflare.SubtleCrypto.unwrapKey","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-subtle-crypto/unwrap-key.html","searchKeys":["unwrapKey","open fun unwrapKey(format: String, wrappedKey: ArrayBuffer, unwrappingKey: CryptoKey, unwrapAlgorithm: String, unwrappedKeyAlgorithm: SubtleCryptoImportKeyAlgorithm, extractable: Boolean, keyUsages: Array<String>): Promise<CryptoKey>","dev.shibasis.reaktor.core.server.cloudflare.SubtleCrypto.unwrapKey"]},{"name":"open fun unwrapKey(format: String, wrappedKey: ArrayBuffer, unwrappingKey: CryptoKey, unwrapAlgorithm: SubtleCryptoEncryptAlgorithm, unwrappedKeyAlgorithm: String, extractable: Boolean, keyUsages: Array<String>): Promise<CryptoKey>","description":"dev.shibasis.reaktor.core.server.cloudflare.SubtleCrypto.unwrapKey","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-subtle-crypto/unwrap-key.html","searchKeys":["unwrapKey","open fun unwrapKey(format: String, wrappedKey: ArrayBuffer, unwrappingKey: CryptoKey, unwrapAlgorithm: SubtleCryptoEncryptAlgorithm, unwrappedKeyAlgorithm: String, extractable: Boolean, keyUsages: Array<String>): Promise<CryptoKey>","dev.shibasis.reaktor.core.server.cloudflare.SubtleCrypto.unwrapKey"]},{"name":"open fun unwrapKey(format: String, wrappedKey: ArrayBuffer, unwrappingKey: CryptoKey, unwrapAlgorithm: SubtleCryptoEncryptAlgorithm, unwrappedKeyAlgorithm: SubtleCryptoImportKeyAlgorithm, extractable: Boolean, keyUsages: Array<String>): Promise<CryptoKey>","description":"dev.shibasis.reaktor.core.server.cloudflare.SubtleCrypto.unwrapKey","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-subtle-crypto/unwrap-key.html","searchKeys":["unwrapKey","open fun unwrapKey(format: String, wrappedKey: ArrayBuffer, unwrappingKey: CryptoKey, unwrapAlgorithm: SubtleCryptoEncryptAlgorithm, unwrappedKeyAlgorithm: SubtleCryptoImportKeyAlgorithm, extractable: Boolean, keyUsages: Array<String>): Promise<CryptoKey>","dev.shibasis.reaktor.core.server.cloudflare.SubtleCrypto.unwrapKey"]},{"name":"open fun unwrapKey(format: String, wrappedKey: ArrayBufferView, unwrappingKey: CryptoKey, unwrapAlgorithm: String, unwrappedKeyAlgorithm: String, extractable: Boolean, keyUsages: Array<String>): Promise<CryptoKey>","description":"dev.shibasis.reaktor.core.server.cloudflare.SubtleCrypto.unwrapKey","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-subtle-crypto/unwrap-key.html","searchKeys":["unwrapKey","open fun unwrapKey(format: String, wrappedKey: ArrayBufferView, unwrappingKey: CryptoKey, unwrapAlgorithm: String, unwrappedKeyAlgorithm: String, extractable: Boolean, keyUsages: Array<String>): Promise<CryptoKey>","dev.shibasis.reaktor.core.server.cloudflare.SubtleCrypto.unwrapKey"]},{"name":"open fun unwrapKey(format: String, wrappedKey: ArrayBufferView, unwrappingKey: CryptoKey, unwrapAlgorithm: String, unwrappedKeyAlgorithm: SubtleCryptoImportKeyAlgorithm, extractable: Boolean, keyUsages: Array<String>): Promise<CryptoKey>","description":"dev.shibasis.reaktor.core.server.cloudflare.SubtleCrypto.unwrapKey","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-subtle-crypto/unwrap-key.html","searchKeys":["unwrapKey","open fun unwrapKey(format: String, wrappedKey: ArrayBufferView, unwrappingKey: CryptoKey, unwrapAlgorithm: String, unwrappedKeyAlgorithm: SubtleCryptoImportKeyAlgorithm, extractable: Boolean, keyUsages: Array<String>): Promise<CryptoKey>","dev.shibasis.reaktor.core.server.cloudflare.SubtleCrypto.unwrapKey"]},{"name":"open fun unwrapKey(format: String, wrappedKey: ArrayBufferView, unwrappingKey: CryptoKey, unwrapAlgorithm: SubtleCryptoEncryptAlgorithm, unwrappedKeyAlgorithm: String, extractable: Boolean, keyUsages: Array<String>): Promise<CryptoKey>","description":"dev.shibasis.reaktor.core.server.cloudflare.SubtleCrypto.unwrapKey","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-subtle-crypto/unwrap-key.html","searchKeys":["unwrapKey","open fun unwrapKey(format: String, wrappedKey: ArrayBufferView, unwrappingKey: CryptoKey, unwrapAlgorithm: SubtleCryptoEncryptAlgorithm, unwrappedKeyAlgorithm: String, extractable: Boolean, keyUsages: Array<String>): Promise<CryptoKey>","dev.shibasis.reaktor.core.server.cloudflare.SubtleCrypto.unwrapKey"]},{"name":"open fun unwrapKey(format: String, wrappedKey: ArrayBufferView, unwrappingKey: CryptoKey, unwrapAlgorithm: SubtleCryptoEncryptAlgorithm, unwrappedKeyAlgorithm: SubtleCryptoImportKeyAlgorithm, extractable: Boolean, keyUsages: Array<String>): Promise<CryptoKey>","description":"dev.shibasis.reaktor.core.server.cloudflare.SubtleCrypto.unwrapKey","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-subtle-crypto/unwrap-key.html","searchKeys":["unwrapKey","open fun unwrapKey(format: String, wrappedKey: ArrayBufferView, unwrappingKey: CryptoKey, unwrapAlgorithm: SubtleCryptoEncryptAlgorithm, unwrappedKeyAlgorithm: SubtleCryptoImportKeyAlgorithm, extractable: Boolean, keyUsages: Array<String>): Promise<CryptoKey>","dev.shibasis.reaktor.core.server.cloudflare.SubtleCrypto.unwrapKey"]},{"name":"open fun verify(algorithm: String, key: CryptoKey, signature: ArrayBuffer, data: ArrayBuffer): Promise<Boolean>","description":"dev.shibasis.reaktor.core.server.cloudflare.SubtleCrypto.verify","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-subtle-crypto/verify.html","searchKeys":["verify","open fun verify(algorithm: String, key: CryptoKey, signature: ArrayBuffer, data: ArrayBuffer): Promise<Boolean>","dev.shibasis.reaktor.core.server.cloudflare.SubtleCrypto.verify"]},{"name":"open fun verify(algorithm: String, key: CryptoKey, signature: ArrayBuffer, data: ArrayBufferView): Promise<Boolean>","description":"dev.shibasis.reaktor.core.server.cloudflare.SubtleCrypto.verify","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-subtle-crypto/verify.html","searchKeys":["verify","open fun verify(algorithm: String, key: CryptoKey, signature: ArrayBuffer, data: ArrayBufferView): Promise<Boolean>","dev.shibasis.reaktor.core.server.cloudflare.SubtleCrypto.verify"]},{"name":"open fun verify(algorithm: String, key: CryptoKey, signature: ArrayBufferView, data: ArrayBuffer): Promise<Boolean>","description":"dev.shibasis.reaktor.core.server.cloudflare.SubtleCrypto.verify","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-subtle-crypto/verify.html","searchKeys":["verify","open fun verify(algorithm: String, key: CryptoKey, signature: ArrayBufferView, data: ArrayBuffer): Promise<Boolean>","dev.shibasis.reaktor.core.server.cloudflare.SubtleCrypto.verify"]},{"name":"open fun verify(algorithm: String, key: CryptoKey, signature: ArrayBufferView, data: ArrayBufferView): Promise<Boolean>","description":"dev.shibasis.reaktor.core.server.cloudflare.SubtleCrypto.verify","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-subtle-crypto/verify.html","searchKeys":["verify","open fun verify(algorithm: String, key: CryptoKey, signature: ArrayBufferView, data: ArrayBufferView): Promise<Boolean>","dev.shibasis.reaktor.core.server.cloudflare.SubtleCrypto.verify"]},{"name":"open fun verify(algorithm: SubtleCryptoSignAlgorithm, key: CryptoKey, signature: ArrayBuffer, data: ArrayBuffer): Promise<Boolean>","description":"dev.shibasis.reaktor.core.server.cloudflare.SubtleCrypto.verify","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-subtle-crypto/verify.html","searchKeys":["verify","open fun verify(algorithm: SubtleCryptoSignAlgorithm, key: CryptoKey, signature: ArrayBuffer, data: ArrayBuffer): Promise<Boolean>","dev.shibasis.reaktor.core.server.cloudflare.SubtleCrypto.verify"]},{"name":"open fun verify(algorithm: SubtleCryptoSignAlgorithm, key: CryptoKey, signature: ArrayBuffer, data: ArrayBufferView): Promise<Boolean>","description":"dev.shibasis.reaktor.core.server.cloudflare.SubtleCrypto.verify","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-subtle-crypto/verify.html","searchKeys":["verify","open fun verify(algorithm: SubtleCryptoSignAlgorithm, key: CryptoKey, signature: ArrayBuffer, data: ArrayBufferView): Promise<Boolean>","dev.shibasis.reaktor.core.server.cloudflare.SubtleCrypto.verify"]},{"name":"open fun verify(algorithm: SubtleCryptoSignAlgorithm, key: CryptoKey, signature: ArrayBufferView, data: ArrayBuffer): Promise<Boolean>","description":"dev.shibasis.reaktor.core.server.cloudflare.SubtleCrypto.verify","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-subtle-crypto/verify.html","searchKeys":["verify","open fun verify(algorithm: SubtleCryptoSignAlgorithm, key: CryptoKey, signature: ArrayBufferView, data: ArrayBuffer): Promise<Boolean>","dev.shibasis.reaktor.core.server.cloudflare.SubtleCrypto.verify"]},{"name":"open fun verify(algorithm: SubtleCryptoSignAlgorithm, key: CryptoKey, signature: ArrayBufferView, data: ArrayBufferView): Promise<Boolean>","description":"dev.shibasis.reaktor.core.server.cloudflare.SubtleCrypto.verify","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-subtle-crypto/verify.html","searchKeys":["verify","open fun verify(algorithm: SubtleCryptoSignAlgorithm, key: CryptoKey, signature: ArrayBufferView, data: ArrayBufferView): Promise<Boolean>","dev.shibasis.reaktor.core.server.cloudflare.SubtleCrypto.verify"]},{"name":"open fun waitUntil(promise: Promise<Any>)","description":"dev.shibasis.reaktor.core.server.cloudflare.ExtendableEvent.waitUntil","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-extendable-event/wait-until.html","searchKeys":["waitUntil","open fun waitUntil(promise: Promise<Any>)","dev.shibasis.reaktor.core.server.cloudflare.ExtendableEvent.waitUntil"]},{"name":"open fun wrapKey(format: String, key: CryptoKey, wrappingKey: CryptoKey, wrapAlgorithm: String): Promise<ArrayBuffer>","description":"dev.shibasis.reaktor.core.server.cloudflare.SubtleCrypto.wrapKey","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-subtle-crypto/wrap-key.html","searchKeys":["wrapKey","open fun wrapKey(format: String, key: CryptoKey, wrappingKey: CryptoKey, wrapAlgorithm: String): Promise<ArrayBuffer>","dev.shibasis.reaktor.core.server.cloudflare.SubtleCrypto.wrapKey"]},{"name":"open fun wrapKey(format: String, key: CryptoKey, wrappingKey: CryptoKey, wrapAlgorithm: SubtleCryptoEncryptAlgorithm): Promise<ArrayBuffer>","description":"dev.shibasis.reaktor.core.server.cloudflare.SubtleCrypto.wrapKey","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-subtle-crypto/wrap-key.html","searchKeys":["wrapKey","open fun wrapKey(format: String, key: CryptoKey, wrappingKey: CryptoKey, wrapAlgorithm: SubtleCryptoEncryptAlgorithm): Promise<ArrayBuffer>","dev.shibasis.reaktor.core.server.cloudflare.SubtleCrypto.wrapKey"]},{"name":"open fun write(chunk: W = definedExternally): Promise<Unit>","description":"dev.shibasis.reaktor.core.server.cloudflare.WritableStreamDefaultWriter.write","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-writable-stream-default-writer/write.html","searchKeys":["write","open fun write(chunk: W = definedExternally): Promise<Unit>","dev.shibasis.reaktor.core.server.cloudflare.WritableStreamDefaultWriter.write"]},{"name":"open fun writeHttpMetadata(headers: Headers)","description":"dev.shibasis.reaktor.core.server.cloudflare.R2Object.writeHttpMetadata","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-r2-object/write-http-metadata.html","searchKeys":["writeHttpMetadata","open fun writeHttpMetadata(headers: Headers)","dev.shibasis.reaktor.core.server.cloudflare.R2Object.writeHttpMetadata"]},{"name":"open operator override fun getValue(thisRef: Any, property: KProperty<*>): T?","description":"dev.shibasis.reaktor.core.framework.CreateSlot.getValue","location":"reaktor-core/dev.shibasis.reaktor.core.framework/-create-slot/get-value.html","searchKeys":["getValue","open operator override fun getValue(thisRef: Any, property: KProperty<*>): T?","dev.shibasis.reaktor.core.framework.CreateSlot.getValue"]},{"name":"open operator override fun setValue(thisRef: Any, property: KProperty<*>, value: T?)","description":"dev.shibasis.reaktor.core.framework.CreateSlot.setValue","location":"reaktor-core/dev.shibasis.reaktor.core.framework/-create-slot/set-value.html","searchKeys":["setValue","open operator override fun setValue(thisRef: Any, property: KProperty<*>, value: T?)","dev.shibasis.reaktor.core.framework.CreateSlot.setValue"]},{"name":"open override fun <T> fetchDependency(id: Int): T?","description":"dev.shibasis.reaktor.core.framework.Feature.fetchDependency","location":"reaktor-core/dev.shibasis.reaktor.core.framework/-feature/fetch-dependency.html","searchKeys":["fetchDependency","open override fun <T> fetchDependency(id: Int): T?","dev.shibasis.reaktor.core.framework.Feature.fetchDependency"]},{"name":"open override fun <T> storeDependency(id: Int, dependency: T)","description":"dev.shibasis.reaktor.core.framework.Feature.storeDependency","location":"reaktor-core/dev.shibasis.reaktor.core.framework/-feature/store-dependency.html","searchKeys":["storeDependency","open override fun <T> storeDependency(id: Int, dependency: T)","dev.shibasis.reaktor.core.framework.Feature.storeDependency"]},{"name":"open override fun close()","description":"dev.shibasis.reaktor.core.framework.Feature.close","location":"reaktor-core/dev.shibasis.reaktor.core.framework/-feature/close.html","searchKeys":["close","open override fun close()","dev.shibasis.reaktor.core.framework.Feature.close"]},{"name":"open override fun createId(): Int","description":"dev.shibasis.reaktor.core.framework.Feature.createId","location":"reaktor-core/dev.shibasis.reaktor.core.framework/-feature/create-id.html","searchKeys":["createId","open override fun createId(): Int","dev.shibasis.reaktor.core.framework.Feature.createId"]},{"name":"open override fun handle(event: ControllerEvent)","description":"dev.shibasis.reaktor.core.framework.Adapter.handle","location":"reaktor-core/dev.shibasis.reaktor.core.framework/-adapter/handle.html","searchKeys":["handle","open override fun handle(event: ControllerEvent)","dev.shibasis.reaktor.core.framework.Adapter.handle"]},{"name":"open override fun handle(event: ControllerEvent)","description":"dev.shibasis.reaktor.core.framework.Component.handle","location":"reaktor-core/dev.shibasis.reaktor.core.framework/-component/handle.html","searchKeys":["handle","open override fun handle(event: ControllerEvent)","dev.shibasis.reaktor.core.framework.Component.handle"]},{"name":"open override fun onBackPressed()","description":"dev.shibasis.reaktor.core.framework.BaseActivity.onBackPressed","location":"reaktor-core/dev.shibasis.reaktor.core.framework/-base-activity/on-back-pressed.html","searchKeys":["onBackPressed","open override fun onBackPressed()","dev.shibasis.reaktor.core.framework.BaseActivity.onBackPressed"]},{"name":"open override fun onStateChanged(source: LifecycleOwner, event: Lifecycle.Event)","description":"dev.shibasis.reaktor.core.framework.ControllerEventObserver.onStateChanged","location":"reaktor-core/dev.shibasis.reaktor.core.framework/-controller-event-observer/on-state-changed.html","searchKeys":["onStateChanged","open override fun onStateChanged(source: LifecycleOwner, event: Lifecycle.Event)","dev.shibasis.reaktor.core.framework.ControllerEventObserver.onStateChanged"]},{"name":"open override fun test(): Int","description":"dev.shibasis.reaktor.core.adapters.AndroidStorageAdapter.test","location":"reaktor-core/dev.shibasis.reaktor.core.adapters/-android-storage-adapter/test.html","searchKeys":["test","open override fun test(): Int","dev.shibasis.reaktor.core.adapters.AndroidStorageAdapter.test"]},{"name":"open override fun toString(): String","description":"dev.shibasis.reaktor.core.server.cloudflare.URL.toString","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-u-r-l/to-string.html","searchKeys":["toString","open override fun toString(): String","dev.shibasis.reaktor.core.server.cloudflare.URL.toString"]},{"name":"open suspend override fun request(vararg permissions: String): Boolean","description":"dev.shibasis.reaktor.core.adapters.AndroidPermissionAdapter.request","location":"reaktor-core/dev.shibasis.reaktor.core.adapters/-android-permission-adapter/request.html","searchKeys":["request","open suspend override fun request(vararg permissions: String): Boolean","dev.shibasis.reaktor.core.adapters.AndroidPermissionAdapter.request"]},{"name":"open suspend override fun request(vararg permissions: String): Boolean","description":"dev.shibasis.reaktor.core.adapters.DarwinPermissionAdapter.request","location":"reaktor-core/dev.shibasis.reaktor.core.adapters/-darwin-permission-adapter/request.html","searchKeys":["request","open suspend override fun request(vararg permissions: String): Boolean","dev.shibasis.reaktor.core.adapters.DarwinPermissionAdapter.request"]},{"name":"open val body: ReadableStream<Uint8Array>?","description":"dev.shibasis.reaktor.core.server.cloudflare.R2ObjectBody.body","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-r2-object-body/body.html","searchKeys":["body","open val body: ReadableStream<Uint8Array>?","dev.shibasis.reaktor.core.server.cloudflare.R2ObjectBody.body"]},{"name":"open val bodyUsed: Boolean?","description":"dev.shibasis.reaktor.core.server.cloudflare.R2ObjectBody.bodyUsed","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-r2-object-body/body-used.html","searchKeys":["bodyUsed","open val bodyUsed: Boolean?","dev.shibasis.reaktor.core.server.cloudflare.R2ObjectBody.bodyUsed"]},{"name":"open var $public: CryptoKey?","description":"dev.shibasis.reaktor.core.server.cloudflare.SubtleCryptoDeriveKeyAlgorithm.$public","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-subtle-crypto-derive-key-algorithm/$public.html","searchKeys":["$public","open var $public: CryptoKey?","dev.shibasis.reaktor.core.server.cloudflare.SubtleCryptoDeriveKeyAlgorithm.$public"]},{"name":"open var DigestStream: Any","description":"dev.shibasis.reaktor.core.server.cloudflare.Crypto.DigestStream","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-crypto/-digest-stream.html","searchKeys":["DigestStream","open var DigestStream: Any","dev.shibasis.reaktor.core.server.cloudflare.Crypto.DigestStream"]},{"name":"open var EventTarget: Any","description":"dev.shibasis.reaktor.core.server.cloudflare.WorkerGlobalScope.EventTarget","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-worker-global-scope/-event-target.html","searchKeys":["EventTarget","open var EventTarget: Any","dev.shibasis.reaktor.core.server.cloudflare.WorkerGlobalScope.EventTarget"]},{"name":"open var abort: (reason: Any) -> dynamic?","description":"dev.shibasis.reaktor.core.server.cloudflare.UnderlyingSink.abort","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-underlying-sink/abort.html","searchKeys":["abort","open var abort: (reason: Any) -> dynamic?","dev.shibasis.reaktor.core.server.cloudflare.UnderlyingSink.abort"]},{"name":"open var aborted: Boolean","description":"dev.shibasis.reaktor.core.server.cloudflare.AbortSignal.aborted","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-abort-signal/aborted.html","searchKeys":["aborted","open var aborted: Boolean","dev.shibasis.reaktor.core.server.cloudflare.AbortSignal.aborted"]},{"name":"open var additionalData: ArrayBuffer?","description":"dev.shibasis.reaktor.core.server.cloudflare.SubtleCryptoEncryptAlgorithm.additionalData","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-subtle-crypto-encrypt-algorithm/additional-data.html","searchKeys":["additionalData","open var additionalData: ArrayBuffer?","dev.shibasis.reaktor.core.server.cloudflare.SubtleCryptoEncryptAlgorithm.additionalData"]},{"name":"open var alg: String?","description":"dev.shibasis.reaktor.core.server.cloudflare.JsonWebKey.alg","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-json-web-key/alg.html","searchKeys":["alg","open var alg: String?","dev.shibasis.reaktor.core.server.cloudflare.JsonWebKey.alg"]},{"name":"open var algorithm: dynamic","description":"dev.shibasis.reaktor.core.server.cloudflare.CryptoKey.algorithm","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-crypto-key/algorithm.html","searchKeys":["algorithm","open var algorithm: dynamic","dev.shibasis.reaktor.core.server.cloudflare.CryptoKey.algorithm"]},{"name":"open var allowConcurrency: Boolean?","description":"dev.shibasis.reaktor.core.server.cloudflare.DurableObjectGetAlarmOptions.allowConcurrency","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-durable-object-get-alarm-options/allow-concurrency.html","searchKeys":["allowConcurrency","open var allowConcurrency: Boolean?","dev.shibasis.reaktor.core.server.cloudflare.DurableObjectGetAlarmOptions.allowConcurrency"]},{"name":"open var allowConcurrency: Boolean?","description":"dev.shibasis.reaktor.core.server.cloudflare.DurableObjectGetOptions.allowConcurrency","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-durable-object-get-options/allow-concurrency.html","searchKeys":["allowConcurrency","open var allowConcurrency: Boolean?","dev.shibasis.reaktor.core.server.cloudflare.DurableObjectGetOptions.allowConcurrency"]},{"name":"open var allowConcurrency: Boolean?","description":"dev.shibasis.reaktor.core.server.cloudflare.DurableObjectListOptions.allowConcurrency","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-durable-object-list-options/allow-concurrency.html","searchKeys":["allowConcurrency","open var allowConcurrency: Boolean?","dev.shibasis.reaktor.core.server.cloudflare.DurableObjectListOptions.allowConcurrency"]},{"name":"open var allowConcurrency: Boolean?","description":"dev.shibasis.reaktor.core.server.cloudflare.DurableObjectPutOptions.allowConcurrency","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-durable-object-put-options/allow-concurrency.html","searchKeys":["allowConcurrency","open var allowConcurrency: Boolean?","dev.shibasis.reaktor.core.server.cloudflare.DurableObjectPutOptions.allowConcurrency"]},{"name":"open var allowConcurrency: Boolean?","description":"dev.shibasis.reaktor.core.server.cloudflare.DurableObjectSetAlarmOptions.allowConcurrency","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-durable-object-set-alarm-options/allow-concurrency.html","searchKeys":["allowConcurrency","open var allowConcurrency: Boolean?","dev.shibasis.reaktor.core.server.cloudflare.DurableObjectSetAlarmOptions.allowConcurrency"]},{"name":"open var allowUnconfirmed: Boolean?","description":"dev.shibasis.reaktor.core.server.cloudflare.DurableObjectPutOptions.allowUnconfirmed","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-durable-object-put-options/allow-unconfirmed.html","searchKeys":["allowUnconfirmed","open var allowUnconfirmed: Boolean?","dev.shibasis.reaktor.core.server.cloudflare.DurableObjectPutOptions.allowUnconfirmed"]},{"name":"open var allowUnconfirmed: Boolean?","description":"dev.shibasis.reaktor.core.server.cloudflare.DurableObjectSetAlarmOptions.allowUnconfirmed","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-durable-object-set-alarm-options/allow-unconfirmed.html","searchKeys":["allowUnconfirmed","open var allowUnconfirmed: Boolean?","dev.shibasis.reaktor.core.server.cloudflare.DurableObjectSetAlarmOptions.allowUnconfirmed"]},{"name":"open var anim: Boolean?","description":"dev.shibasis.reaktor.core.server.cloudflare.RequestInitCfPropertiesImage.anim","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-request-init-cf-properties-image/anim.html","searchKeys":["anim","open var anim: Boolean?","dev.shibasis.reaktor.core.server.cloudflare.RequestInitCfPropertiesImage.anim"]},{"name":"open var apps: Boolean?","description":"dev.shibasis.reaktor.core.server.cloudflare.RequestInitCfProperties.apps","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-request-init-cf-properties/apps.html","searchKeys":["apps","open var apps: Boolean?","dev.shibasis.reaktor.core.server.cloudflare.RequestInitCfProperties.apps"]},{"name":"open var autoAllocateChunkSize: Number?","description":"dev.shibasis.reaktor.core.server.cloudflare.UnderlyingByteSource.autoAllocateChunkSize","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-underlying-byte-source/auto-allocate-chunk-size.html","searchKeys":["autoAllocateChunkSize","open var autoAllocateChunkSize: Number?","dev.shibasis.reaktor.core.server.cloudflare.UnderlyingByteSource.autoAllocateChunkSize"]},{"name":"open var background: String?","description":"dev.shibasis.reaktor.core.server.cloudflare.BasicImageTransformations.background","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-basic-image-transformations/background.html","searchKeys":["background","open var background: String?","dev.shibasis.reaktor.core.server.cloudflare.BasicImageTransformations.background"]},{"name":"open var baseURL: String?","description":"dev.shibasis.reaktor.core.server.cloudflare.URLPatternURLPatternInit.baseURL","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-u-r-l-pattern-u-r-l-pattern-init/base-u-r-l.html","searchKeys":["baseURL","open var baseURL: String?","dev.shibasis.reaktor.core.server.cloudflare.URLPatternURLPatternInit.baseURL"]},{"name":"open var blobs: Array<dynamic>?","description":"dev.shibasis.reaktor.core.server.cloudflare.AnalyticsEngineDataPoint.blobs","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-analytics-engine-data-point/blobs.html","searchKeys":["blobs","open var blobs: Array<dynamic>?","dev.shibasis.reaktor.core.server.cloudflare.AnalyticsEngineDataPoint.blobs"]},{"name":"open var blur: Number?","description":"dev.shibasis.reaktor.core.server.cloudflare.RequestInitCfPropertiesImage.blur","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-request-init-cf-properties-image/blur.html","searchKeys":["blur","open var blur: Number?","dev.shibasis.reaktor.core.server.cloudflare.RequestInitCfPropertiesImage.blur"]},{"name":"open var body: ReadableStream<Uint8Array>?","description":"dev.shibasis.reaktor.core.server.cloudflare.Body.body","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-body/body.html","searchKeys":["body","open var body: ReadableStream<Uint8Array>?","dev.shibasis.reaktor.core.server.cloudflare.Body.body"]},{"name":"open var body: dynamic","description":"dev.shibasis.reaktor.core.server.cloudflare.RequestInit.body","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-request-init/body.html","searchKeys":["body","open var body: dynamic","dev.shibasis.reaktor.core.server.cloudflare.RequestInit.body"]},{"name":"open var bodyUsed: Boolean","description":"dev.shibasis.reaktor.core.server.cloudflare.Body.bodyUsed","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-body/body-used.html","searchKeys":["bodyUsed","open var bodyUsed: Boolean","dev.shibasis.reaktor.core.server.cloudflare.Body.bodyUsed"]},{"name":"open var border: dynamic","description":"dev.shibasis.reaktor.core.server.cloudflare.RequestInitCfPropertiesImage.border","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-request-init-cf-properties-image/border.html","searchKeys":["border","open var border: dynamic","dev.shibasis.reaktor.core.server.cloudflare.RequestInitCfPropertiesImage.border"]},{"name":"open var bottom: Number?","description":"dev.shibasis.reaktor.core.server.cloudflare.RequestInitCfPropertiesImageDraw.bottom","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-request-init-cf-properties-image-draw/bottom.html","searchKeys":["bottom","open var bottom: Number?","dev.shibasis.reaktor.core.server.cloudflare.RequestInitCfPropertiesImageDraw.bottom"]},{"name":"open var bottom: Number?","description":"dev.shibasis.reaktor.core.server.cloudflare.T$1.bottom","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-t$1/bottom.html","searchKeys":["bottom","open var bottom: Number?","dev.shibasis.reaktor.core.server.cloudflare.T$1.bottom"]},{"name":"open var brightness: Number?","description":"dev.shibasis.reaktor.core.server.cloudflare.RequestInitCfPropertiesImage.brightness","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-request-init-cf-properties-image/brightness.html","searchKeys":["brightness","open var brightness: Number?","dev.shibasis.reaktor.core.server.cloudflare.RequestInitCfPropertiesImage.brightness"]},{"name":"open var bubbles: Boolean","description":"dev.shibasis.reaktor.core.server.cloudflare.Event.bubbles","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-event/bubbles.html","searchKeys":["bubbles","open var bubbles: Boolean","dev.shibasis.reaktor.core.server.cloudflare.Event.bubbles"]},{"name":"open var bubbles: Boolean?","description":"dev.shibasis.reaktor.core.server.cloudflare.EventInit.bubbles","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-event-init/bubbles.html","searchKeys":["bubbles","open var bubbles: Boolean?","dev.shibasis.reaktor.core.server.cloudflare.EventInit.bubbles"]},{"name":"open var cacheControl: String?","description":"dev.shibasis.reaktor.core.server.cloudflare.R2HTTPMetadata.cacheControl","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-r2-h-t-t-p-metadata/cache-control.html","searchKeys":["cacheControl","open var cacheControl: String?","dev.shibasis.reaktor.core.server.cloudflare.R2HTTPMetadata.cacheControl"]},{"name":"open var cacheEverything: Boolean?","description":"dev.shibasis.reaktor.core.server.cloudflare.RequestInitCfProperties.cacheEverything","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-request-init-cf-properties/cache-everything.html","searchKeys":["cacheEverything","open var cacheEverything: Boolean?","dev.shibasis.reaktor.core.server.cloudflare.RequestInitCfProperties.cacheEverything"]},{"name":"open var cacheExpiry: Date?","description":"dev.shibasis.reaktor.core.server.cloudflare.R2HTTPMetadata.cacheExpiry","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-r2-h-t-t-p-metadata/cache-expiry.html","searchKeys":["cacheExpiry","open var cacheExpiry: Date?","dev.shibasis.reaktor.core.server.cloudflare.R2HTTPMetadata.cacheExpiry"]},{"name":"open var cacheKey: String?","description":"dev.shibasis.reaktor.core.server.cloudflare.RequestInitCfProperties.cacheKey","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-request-init-cf-properties/cache-key.html","searchKeys":["cacheKey","open var cacheKey: String?","dev.shibasis.reaktor.core.server.cloudflare.RequestInitCfProperties.cacheKey"]},{"name":"open var cacheTags: Array<String>?","description":"dev.shibasis.reaktor.core.server.cloudflare.RequestInitCfProperties.cacheTags","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-request-init-cf-properties/cache-tags.html","searchKeys":["cacheTags","open var cacheTags: Array<String>?","dev.shibasis.reaktor.core.server.cloudflare.RequestInitCfProperties.cacheTags"]},{"name":"open var cacheTtl: Number?","description":"dev.shibasis.reaktor.core.server.cloudflare.KVNamespaceGetOptions.cacheTtl","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-k-v-namespace-get-options/cache-ttl.html","searchKeys":["cacheTtl","open var cacheTtl: Number?","dev.shibasis.reaktor.core.server.cloudflare.KVNamespaceGetOptions.cacheTtl"]},{"name":"open var cacheTtl: Number?","description":"dev.shibasis.reaktor.core.server.cloudflare.KVNamespaceGetOptionsPartial.cacheTtl","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-k-v-namespace-get-options-partial/cache-ttl.html","searchKeys":["cacheTtl","open var cacheTtl: Number?","dev.shibasis.reaktor.core.server.cloudflare.KVNamespaceGetOptionsPartial.cacheTtl"]},{"name":"open var cacheTtl: Number?","description":"dev.shibasis.reaktor.core.server.cloudflare.RequestInitCfProperties.cacheTtl","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-request-init-cf-properties/cache-ttl.html","searchKeys":["cacheTtl","open var cacheTtl: Number?","dev.shibasis.reaktor.core.server.cloudflare.RequestInitCfProperties.cacheTtl"]},{"name":"open var cacheTtlByStatus: Record<String, Number>?","description":"dev.shibasis.reaktor.core.server.cloudflare.RequestInitCfProperties.cacheTtlByStatus","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-request-init-cf-properties/cache-ttl-by-status.html","searchKeys":["cacheTtlByStatus","open var cacheTtlByStatus: Record<String, Number>?","dev.shibasis.reaktor.core.server.cloudflare.RequestInitCfProperties.cacheTtlByStatus"]},{"name":"open var cancel: (reason: Any) -> dynamic?","description":"dev.shibasis.reaktor.core.server.cloudflare.UnderlyingByteSource.cancel","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-underlying-byte-source/cancel.html","searchKeys":["cancel","open var cancel: (reason: Any) -> dynamic?","dev.shibasis.reaktor.core.server.cloudflare.UnderlyingByteSource.cancel"]},{"name":"open var cancel: (reason: Any) -> dynamic?","description":"dev.shibasis.reaktor.core.server.cloudflare.UnderlyingSource.cancel","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-underlying-source/cancel.html","searchKeys":["cancel","open var cancel: (reason: Any) -> dynamic?","dev.shibasis.reaktor.core.server.cloudflare.UnderlyingSource.cancel"]},{"name":"open var cancelBubble: Boolean","description":"dev.shibasis.reaktor.core.server.cloudflare.Event.cancelBubble","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-event/cancel-bubble.html","searchKeys":["cancelBubble","open var cancelBubble: Boolean","dev.shibasis.reaktor.core.server.cloudflare.Event.cancelBubble"]},{"name":"open var cancelable: Boolean","description":"dev.shibasis.reaktor.core.server.cloudflare.Event.cancelable","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-event/cancelable.html","searchKeys":["cancelable","open var cancelable: Boolean","dev.shibasis.reaktor.core.server.cloudflare.Event.cancelable"]},{"name":"open var cancelable: Boolean?","description":"dev.shibasis.reaktor.core.server.cloudflare.EventInit.cancelable","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-event-init/cancelable.html","searchKeys":["cancelable","open var cancelable: Boolean?","dev.shibasis.reaktor.core.server.cloudflare.EventInit.cancelable"]},{"name":"open var capture: Boolean?","description":"dev.shibasis.reaktor.core.server.cloudflare.EventTargetAddEventListenerOptions.capture","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-event-target-add-event-listener-options/capture.html","searchKeys":["capture","open var capture: Boolean?","dev.shibasis.reaktor.core.server.cloudflare.EventTargetAddEventListenerOptions.capture"]},{"name":"open var capture: Boolean?","description":"dev.shibasis.reaktor.core.server.cloudflare.EventTargetEventListenerOptions.capture","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-event-target-event-listener-options/capture.html","searchKeys":["capture","open var capture: Boolean?","dev.shibasis.reaktor.core.server.cloudflare.EventTargetEventListenerOptions.capture"]},{"name":"open var cf: Any","description":"dev.shibasis.reaktor.core.server.cloudflare.Response.cf","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-response/cf.html","searchKeys":["cf","open var cf: Any","dev.shibasis.reaktor.core.server.cloudflare.Response.cf"]},{"name":"open var cf: Any?","description":"dev.shibasis.reaktor.core.server.cloudflare.ResponseInit.cf","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-response-init/cf.html","searchKeys":["cf","open var cf: Any?","dev.shibasis.reaktor.core.server.cloudflare.ResponseInit.cf"]},{"name":"open var cf: Any?","description":"dev.shibasis.reaktor.core.server.cloudflare.TraceItemFetchEventInfoRequest.cf","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-trace-item-fetch-event-info-request/cf.html","searchKeys":["cf","open var cf: Any?","dev.shibasis.reaktor.core.server.cloudflare.TraceItemFetchEventInfoRequest.cf"]},{"name":"open var cf: Cf","description":"dev.shibasis.reaktor.core.server.cloudflare.Request.cf","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-request/cf.html","searchKeys":["cf","open var cf: Cf","dev.shibasis.reaktor.core.server.cloudflare.Request.cf"]},{"name":"open var cf: Cf?","description":"dev.shibasis.reaktor.core.server.cloudflare.RequestInit.cf","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-request-init/cf.html","searchKeys":["cf","open var cf: Cf?","dev.shibasis.reaktor.core.server.cloudflare.RequestInit.cf"]},{"name":"open var checksums: R2Checksums","description":"dev.shibasis.reaktor.core.server.cloudflare.R2Object.checksums","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-r2-object/checksums.html","searchKeys":["checksums","open var checksums: R2Checksums","dev.shibasis.reaktor.core.server.cloudflare.R2Object.checksums"]},{"name":"open var city: String?","description":"dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesGeographicInformation.city","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-incoming-request-cf-properties-geographic-information/city.html","searchKeys":["city","open var city: String?","dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesGeographicInformation.city"]},{"name":"open var clientAcceptEncoding: String?","description":"dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesBase.clientAcceptEncoding","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-incoming-request-cf-properties-base/client-accept-encoding.html","searchKeys":["clientAcceptEncoding","open var clientAcceptEncoding: String?","dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesBase.clientAcceptEncoding"]},{"name":"open var clientTcpRtt: Number?","description":"dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesBase.clientTcpRtt","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-incoming-request-cf-properties-base/client-tcp-rtt.html","searchKeys":["clientTcpRtt","open var clientTcpRtt: Number?","dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesBase.clientTcpRtt"]},{"name":"open var close: () -> dynamic?","description":"dev.shibasis.reaktor.core.server.cloudflare.UnderlyingSink.close","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-underlying-sink/close.html","searchKeys":["close","open var close: () -> dynamic?","dev.shibasis.reaktor.core.server.cloudflare.UnderlyingSink.close"]},{"name":"open var closed: Promise<Unit>","description":"dev.shibasis.reaktor.core.server.cloudflare.ReadableStreamBYOBReader.closed","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-readable-stream-b-y-o-b-reader/closed.html","searchKeys":["closed","open var closed: Promise<Unit>","dev.shibasis.reaktor.core.server.cloudflare.ReadableStreamBYOBReader.closed"]},{"name":"open var closed: Promise<Unit>","description":"dev.shibasis.reaktor.core.server.cloudflare.ReadableStreamDefaultReader.closed","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-readable-stream-default-reader/closed.html","searchKeys":["closed","open var closed: Promise<Unit>","dev.shibasis.reaktor.core.server.cloudflare.ReadableStreamDefaultReader.closed"]},{"name":"open var closed: Promise<Unit>","description":"dev.shibasis.reaktor.core.server.cloudflare.WritableStreamDefaultWriter.closed","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-writable-stream-default-writer/closed.html","searchKeys":["closed","open var closed: Promise<Unit>","dev.shibasis.reaktor.core.server.cloudflare.WritableStreamDefaultWriter.closed"]},{"name":"open var code: Number","description":"dev.shibasis.reaktor.core.server.cloudflare.CloseEvent.code","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-close-event/code.html","searchKeys":["code","open var code: Number","dev.shibasis.reaktor.core.server.cloudflare.CloseEvent.code"]},{"name":"open var code: Number?","description":"dev.shibasis.reaktor.core.server.cloudflare.CloseEventInit.code","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-close-event-init/code.html","searchKeys":["code","open var code: Number?","dev.shibasis.reaktor.core.server.cloudflare.CloseEventInit.code"]},{"name":"open var composed: Boolean","description":"dev.shibasis.reaktor.core.server.cloudflare.Event.composed","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-event/composed.html","searchKeys":["composed","open var composed: Boolean","dev.shibasis.reaktor.core.server.cloudflare.Event.composed"]},{"name":"open var composed: Boolean?","description":"dev.shibasis.reaktor.core.server.cloudflare.EventInit.composed","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-event-init/composed.html","searchKeys":["composed","open var composed: Boolean?","dev.shibasis.reaktor.core.server.cloudflare.EventInit.composed"]},{"name":"open var compressed: Boolean?","description":"dev.shibasis.reaktor.core.server.cloudflare.SubtleCryptoImportKeyAlgorithm.compressed","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-subtle-crypto-import-key-algorithm/compressed.html","searchKeys":["compressed","open var compressed: Boolean?","dev.shibasis.reaktor.core.server.cloudflare.SubtleCryptoImportKeyAlgorithm.compressed"]},{"name":"open var compression: String?","description":"dev.shibasis.reaktor.core.server.cloudflare.RequestInitCfPropertiesImage.compression","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-request-init-cf-properties-image/compression.html","searchKeys":["compression","open var compression: String?","dev.shibasis.reaktor.core.server.cloudflare.RequestInitCfPropertiesImage.compression"]},{"name":"open var contentDisposition: String?","description":"dev.shibasis.reaktor.core.server.cloudflare.R2HTTPMetadata.contentDisposition","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-r2-h-t-t-p-metadata/content-disposition.html","searchKeys":["contentDisposition","open var contentDisposition: String?","dev.shibasis.reaktor.core.server.cloudflare.R2HTTPMetadata.contentDisposition"]},{"name":"open var contentEncoding: String?","description":"dev.shibasis.reaktor.core.server.cloudflare.R2HTTPMetadata.contentEncoding","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-r2-h-t-t-p-metadata/content-encoding.html","searchKeys":["contentEncoding","open var contentEncoding: String?","dev.shibasis.reaktor.core.server.cloudflare.R2HTTPMetadata.contentEncoding"]},{"name":"open var contentLanguage: String?","description":"dev.shibasis.reaktor.core.server.cloudflare.R2HTTPMetadata.contentLanguage","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-r2-h-t-t-p-metadata/content-language.html","searchKeys":["contentLanguage","open var contentLanguage: String?","dev.shibasis.reaktor.core.server.cloudflare.R2HTTPMetadata.contentLanguage"]},{"name":"open var contentType: String?","description":"dev.shibasis.reaktor.core.server.cloudflare.R2HTTPMetadata.contentType","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-r2-h-t-t-p-metadata/content-type.html","searchKeys":["contentType","open var contentType: String?","dev.shibasis.reaktor.core.server.cloudflare.R2HTTPMetadata.contentType"]},{"name":"open var continent: String?","description":"dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesGeographicInformation.continent","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-incoming-request-cf-properties-geographic-information/continent.html","searchKeys":["continent","open var continent: String?","dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesGeographicInformation.continent"]},{"name":"open var contrast: Number?","description":"dev.shibasis.reaktor.core.server.cloudflare.RequestInitCfPropertiesImage.contrast","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-request-init-cf-properties-image/contrast.html","searchKeys":["contrast","open var contrast: Number?","dev.shibasis.reaktor.core.server.cloudflare.RequestInitCfPropertiesImage.contrast"]},{"name":"open var counter: ArrayBuffer?","description":"dev.shibasis.reaktor.core.server.cloudflare.SubtleCryptoEncryptAlgorithm.counter","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-subtle-crypto-encrypt-algorithm/counter.html","searchKeys":["counter","open var counter: ArrayBuffer?","dev.shibasis.reaktor.core.server.cloudflare.SubtleCryptoEncryptAlgorithm.counter"]},{"name":"open var country: String?","description":"dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesGeographicInformation.country","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-incoming-request-cf-properties-geographic-information/country.html","searchKeys":["country","open var country: String?","dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesGeographicInformation.country"]},{"name":"open var cpuMs: Number?","description":"dev.shibasis.reaktor.core.server.cloudflare.DynamicDispatchLimits.cpuMs","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-dynamic-dispatch-limits/cpu-ms.html","searchKeys":["cpuMs","open var cpuMs: Number?","dev.shibasis.reaktor.core.server.cloudflare.DynamicDispatchLimits.cpuMs"]},{"name":"open var cron: String","description":"dev.shibasis.reaktor.core.server.cloudflare.ScheduledEvent.cron","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-scheduled-event/cron.html","searchKeys":["cron","open var cron: String","dev.shibasis.reaktor.core.server.cloudflare.ScheduledEvent.cron"]},{"name":"open var crv: String?","description":"dev.shibasis.reaktor.core.server.cloudflare.JsonWebKey.crv","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-json-web-key/crv.html","searchKeys":["crv","open var crv: String?","dev.shibasis.reaktor.core.server.cloudflare.JsonWebKey.crv"]},{"name":"open var css: Boolean?","description":"dev.shibasis.reaktor.core.server.cloudflare.RequestInitCfPropertiesImageMinify.css","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-request-init-cf-properties-image-minify/css.html","searchKeys":["css","open var css: Boolean?","dev.shibasis.reaktor.core.server.cloudflare.RequestInitCfPropertiesImageMinify.css"]},{"name":"open var currentTarget: EventTarget__0","description":"dev.shibasis.reaktor.core.server.cloudflare.Event.currentTarget","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-event/current-target.html","searchKeys":["currentTarget","open var currentTarget: EventTarget__0","dev.shibasis.reaktor.core.server.cloudflare.Event.currentTarget"]},{"name":"open var cursor: String?","description":"dev.shibasis.reaktor.core.server.cloudflare.KVNamespaceListOptions.cursor","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-k-v-namespace-list-options/cursor.html","searchKeys":["cursor","open var cursor: String?","dev.shibasis.reaktor.core.server.cloudflare.KVNamespaceListOptions.cursor"]},{"name":"open var cursor: String?","description":"dev.shibasis.reaktor.core.server.cloudflare.R2ListOptions.cursor","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-r2-list-options/cursor.html","searchKeys":["cursor","open var cursor: String?","dev.shibasis.reaktor.core.server.cloudflare.R2ListOptions.cursor"]},{"name":"open var customMetadata: Record<String, String>","description":"dev.shibasis.reaktor.core.server.cloudflare.R2Object.customMetadata","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-r2-object/custom-metadata.html","searchKeys":["customMetadata","open var customMetadata: Record<String, String>","dev.shibasis.reaktor.core.server.cloudflare.R2Object.customMetadata"]},{"name":"open var customMetadata: Record<String, String>?","description":"dev.shibasis.reaktor.core.server.cloudflare.R2MultipartOptions.customMetadata","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-r2-multipart-options/custom-metadata.html","searchKeys":["customMetadata","open var customMetadata: Record<String, String>?","dev.shibasis.reaktor.core.server.cloudflare.R2MultipartOptions.customMetadata"]},{"name":"open var customMetadata: Record<String, String>?","description":"dev.shibasis.reaktor.core.server.cloudflare.R2PutOptions.customMetadata","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-r2-put-options/custom-metadata.html","searchKeys":["customMetadata","open var customMetadata: Record<String, String>?","dev.shibasis.reaktor.core.server.cloudflare.R2PutOptions.customMetadata"]},{"name":"open var d: String?","description":"dev.shibasis.reaktor.core.server.cloudflare.JsonWebKey.d","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-json-web-key/d.html","searchKeys":["d","open var d: String?","dev.shibasis.reaktor.core.server.cloudflare.JsonWebKey.d"]},{"name":"open var d: String?","description":"dev.shibasis.reaktor.core.server.cloudflare.RsaOtherPrimesInfo.d","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-rsa-other-primes-info/d.html","searchKeys":["d","open var d: String?","dev.shibasis.reaktor.core.server.cloudflare.RsaOtherPrimesInfo.d"]},{"name":"open var data: dynamic","description":"dev.shibasis.reaktor.core.server.cloudflare.MessageEvent.data","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-message-event/data.html","searchKeys":["data","open var data: dynamic","dev.shibasis.reaktor.core.server.cloudflare.MessageEvent.data"]},{"name":"open var data: dynamic","description":"dev.shibasis.reaktor.core.server.cloudflare.MessageEventInit.data","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-message-event-init/data.html","searchKeys":["data","open var data: dynamic","dev.shibasis.reaktor.core.server.cloudflare.MessageEventInit.data"]},{"name":"open var dataLength: Number?","description":"dev.shibasis.reaktor.core.server.cloudflare.SubtleCryptoSignAlgorithm.dataLength","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-subtle-crypto-sign-algorithm/data-length.html","searchKeys":["dataLength","open var dataLength: Number?","dev.shibasis.reaktor.core.server.cloudflare.SubtleCryptoSignAlgorithm.dataLength"]},{"name":"open var default: Cache","description":"dev.shibasis.reaktor.core.server.cloudflare.CacheStorage.default","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-cache-storage/default.html","searchKeys":["default","open var default: Cache","dev.shibasis.reaktor.core.server.cloudflare.CacheStorage.default"]},{"name":"open var defaultPrevented: Boolean","description":"dev.shibasis.reaktor.core.server.cloudflare.Event.defaultPrevented","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-event/default-prevented.html","searchKeys":["defaultPrevented","open var defaultPrevented: Boolean","dev.shibasis.reaktor.core.server.cloudflare.Event.defaultPrevented"]},{"name":"open var delimiter: String?","description":"dev.shibasis.reaktor.core.server.cloudflare.R2ListOptions.delimiter","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-r2-list-options/delimiter.html","searchKeys":["delimiter","open var delimiter: String?","dev.shibasis.reaktor.core.server.cloudflare.R2ListOptions.delimiter"]},{"name":"open var desiredSize: Number?","description":"dev.shibasis.reaktor.core.server.cloudflare.WritableStreamDefaultWriter.desiredSize","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-writable-stream-default-writer/desired-size.html","searchKeys":["desiredSize","open var desiredSize: Number?","dev.shibasis.reaktor.core.server.cloudflare.WritableStreamDefaultWriter.desiredSize"]},{"name":"open var digest: Promise<ArrayBuffer>","description":"dev.shibasis.reaktor.core.server.cloudflare.DigestStream.digest","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-digest-stream/digest.html","searchKeys":["digest","open var digest: Promise<ArrayBuffer>","dev.shibasis.reaktor.core.server.cloudflare.DigestStream.digest"]},{"name":"open var dispatchNamespace: String?","description":"dev.shibasis.reaktor.core.server.cloudflare.TraceItem.dispatchNamespace","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-trace-item/dispatch-namespace.html","searchKeys":["dispatchNamespace","open var dispatchNamespace: String?","dev.shibasis.reaktor.core.server.cloudflare.TraceItem.dispatchNamespace"]},{"name":"open var doubles: Array<Number>?","description":"dev.shibasis.reaktor.core.server.cloudflare.AnalyticsEngineDataPoint.doubles","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-analytics-engine-data-point/doubles.html","searchKeys":["doubles","open var doubles: Array<Number>?","dev.shibasis.reaktor.core.server.cloudflare.AnalyticsEngineDataPoint.doubles"]},{"name":"open var dp: String?","description":"dev.shibasis.reaktor.core.server.cloudflare.JsonWebKey.dp","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-json-web-key/dp.html","searchKeys":["dp","open var dp: String?","dev.shibasis.reaktor.core.server.cloudflare.JsonWebKey.dp"]},{"name":"open var dpr: Number?","description":"dev.shibasis.reaktor.core.server.cloudflare.RequestInitCfPropertiesImage.dpr","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-request-init-cf-properties-image/dpr.html","searchKeys":["dpr","open var dpr: Number?","dev.shibasis.reaktor.core.server.cloudflare.RequestInitCfPropertiesImage.dpr"]},{"name":"open var dq: String?","description":"dev.shibasis.reaktor.core.server.cloudflare.JsonWebKey.dq","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-json-web-key/dq.html","searchKeys":["dq","open var dq: String?","dev.shibasis.reaktor.core.server.cloudflare.JsonWebKey.dq"]},{"name":"open var draw: Array<RequestInitCfPropertiesImageDraw>?","description":"dev.shibasis.reaktor.core.server.cloudflare.RequestInitCfPropertiesImage.draw","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-request-init-cf-properties-image/draw.html","searchKeys":["draw","open var draw: Array<RequestInitCfPropertiesImageDraw>?","dev.shibasis.reaktor.core.server.cloudflare.RequestInitCfPropertiesImage.draw"]},{"name":"open var e: String?","description":"dev.shibasis.reaktor.core.server.cloudflare.JsonWebKey.e","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-json-web-key/e.html","searchKeys":["e","open var e: String?","dev.shibasis.reaktor.core.server.cloudflare.JsonWebKey.e"]},{"name":"open var email: EmailExportedHandler<Env>?","description":"dev.shibasis.reaktor.core.server.cloudflare.ExportedHandler.email","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-exported-handler/email.html","searchKeys":["email","open var email: EmailExportedHandler<Env>?","dev.shibasis.reaktor.core.server.cloudflare.ExportedHandler.email"]},{"name":"open var encodeBody: String?","description":"dev.shibasis.reaktor.core.server.cloudflare.ResponseInit.encodeBody","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-response-init/encode-body.html","searchKeys":["encodeBody","open var encodeBody: String?","dev.shibasis.reaktor.core.server.cloudflare.ResponseInit.encodeBody"]},{"name":"open var encoding: String","description":"dev.shibasis.reaktor.core.server.cloudflare.TextDecoder.encoding","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-text-decoder/encoding.html","searchKeys":["encoding","open var encoding: String","dev.shibasis.reaktor.core.server.cloudflare.TextDecoder.encoding"]},{"name":"open var encoding: String","description":"dev.shibasis.reaktor.core.server.cloudflare.TextEncoder.encoding","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-text-encoder/encoding.html","searchKeys":["encoding","open var encoding: String","dev.shibasis.reaktor.core.server.cloudflare.TextEncoder.encoding"]},{"name":"open var end: String?","description":"dev.shibasis.reaktor.core.server.cloudflare.DurableObjectListOptions.end","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-durable-object-list-options/end.html","searchKeys":["end","open var end: String?","dev.shibasis.reaktor.core.server.cloudflare.DurableObjectListOptions.end"]},{"name":"open var error: Any?","description":"dev.shibasis.reaktor.core.server.cloudflare.D1Result.error","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-d1-result/error.html","searchKeys":["error","open var error: Any?","dev.shibasis.reaktor.core.server.cloudflare.D1Result.error"]},{"name":"open var etag: String","description":"dev.shibasis.reaktor.core.server.cloudflare.R2Object.etag","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-r2-object/etag.html","searchKeys":["etag","open var etag: String","dev.shibasis.reaktor.core.server.cloudflare.R2Object.etag"]},{"name":"open var etagDoesNotMatch: String?","description":"dev.shibasis.reaktor.core.server.cloudflare.R2Conditional.etagDoesNotMatch","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-r2-conditional/etag-does-not-match.html","searchKeys":["etagDoesNotMatch","open var etagDoesNotMatch: String?","dev.shibasis.reaktor.core.server.cloudflare.R2Conditional.etagDoesNotMatch"]},{"name":"open var etagMatches: String?","description":"dev.shibasis.reaktor.core.server.cloudflare.R2Conditional.etagMatches","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-r2-conditional/etag-matches.html","searchKeys":["etagMatches","open var etagMatches: String?","dev.shibasis.reaktor.core.server.cloudflare.R2Conditional.etagMatches"]},{"name":"open var event: dynamic","description":"dev.shibasis.reaktor.core.server.cloudflare.TraceItem.event","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-trace-item/event.html","searchKeys":["event","open var event: dynamic","dev.shibasis.reaktor.core.server.cloudflare.TraceItem.event"]},{"name":"open var eventPhase: Number","description":"dev.shibasis.reaktor.core.server.cloudflare.Event.eventPhase","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-event/event-phase.html","searchKeys":["eventPhase","open var eventPhase: Number","dev.shibasis.reaktor.core.server.cloudflare.Event.eventPhase"]},{"name":"open var events: Array<TraceItem>","description":"dev.shibasis.reaktor.core.server.cloudflare.TailEvent.events","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-tail-event/events.html","searchKeys":["events","open var events: Array<TraceItem>","dev.shibasis.reaktor.core.server.cloudflare.TailEvent.events"]},{"name":"open var expectedServerHostname: String?","description":"dev.shibasis.reaktor.core.server.cloudflare.TlsOptions.expectedServerHostname","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-tls-options/expected-server-hostname.html","searchKeys":["expectedServerHostname","open var expectedServerHostname: String?","dev.shibasis.reaktor.core.server.cloudflare.TlsOptions.expectedServerHostname"]},{"name":"open var expiration: Number?","description":"dev.shibasis.reaktor.core.server.cloudflare.FetcherPutOptions.expiration","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-fetcher-put-options/expiration.html","searchKeys":["expiration","open var expiration: Number?","dev.shibasis.reaktor.core.server.cloudflare.FetcherPutOptions.expiration"]},{"name":"open var expiration: Number?","description":"dev.shibasis.reaktor.core.server.cloudflare.KVNamespaceListKey.expiration","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-k-v-namespace-list-key/expiration.html","searchKeys":["expiration","open var expiration: Number?","dev.shibasis.reaktor.core.server.cloudflare.KVNamespaceListKey.expiration"]},{"name":"open var expiration: Number?","description":"dev.shibasis.reaktor.core.server.cloudflare.KVNamespacePutOptions.expiration","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-k-v-namespace-put-options/expiration.html","searchKeys":["expiration","open var expiration: Number?","dev.shibasis.reaktor.core.server.cloudflare.KVNamespacePutOptions.expiration"]},{"name":"open var expirationTtl: Number?","description":"dev.shibasis.reaktor.core.server.cloudflare.FetcherPutOptions.expirationTtl","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-fetcher-put-options/expiration-ttl.html","searchKeys":["expirationTtl","open var expirationTtl: Number?","dev.shibasis.reaktor.core.server.cloudflare.FetcherPutOptions.expirationTtl"]},{"name":"open var expirationTtl: Number?","description":"dev.shibasis.reaktor.core.server.cloudflare.KVNamespacePutOptions.expirationTtl","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-k-v-namespace-put-options/expiration-ttl.html","searchKeys":["expirationTtl","open var expirationTtl: Number?","dev.shibasis.reaktor.core.server.cloudflare.KVNamespacePutOptions.expirationTtl"]},{"name":"open var ext: Boolean?","description":"dev.shibasis.reaktor.core.server.cloudflare.JsonWebKey.ext","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-json-web-key/ext.html","searchKeys":["ext","open var ext: Boolean?","dev.shibasis.reaktor.core.server.cloudflare.JsonWebKey.ext"]},{"name":"open var extensions: String?","description":"dev.shibasis.reaktor.core.server.cloudflare.WebSocket.extensions","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-web-socket/extensions.html","searchKeys":["extensions","open var extensions: String?","dev.shibasis.reaktor.core.server.cloudflare.WebSocket.extensions"]},{"name":"open var extractable: Boolean","description":"dev.shibasis.reaktor.core.server.cloudflare.CryptoKey.extractable","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-crypto-key/extractable.html","searchKeys":["extractable","open var extractable: Boolean","dev.shibasis.reaktor.core.server.cloudflare.CryptoKey.extractable"]},{"name":"open var fatal: Boolean","description":"dev.shibasis.reaktor.core.server.cloudflare.TextDecoder.fatal","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-text-decoder/fatal.html","searchKeys":["fatal","open var fatal: Boolean","dev.shibasis.reaktor.core.server.cloudflare.TextDecoder.fatal"]},{"name":"open var fatal: Boolean?","description":"dev.shibasis.reaktor.core.server.cloudflare.TextDecoderStreamTextDecoderStreamInit.fatal","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-text-decoder-stream-text-decoder-stream-init/fatal.html","searchKeys":["fatal","open var fatal: Boolean?","dev.shibasis.reaktor.core.server.cloudflare.TextDecoderStreamTextDecoderStreamInit.fatal"]},{"name":"open var fetch: ExportedHandlerFetchHandler<Env, CfHostMetadata>?","description":"dev.shibasis.reaktor.core.server.cloudflare.ExportedHandler.fetch","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-exported-handler/fetch.html","searchKeys":["fetch","open var fetch: ExportedHandlerFetchHandler<Env, CfHostMetadata>?","dev.shibasis.reaktor.core.server.cloudflare.ExportedHandler.fetch"]},{"name":"open var fetcher: Fetcher?","description":"dev.shibasis.reaktor.core.server.cloudflare.Request.fetcher","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-request/fetcher.html","searchKeys":["fetcher","open var fetcher: Fetcher?","dev.shibasis.reaktor.core.server.cloudflare.Request.fetcher"]},{"name":"open var fetcher: Fetcher?","description":"dev.shibasis.reaktor.core.server.cloudflare.RequestInit.fetcher","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-request-init/fetcher.html","searchKeys":["fetcher","open var fetcher: Fetcher?","dev.shibasis.reaktor.core.server.cloudflare.RequestInit.fetcher"]},{"name":"open var fit: String?","description":"dev.shibasis.reaktor.core.server.cloudflare.BasicImageTransformations.fit","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-basic-image-transformations/fit.html","searchKeys":["fit","open var fit: String?","dev.shibasis.reaktor.core.server.cloudflare.BasicImageTransformations.fit"]},{"name":"open var flush: (controller: TransformStreamDefaultController<O>) -> dynamic?","description":"dev.shibasis.reaktor.core.server.cloudflare.Transformer.flush","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-transformer/flush.html","searchKeys":["flush","open var flush: (controller: TransformStreamDefaultController<O>) -> dynamic?","dev.shibasis.reaktor.core.server.cloudflare.Transformer.flush"]},{"name":"open var format: String?","description":"dev.shibasis.reaktor.core.server.cloudflare.RequestInitCfPropertiesImage.format","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-request-init-cf-properties-image/format.html","searchKeys":["format","open var format: String?","dev.shibasis.reaktor.core.server.cloudflare.RequestInitCfPropertiesImage.format"]},{"name":"open var gamma: Number?","description":"dev.shibasis.reaktor.core.server.cloudflare.RequestInitCfPropertiesImage.gamma","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-request-init-cf-properties-image/gamma.html","searchKeys":["gamma","open var gamma: Number?","dev.shibasis.reaktor.core.server.cloudflare.RequestInitCfPropertiesImage.gamma"]},{"name":"open var gravity: dynamic","description":"dev.shibasis.reaktor.core.server.cloudflare.BasicImageTransformations.gravity","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-basic-image-transformations/gravity.html","searchKeys":["gravity","open var gravity: dynamic","dev.shibasis.reaktor.core.server.cloudflare.BasicImageTransformations.gravity"]},{"name":"open var hash: CryptoKeyKeyAlgorithm?","description":"dev.shibasis.reaktor.core.server.cloudflare.CryptoKeyArbitraryKeyAlgorithm.hash","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-crypto-key-arbitrary-key-algorithm/hash.html","searchKeys":["hash","open var hash: CryptoKeyKeyAlgorithm?","dev.shibasis.reaktor.core.server.cloudflare.CryptoKeyArbitraryKeyAlgorithm.hash"]},{"name":"open var hash: CryptoKeyKeyAlgorithm?","description":"dev.shibasis.reaktor.core.server.cloudflare.CryptoKeyRsaKeyAlgorithm.hash","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-crypto-key-rsa-key-algorithm/hash.html","searchKeys":["hash","open var hash: CryptoKeyKeyAlgorithm?","dev.shibasis.reaktor.core.server.cloudflare.CryptoKeyRsaKeyAlgorithm.hash"]},{"name":"open var hash: String","description":"dev.shibasis.reaktor.core.server.cloudflare.URL.hash","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-u-r-l/hash.html","searchKeys":["hash","open var hash: String","dev.shibasis.reaktor.core.server.cloudflare.URL.hash"]},{"name":"open var hash: String?","description":"dev.shibasis.reaktor.core.server.cloudflare.URLPatternURLPatternInit.hash","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-u-r-l-pattern-u-r-l-pattern-init/hash.html","searchKeys":["hash","open var hash: String?","dev.shibasis.reaktor.core.server.cloudflare.URLPatternURLPatternInit.hash"]},{"name":"open var hash: dynamic","description":"dev.shibasis.reaktor.core.server.cloudflare.SubtleCryptoDeriveKeyAlgorithm.hash","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-subtle-crypto-derive-key-algorithm/hash.html","searchKeys":["hash","open var hash: dynamic","dev.shibasis.reaktor.core.server.cloudflare.SubtleCryptoDeriveKeyAlgorithm.hash"]},{"name":"open var hash: dynamic","description":"dev.shibasis.reaktor.core.server.cloudflare.SubtleCryptoGenerateKeyAlgorithm.hash","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-subtle-crypto-generate-key-algorithm/hash.html","searchKeys":["hash","open var hash: dynamic","dev.shibasis.reaktor.core.server.cloudflare.SubtleCryptoGenerateKeyAlgorithm.hash"]},{"name":"open var hash: dynamic","description":"dev.shibasis.reaktor.core.server.cloudflare.SubtleCryptoImportKeyAlgorithm.hash","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-subtle-crypto-import-key-algorithm/hash.html","searchKeys":["hash","open var hash: dynamic","dev.shibasis.reaktor.core.server.cloudflare.SubtleCryptoImportKeyAlgorithm.hash"]},{"name":"open var hash: dynamic","description":"dev.shibasis.reaktor.core.server.cloudflare.SubtleCryptoSignAlgorithm.hash","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-subtle-crypto-sign-algorithm/hash.html","searchKeys":["hash","open var hash: dynamic","dev.shibasis.reaktor.core.server.cloudflare.SubtleCryptoSignAlgorithm.hash"]},{"name":"open var headers: Headers","description":"dev.shibasis.reaktor.core.server.cloudflare.Request.headers","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-request/headers.html","searchKeys":["headers","open var headers: Headers","dev.shibasis.reaktor.core.server.cloudflare.Request.headers"]},{"name":"open var headers: Headers","description":"dev.shibasis.reaktor.core.server.cloudflare.Response.headers","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-response/headers.html","searchKeys":["headers","open var headers: Headers","dev.shibasis.reaktor.core.server.cloudflare.Response.headers"]},{"name":"open var headers: dynamic","description":"dev.shibasis.reaktor.core.server.cloudflare.RequestInit.headers","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-request-init/headers.html","searchKeys":["headers","open var headers: dynamic","dev.shibasis.reaktor.core.server.cloudflare.RequestInit.headers"]},{"name":"open var headers: dynamic","description":"dev.shibasis.reaktor.core.server.cloudflare.ResponseInit.headers","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-response-init/headers.html","searchKeys":["headers","open var headers: dynamic","dev.shibasis.reaktor.core.server.cloudflare.ResponseInit.headers"]},{"name":"open var height: Number?","description":"dev.shibasis.reaktor.core.server.cloudflare.BasicImageTransformations.height","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-basic-image-transformations/height.html","searchKeys":["height","open var height: Number?","dev.shibasis.reaktor.core.server.cloudflare.BasicImageTransformations.height"]},{"name":"open var highWaterMark: dynamic","description":"dev.shibasis.reaktor.core.server.cloudflare.IdentityTransformStreamQueuingStrategy.highWaterMark","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-identity-transform-stream-queuing-strategy/high-water-mark.html","searchKeys":["highWaterMark","open var highWaterMark: dynamic","dev.shibasis.reaktor.core.server.cloudflare.IdentityTransformStreamQueuingStrategy.highWaterMark"]},{"name":"open var highWaterMark: dynamic","description":"dev.shibasis.reaktor.core.server.cloudflare.QueuingStrategy.highWaterMark","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-queuing-strategy/high-water-mark.html","searchKeys":["highWaterMark","open var highWaterMark: dynamic","dev.shibasis.reaktor.core.server.cloudflare.QueuingStrategy.highWaterMark"]},{"name":"open var host: String","description":"dev.shibasis.reaktor.core.server.cloudflare.URL.host","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-u-r-l/host.html","searchKeys":["host","open var host: String","dev.shibasis.reaktor.core.server.cloudflare.URL.host"]},{"name":"open var hostname: String","description":"dev.shibasis.reaktor.core.server.cloudflare.URL.hostname","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-u-r-l/hostname.html","searchKeys":["hostname","open var hostname: String","dev.shibasis.reaktor.core.server.cloudflare.URL.hostname"]},{"name":"open var hostname: String?","description":"dev.shibasis.reaktor.core.server.cloudflare.URLPatternURLPatternInit.hostname","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-u-r-l-pattern-u-r-l-pattern-init/hostname.html","searchKeys":["hostname","open var hostname: String?","dev.shibasis.reaktor.core.server.cloudflare.URLPatternURLPatternInit.hostname"]},{"name":"open var href: String","description":"dev.shibasis.reaktor.core.server.cloudflare.URL.href","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-u-r-l/href.html","searchKeys":["href","open var href: String","dev.shibasis.reaktor.core.server.cloudflare.URL.href"]},{"name":"open var html: Boolean?","description":"dev.shibasis.reaktor.core.server.cloudflare.ContentOptions.html","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-content-options/html.html","searchKeys":["html","open var html: Boolean?","dev.shibasis.reaktor.core.server.cloudflare.ContentOptions.html"]},{"name":"open var html: Boolean?","description":"dev.shibasis.reaktor.core.server.cloudflare.RequestInitCfPropertiesImageMinify.html","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-request-init-cf-properties-image-minify/html.html","searchKeys":["html","open var html: Boolean?","dev.shibasis.reaktor.core.server.cloudflare.RequestInitCfPropertiesImageMinify.html"]},{"name":"open var httpEtag: String","description":"dev.shibasis.reaktor.core.server.cloudflare.R2Object.httpEtag","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-r2-object/http-etag.html","searchKeys":["httpEtag","open var httpEtag: String","dev.shibasis.reaktor.core.server.cloudflare.R2Object.httpEtag"]},{"name":"open var httpMetadata: R2HTTPMetadata","description":"dev.shibasis.reaktor.core.server.cloudflare.R2Object.httpMetadata","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-r2-object/http-metadata.html","searchKeys":["httpMetadata","open var httpMetadata: R2HTTPMetadata","dev.shibasis.reaktor.core.server.cloudflare.R2Object.httpMetadata"]},{"name":"open var httpMetadata: dynamic","description":"dev.shibasis.reaktor.core.server.cloudflare.R2MultipartOptions.httpMetadata","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-r2-multipart-options/http-metadata.html","searchKeys":["httpMetadata","open var httpMetadata: dynamic","dev.shibasis.reaktor.core.server.cloudflare.R2MultipartOptions.httpMetadata"]},{"name":"open var httpMetadata: dynamic","description":"dev.shibasis.reaktor.core.server.cloudflare.R2PutOptions.httpMetadata","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-r2-put-options/http-metadata.html","searchKeys":["httpMetadata","open var httpMetadata: dynamic","dev.shibasis.reaktor.core.server.cloudflare.R2PutOptions.httpMetadata"]},{"name":"open var ignoreBOM: Boolean","description":"dev.shibasis.reaktor.core.server.cloudflare.TextDecoder.ignoreBOM","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-text-decoder/ignore-b-o-m.html","searchKeys":["ignoreBOM","open var ignoreBOM: Boolean","dev.shibasis.reaktor.core.server.cloudflare.TextDecoder.ignoreBOM"]},{"name":"open var ignoreMethod: Boolean?","description":"dev.shibasis.reaktor.core.server.cloudflare.CacheQueryOptions.ignoreMethod","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-cache-query-options/ignore-method.html","searchKeys":["ignoreMethod","open var ignoreMethod: Boolean?","dev.shibasis.reaktor.core.server.cloudflare.CacheQueryOptions.ignoreMethod"]},{"name":"open var image: RequestInitCfPropertiesImage?","description":"dev.shibasis.reaktor.core.server.cloudflare.RequestInitCfProperties.image","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-request-init-cf-properties/image.html","searchKeys":["image","open var image: RequestInitCfPropertiesImage?","dev.shibasis.reaktor.core.server.cloudflare.RequestInitCfProperties.image"]},{"name":"open var indexes: Array<dynamic>?","description":"dev.shibasis.reaktor.core.server.cloudflare.AnalyticsEngineDataPoint.indexes","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-analytics-engine-data-point/indexes.html","searchKeys":["indexes","open var indexes: Array<dynamic>?","dev.shibasis.reaktor.core.server.cloudflare.AnalyticsEngineDataPoint.indexes"]},{"name":"open var info: ArrayBuffer?","description":"dev.shibasis.reaktor.core.server.cloudflare.SubtleCryptoDeriveKeyAlgorithm.info","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-subtle-crypto-derive-key-algorithm/info.html","searchKeys":["info","open var info: ArrayBuffer?","dev.shibasis.reaktor.core.server.cloudflare.SubtleCryptoDeriveKeyAlgorithm.info"]},{"name":"open var integrity: String","description":"dev.shibasis.reaktor.core.server.cloudflare.Request.integrity","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-request/integrity.html","searchKeys":["integrity","open var integrity: String","dev.shibasis.reaktor.core.server.cloudflare.Request.integrity"]},{"name":"open var integrity: String?","description":"dev.shibasis.reaktor.core.server.cloudflare.RequestInit.integrity","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-request-init/integrity.html","searchKeys":["integrity","open var integrity: String?","dev.shibasis.reaktor.core.server.cloudflare.RequestInit.integrity"]},{"name":"open var isEUCountry: String?","description":"dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesGeographicInformation.isEUCountry","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-incoming-request-cf-properties-geographic-information/is-e-u-country.html","searchKeys":["isEUCountry","open var isEUCountry: String?","dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesGeographicInformation.isEUCountry"]},{"name":"open var isTrusted: Boolean","description":"dev.shibasis.reaktor.core.server.cloudflare.Event.isTrusted","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-event/is-trusted.html","searchKeys":["isTrusted","open var isTrusted: Boolean","dev.shibasis.reaktor.core.server.cloudflare.Event.isTrusted"]},{"name":"open var iterations: Number?","description":"dev.shibasis.reaktor.core.server.cloudflare.SubtleCryptoDeriveKeyAlgorithm.iterations","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-subtle-crypto-derive-key-algorithm/iterations.html","searchKeys":["iterations","open var iterations: Number?","dev.shibasis.reaktor.core.server.cloudflare.SubtleCryptoDeriveKeyAlgorithm.iterations"]},{"name":"open var iv: ArrayBuffer?","description":"dev.shibasis.reaktor.core.server.cloudflare.SubtleCryptoEncryptAlgorithm.iv","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-subtle-crypto-encrypt-algorithm/iv.html","searchKeys":["iv","open var iv: ArrayBuffer?","dev.shibasis.reaktor.core.server.cloudflare.SubtleCryptoEncryptAlgorithm.iv"]},{"name":"open var javascript: Boolean?","description":"dev.shibasis.reaktor.core.server.cloudflare.RequestInitCfPropertiesImageMinify.javascript","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-request-init-cf-properties-image-minify/javascript.html","searchKeys":["javascript","open var javascript: Boolean?","dev.shibasis.reaktor.core.server.cloudflare.RequestInitCfPropertiesImageMinify.javascript"]},{"name":"open var jti: String?","description":"dev.shibasis.reaktor.core.server.cloudflare.PubSubMessage.jti","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-pub-sub-message/jti.html","searchKeys":["jti","open var jti: String?","dev.shibasis.reaktor.core.server.cloudflare.PubSubMessage.jti"]},{"name":"open var jurisdiction: String?","description":"dev.shibasis.reaktor.core.server.cloudflare.DurableObjectNamespaceNewUniqueIdOptions.jurisdiction","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-durable-object-namespace-new-unique-id-options/jurisdiction.html","searchKeys":["jurisdiction","open var jurisdiction: String?","dev.shibasis.reaktor.core.server.cloudflare.DurableObjectNamespaceNewUniqueIdOptions.jurisdiction"]},{"name":"open var k: String?","description":"dev.shibasis.reaktor.core.server.cloudflare.JsonWebKey.k","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-json-web-key/k.html","searchKeys":["k","open var k: String?","dev.shibasis.reaktor.core.server.cloudflare.JsonWebKey.k"]},{"name":"open var keepalive: Boolean","description":"dev.shibasis.reaktor.core.server.cloudflare.Request.keepalive","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-request/keepalive.html","searchKeys":["keepalive","open var keepalive: Boolean","dev.shibasis.reaktor.core.server.cloudflare.Request.keepalive"]},{"name":"open var key: String","description":"dev.shibasis.reaktor.core.server.cloudflare.R2Object.key","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-r2-object/key.html","searchKeys":["key","open var key: String","dev.shibasis.reaktor.core.server.cloudflare.R2Object.key"]},{"name":"open var key_ops: Array<String>?","description":"dev.shibasis.reaktor.core.server.cloudflare.JsonWebKey.key_ops","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-json-web-key/key_ops.html","searchKeys":["key_ops","open var key_ops: Array<String>?","dev.shibasis.reaktor.core.server.cloudflare.JsonWebKey.key_ops"]},{"name":"open var label: ArrayBuffer?","description":"dev.shibasis.reaktor.core.server.cloudflare.SubtleCryptoEncryptAlgorithm.label","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-subtle-crypto-encrypt-algorithm/label.html","searchKeys":["label","open var label: ArrayBuffer?","dev.shibasis.reaktor.core.server.cloudflare.SubtleCryptoEncryptAlgorithm.label"]},{"name":"open var lastModified: Number?","description":"dev.shibasis.reaktor.core.server.cloudflare.FileOptions.lastModified","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-file-options/last-modified.html","searchKeys":["lastModified","open var lastModified: Number?","dev.shibasis.reaktor.core.server.cloudflare.FileOptions.lastModified"]},{"name":"open var latitude: String?","description":"dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesGeographicInformation.latitude","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-incoming-request-cf-properties-geographic-information/latitude.html","searchKeys":["latitude","open var latitude: String?","dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesGeographicInformation.latitude"]},{"name":"open var left: Number?","description":"dev.shibasis.reaktor.core.server.cloudflare.RequestInitCfPropertiesImageDraw.left","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-request-init-cf-properties-image-draw/left.html","searchKeys":["left","open var left: Number?","dev.shibasis.reaktor.core.server.cloudflare.RequestInitCfPropertiesImageDraw.left"]},{"name":"open var left: Number?","description":"dev.shibasis.reaktor.core.server.cloudflare.T$1.left","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-t$1/left.html","searchKeys":["left","open var left: Number?","dev.shibasis.reaktor.core.server.cloudflare.T$1.left"]},{"name":"open var length: Number?","description":"dev.shibasis.reaktor.core.server.cloudflare.CryptoKeyArbitraryKeyAlgorithm.length","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-crypto-key-arbitrary-key-algorithm/length.html","searchKeys":["length","open var length: Number?","dev.shibasis.reaktor.core.server.cloudflare.CryptoKeyArbitraryKeyAlgorithm.length"]},{"name":"open var length: Number?","description":"dev.shibasis.reaktor.core.server.cloudflare.SubtleCryptoEncryptAlgorithm.length","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-subtle-crypto-encrypt-algorithm/length.html","searchKeys":["length","open var length: Number?","dev.shibasis.reaktor.core.server.cloudflare.SubtleCryptoEncryptAlgorithm.length"]},{"name":"open var length: Number?","description":"dev.shibasis.reaktor.core.server.cloudflare.SubtleCryptoGenerateKeyAlgorithm.length","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-subtle-crypto-generate-key-algorithm/length.html","searchKeys":["length","open var length: Number?","dev.shibasis.reaktor.core.server.cloudflare.SubtleCryptoGenerateKeyAlgorithm.length"]},{"name":"open var length: Number?","description":"dev.shibasis.reaktor.core.server.cloudflare.SubtleCryptoImportKeyAlgorithm.length","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-subtle-crypto-import-key-algorithm/length.html","searchKeys":["length","open var length: Number?","dev.shibasis.reaktor.core.server.cloudflare.SubtleCryptoImportKeyAlgorithm.length"]},{"name":"open var limit: Number?","description":"dev.shibasis.reaktor.core.server.cloudflare.DurableObjectListOptions.limit","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-durable-object-list-options/limit.html","searchKeys":["limit","open var limit: Number?","dev.shibasis.reaktor.core.server.cloudflare.DurableObjectListOptions.limit"]},{"name":"open var limit: Number?","description":"dev.shibasis.reaktor.core.server.cloudflare.KVNamespaceListOptions.limit","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-k-v-namespace-list-options/limit.html","searchKeys":["limit","open var limit: Number?","dev.shibasis.reaktor.core.server.cloudflare.KVNamespaceListOptions.limit"]},{"name":"open var limit: Number?","description":"dev.shibasis.reaktor.core.server.cloudflare.R2ListOptions.limit","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-r2-list-options/limit.html","searchKeys":["limit","open var limit: Number?","dev.shibasis.reaktor.core.server.cloudflare.R2ListOptions.limit"]},{"name":"open var limits: DynamicDispatchLimits?","description":"dev.shibasis.reaktor.core.server.cloudflare.DynamicDispatchOptions.limits","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-dynamic-dispatch-options/limits.html","searchKeys":["limits","open var limits: DynamicDispatchLimits?","dev.shibasis.reaktor.core.server.cloudflare.DynamicDispatchOptions.limits"]},{"name":"open var locationHint: String?","description":"dev.shibasis.reaktor.core.server.cloudflare.DurableObjectNamespaceGetDurableObjectOptions.locationHint","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-durable-object-namespace-get-durable-object-options/location-hint.html","searchKeys":["locationHint","open var locationHint: String?","dev.shibasis.reaktor.core.server.cloudflare.DurableObjectNamespaceGetDurableObjectOptions.locationHint"]},{"name":"open var locked: Boolean","description":"dev.shibasis.reaktor.core.server.cloudflare.WritableStream.locked","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-writable-stream/locked.html","searchKeys":["locked","open var locked: Boolean","dev.shibasis.reaktor.core.server.cloudflare.WritableStream.locked"]},{"name":"open var longitude: String?","description":"dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesGeographicInformation.longitude","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-incoming-request-cf-properties-geographic-information/longitude.html","searchKeys":["longitude","open var longitude: String?","dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesGeographicInformation.longitude"]},{"name":"open var md5: ArrayBuffer?","description":"dev.shibasis.reaktor.core.server.cloudflare.R2Checksums.md5","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-r2-checksums/md5.html","searchKeys":["md5","open var md5: ArrayBuffer?","dev.shibasis.reaktor.core.server.cloudflare.R2Checksums.md5"]},{"name":"open var md5: String?","description":"dev.shibasis.reaktor.core.server.cloudflare.R2StringChecksums.md5","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-r2-string-checksums/md5.html","searchKeys":["md5","open var md5: String?","dev.shibasis.reaktor.core.server.cloudflare.R2StringChecksums.md5"]},{"name":"open var md5: dynamic","description":"dev.shibasis.reaktor.core.server.cloudflare.R2PutOptions.md5","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-r2-put-options/md5.html","searchKeys":["md5","open var md5: dynamic","dev.shibasis.reaktor.core.server.cloudflare.R2PutOptions.md5"]},{"name":"open var message: ForwardableEmailMessage","description":"dev.shibasis.reaktor.core.server.cloudflare.EmailEvent.message","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-email-event/message.html","searchKeys":["message","open var message: ForwardableEmailMessage","dev.shibasis.reaktor.core.server.cloudflare.EmailEvent.message"]},{"name":"open var metadata: Any?","description":"dev.shibasis.reaktor.core.server.cloudflare.KVNamespacePutOptions.metadata","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-k-v-namespace-put-options/metadata.html","searchKeys":["metadata","open var metadata: Any?","dev.shibasis.reaktor.core.server.cloudflare.KVNamespacePutOptions.metadata"]},{"name":"open var metadata: Metadata?","description":"dev.shibasis.reaktor.core.server.cloudflare.KVNamespaceListKey.metadata","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-k-v-namespace-list-key/metadata.html","searchKeys":["metadata","open var metadata: Metadata?","dev.shibasis.reaktor.core.server.cloudflare.KVNamespaceListKey.metadata"]},{"name":"open var metadata: String?","description":"dev.shibasis.reaktor.core.server.cloudflare.RequestInitCfPropertiesImage.metadata","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-request-init-cf-properties-image/metadata.html","searchKeys":["metadata","open var metadata: String?","dev.shibasis.reaktor.core.server.cloudflare.RequestInitCfPropertiesImage.metadata"]},{"name":"open var method: String","description":"dev.shibasis.reaktor.core.server.cloudflare.Request.method","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-request/method.html","searchKeys":["method","open var method: String","dev.shibasis.reaktor.core.server.cloudflare.Request.method"]},{"name":"open var method: String?","description":"dev.shibasis.reaktor.core.server.cloudflare.RequestInit.method","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-request-init/method.html","searchKeys":["method","open var method: String?","dev.shibasis.reaktor.core.server.cloudflare.RequestInit.method"]},{"name":"open var metroCode: String?","description":"dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesGeographicInformation.metroCode","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-incoming-request-cf-properties-geographic-information/metro-code.html","searchKeys":["metroCode","open var metroCode: String?","dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesGeographicInformation.metroCode"]},{"name":"open var minify: RequestInitCfPropertiesImageMinify?","description":"dev.shibasis.reaktor.core.server.cloudflare.RequestInitCfProperties.minify","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-request-init-cf-properties/minify.html","searchKeys":["minify","open var minify: RequestInitCfPropertiesImageMinify?","dev.shibasis.reaktor.core.server.cloudflare.RequestInitCfProperties.minify"]},{"name":"open var mirage: Boolean?","description":"dev.shibasis.reaktor.core.server.cloudflare.RequestInitCfProperties.mirage","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-request-init-cf-properties/mirage.html","searchKeys":["mirage","open var mirage: Boolean?","dev.shibasis.reaktor.core.server.cloudflare.RequestInitCfProperties.mirage"]},{"name":"open var modulusLength: Number?","description":"dev.shibasis.reaktor.core.server.cloudflare.SubtleCryptoGenerateKeyAlgorithm.modulusLength","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-subtle-crypto-generate-key-algorithm/modulus-length.html","searchKeys":["modulusLength","open var modulusLength: Number?","dev.shibasis.reaktor.core.server.cloudflare.SubtleCryptoGenerateKeyAlgorithm.modulusLength"]},{"name":"open var n: String?","description":"dev.shibasis.reaktor.core.server.cloudflare.JsonWebKey.n","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-json-web-key/n.html","searchKeys":["n","open var n: String?","dev.shibasis.reaktor.core.server.cloudflare.JsonWebKey.n"]},{"name":"open var name: String?","description":"dev.shibasis.reaktor.core.server.cloudflare.DurableObjectId.name","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-durable-object-id/name.html","searchKeys":["name","open var name: String?","dev.shibasis.reaktor.core.server.cloudflare.DurableObjectId.name"]},{"name":"open var name: String?","description":"dev.shibasis.reaktor.core.server.cloudflare.DurableObjectStub.name","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-durable-object-stub/name.html","searchKeys":["name","open var name: String?","dev.shibasis.reaktor.core.server.cloudflare.DurableObjectStub.name"]},{"name":"open var namedCurve: String?","description":"dev.shibasis.reaktor.core.server.cloudflare.CryptoKeyArbitraryKeyAlgorithm.namedCurve","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-crypto-key-arbitrary-key-algorithm/named-curve.html","searchKeys":["namedCurve","open var namedCurve: String?","dev.shibasis.reaktor.core.server.cloudflare.CryptoKeyArbitraryKeyAlgorithm.namedCurve"]},{"name":"open var namedCurve: String?","description":"dev.shibasis.reaktor.core.server.cloudflare.SubtleCryptoGenerateKeyAlgorithm.namedCurve","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-subtle-crypto-generate-key-algorithm/named-curve.html","searchKeys":["namedCurve","open var namedCurve: String?","dev.shibasis.reaktor.core.server.cloudflare.SubtleCryptoGenerateKeyAlgorithm.namedCurve"]},{"name":"open var namedCurve: String?","description":"dev.shibasis.reaktor.core.server.cloudflare.SubtleCryptoImportKeyAlgorithm.namedCurve","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-subtle-crypto-import-key-algorithm/named-curve.html","searchKeys":["namedCurve","open var namedCurve: String?","dev.shibasis.reaktor.core.server.cloudflare.SubtleCryptoImportKeyAlgorithm.namedCurve"]},{"name":"open var noCache: Boolean?","description":"dev.shibasis.reaktor.core.server.cloudflare.DurableObjectGetOptions.noCache","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-durable-object-get-options/no-cache.html","searchKeys":["noCache","open var noCache: Boolean?","dev.shibasis.reaktor.core.server.cloudflare.DurableObjectGetOptions.noCache"]},{"name":"open var noCache: Boolean?","description":"dev.shibasis.reaktor.core.server.cloudflare.DurableObjectListOptions.noCache","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-durable-object-list-options/no-cache.html","searchKeys":["noCache","open var noCache: Boolean?","dev.shibasis.reaktor.core.server.cloudflare.DurableObjectListOptions.noCache"]},{"name":"open var noCache: Boolean?","description":"dev.shibasis.reaktor.core.server.cloudflare.DurableObjectPutOptions.noCache","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-durable-object-put-options/no-cache.html","searchKeys":["noCache","open var noCache: Boolean?","dev.shibasis.reaktor.core.server.cloudflare.DurableObjectPutOptions.noCache"]},{"name":"open var ok: Boolean","description":"dev.shibasis.reaktor.core.server.cloudflare.Response.ok","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-response/ok.html","searchKeys":["ok","open var ok: Boolean","dev.shibasis.reaktor.core.server.cloudflare.Response.ok"]},{"name":"open var once: Boolean?","description":"dev.shibasis.reaktor.core.server.cloudflare.EventTargetAddEventListenerOptions.once","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-event-target-add-event-listener-options/once.html","searchKeys":["once","open var once: Boolean?","dev.shibasis.reaktor.core.server.cloudflare.EventTargetAddEventListenerOptions.once"]},{"name":"open var onlyIf: dynamic","description":"dev.shibasis.reaktor.core.server.cloudflare.R2GetOptions.onlyIf","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-r2-get-options/only-if.html","searchKeys":["onlyIf","open var onlyIf: dynamic","dev.shibasis.reaktor.core.server.cloudflare.R2GetOptions.onlyIf"]},{"name":"open var onlyIf: dynamic","description":"dev.shibasis.reaktor.core.server.cloudflare.R2PutOptions.onlyIf","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-r2-put-options/only-if.html","searchKeys":["onlyIf","open var onlyIf: dynamic","dev.shibasis.reaktor.core.server.cloudflare.R2PutOptions.onlyIf"]},{"name":"open var opacity: Number?","description":"dev.shibasis.reaktor.core.server.cloudflare.RequestInitCfPropertiesImageDraw.opacity","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-request-init-cf-properties-image-draw/opacity.html","searchKeys":["opacity","open var opacity: Number?","dev.shibasis.reaktor.core.server.cloudflare.RequestInitCfPropertiesImageDraw.opacity"]},{"name":"open var origin: String","description":"dev.shibasis.reaktor.core.server.cloudflare.URL.origin","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-u-r-l/origin.html","searchKeys":["origin","open var origin: String","dev.shibasis.reaktor.core.server.cloudflare.URL.origin"]},{"name":"open var oth: Array<RsaOtherPrimesInfo>?","description":"dev.shibasis.reaktor.core.server.cloudflare.JsonWebKey.oth","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-json-web-key/oth.html","searchKeys":["oth","open var oth: Array<RsaOtherPrimesInfo>?","dev.shibasis.reaktor.core.server.cloudflare.JsonWebKey.oth"]},{"name":"open var outbound: Json?","description":"dev.shibasis.reaktor.core.server.cloudflare.DynamicDispatchOptions.outbound","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-dynamic-dispatch-options/outbound.html","searchKeys":["outbound","open var outbound: Json?","dev.shibasis.reaktor.core.server.cloudflare.DynamicDispatchOptions.outbound"]},{"name":"open var p: String?","description":"dev.shibasis.reaktor.core.server.cloudflare.JsonWebKey.p","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-json-web-key/p.html","searchKeys":["p","open var p: String?","dev.shibasis.reaktor.core.server.cloudflare.JsonWebKey.p"]},{"name":"open var passive: Boolean?","description":"dev.shibasis.reaktor.core.server.cloudflare.EventTargetAddEventListenerOptions.passive","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-event-target-add-event-listener-options/passive.html","searchKeys":["passive","open var passive: Boolean?","dev.shibasis.reaktor.core.server.cloudflare.EventTargetAddEventListenerOptions.passive"]},{"name":"open var password: String","description":"dev.shibasis.reaktor.core.server.cloudflare.URL.password","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-u-r-l/password.html","searchKeys":["password","open var password: String","dev.shibasis.reaktor.core.server.cloudflare.URL.password"]},{"name":"open var password: String?","description":"dev.shibasis.reaktor.core.server.cloudflare.URLPatternURLPatternInit.password","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-u-r-l-pattern-u-r-l-pattern-init/password.html","searchKeys":["password","open var password: String?","dev.shibasis.reaktor.core.server.cloudflare.URLPatternURLPatternInit.password"]},{"name":"open var pathname: String","description":"dev.shibasis.reaktor.core.server.cloudflare.URL.pathname","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-u-r-l/pathname.html","searchKeys":["pathname","open var pathname: String","dev.shibasis.reaktor.core.server.cloudflare.URL.pathname"]},{"name":"open var pathname: String?","description":"dev.shibasis.reaktor.core.server.cloudflare.URLPatternURLPatternInit.pathname","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-u-r-l-pattern-u-r-l-pattern-init/pathname.html","searchKeys":["pathname","open var pathname: String?","dev.shibasis.reaktor.core.server.cloudflare.URLPatternURLPatternInit.pathname"]},{"name":"open var payload: dynamic","description":"dev.shibasis.reaktor.core.server.cloudflare.PubSubMessage.payload","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-pub-sub-message/payload.html","searchKeys":["payload","open var payload: dynamic","dev.shibasis.reaktor.core.server.cloudflare.PubSubMessage.payload"]},{"name":"open var polish: String?","description":"dev.shibasis.reaktor.core.server.cloudflare.RequestInitCfProperties.polish","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-request-init-cf-properties/polish.html","searchKeys":["polish","open var polish: String?","dev.shibasis.reaktor.core.server.cloudflare.RequestInitCfProperties.polish"]},{"name":"open var port: String","description":"dev.shibasis.reaktor.core.server.cloudflare.URL.port","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-u-r-l/port.html","searchKeys":["port","open var port: String","dev.shibasis.reaktor.core.server.cloudflare.URL.port"]},{"name":"open var port: String?","description":"dev.shibasis.reaktor.core.server.cloudflare.URLPatternURLPatternInit.port","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-u-r-l-pattern-u-r-l-pattern-init/port.html","searchKeys":["port","open var port: String?","dev.shibasis.reaktor.core.server.cloudflare.URLPatternURLPatternInit.port"]},{"name":"open var postalCode: String?","description":"dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesGeographicInformation.postalCode","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-incoming-request-cf-properties-geographic-information/postal-code.html","searchKeys":["postalCode","open var postalCode: String?","dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesGeographicInformation.postalCode"]},{"name":"open var prefix: String?","description":"dev.shibasis.reaktor.core.server.cloudflare.DurableObjectListOptions.prefix","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-durable-object-list-options/prefix.html","searchKeys":["prefix","open var prefix: String?","dev.shibasis.reaktor.core.server.cloudflare.DurableObjectListOptions.prefix"]},{"name":"open var prefix: String?","description":"dev.shibasis.reaktor.core.server.cloudflare.KVNamespaceListOptions.prefix","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-k-v-namespace-list-options/prefix.html","searchKeys":["prefix","open var prefix: String?","dev.shibasis.reaktor.core.server.cloudflare.KVNamespaceListOptions.prefix"]},{"name":"open var prefix: String?","description":"dev.shibasis.reaktor.core.server.cloudflare.R2ListOptions.prefix","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-r2-list-options/prefix.html","searchKeys":["prefix","open var prefix: String?","dev.shibasis.reaktor.core.server.cloudflare.R2ListOptions.prefix"]},{"name":"open var preventAbort: Boolean?","description":"dev.shibasis.reaktor.core.server.cloudflare.StreamPipeOptions.preventAbort","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-stream-pipe-options/prevent-abort.html","searchKeys":["preventAbort","open var preventAbort: Boolean?","dev.shibasis.reaktor.core.server.cloudflare.StreamPipeOptions.preventAbort"]},{"name":"open var preventCancel: Boolean?","description":"dev.shibasis.reaktor.core.server.cloudflare.ReadableStreamValuesOptions.preventCancel","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-readable-stream-values-options/prevent-cancel.html","searchKeys":["preventCancel","open var preventCancel: Boolean?","dev.shibasis.reaktor.core.server.cloudflare.ReadableStreamValuesOptions.preventCancel"]},{"name":"open var preventCancel: Boolean?","description":"dev.shibasis.reaktor.core.server.cloudflare.StreamPipeOptions.preventCancel","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-stream-pipe-options/prevent-cancel.html","searchKeys":["preventCancel","open var preventCancel: Boolean?","dev.shibasis.reaktor.core.server.cloudflare.StreamPipeOptions.preventCancel"]},{"name":"open var preventClose: Boolean?","description":"dev.shibasis.reaktor.core.server.cloudflare.StreamPipeOptions.preventClose","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-stream-pipe-options/prevent-close.html","searchKeys":["preventClose","open var preventClose: Boolean?","dev.shibasis.reaktor.core.server.cloudflare.StreamPipeOptions.preventClose"]},{"name":"open var promise: Promise<Any>","description":"dev.shibasis.reaktor.core.server.cloudflare.PromiseRejectionEvent.promise","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-promise-rejection-event/promise.html","searchKeys":["promise","open var promise: Promise<Any>","dev.shibasis.reaktor.core.server.cloudflare.PromiseRejectionEvent.promise"]},{"name":"open var protocol: String","description":"dev.shibasis.reaktor.core.server.cloudflare.URL.protocol","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-u-r-l/protocol.html","searchKeys":["protocol","open var protocol: String","dev.shibasis.reaktor.core.server.cloudflare.URL.protocol"]},{"name":"open var protocol: String?","description":"dev.shibasis.reaktor.core.server.cloudflare.URLPatternURLPatternInit.protocol","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-u-r-l-pattern-u-r-l-pattern-init/protocol.html","searchKeys":["protocol","open var protocol: String?","dev.shibasis.reaktor.core.server.cloudflare.URLPatternURLPatternInit.protocol"]},{"name":"open var protocol: String?","description":"dev.shibasis.reaktor.core.server.cloudflare.WebSocket.protocol","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-web-socket/protocol.html","searchKeys":["protocol","open var protocol: String?","dev.shibasis.reaktor.core.server.cloudflare.WebSocket.protocol"]},{"name":"open var publicExponent: ArrayBuffer?","description":"dev.shibasis.reaktor.core.server.cloudflare.SubtleCryptoGenerateKeyAlgorithm.publicExponent","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-subtle-crypto-generate-key-algorithm/public-exponent.html","searchKeys":["publicExponent","open var publicExponent: ArrayBuffer?","dev.shibasis.reaktor.core.server.cloudflare.SubtleCryptoGenerateKeyAlgorithm.publicExponent"]},{"name":"open var pull: (controller: ReadableByteStreamController) -> dynamic?","description":"dev.shibasis.reaktor.core.server.cloudflare.UnderlyingByteSource.pull","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-underlying-byte-source/pull.html","searchKeys":["pull","open var pull: (controller: ReadableByteStreamController) -> dynamic?","dev.shibasis.reaktor.core.server.cloudflare.UnderlyingByteSource.pull"]},{"name":"open var pull: (controller: ReadableStreamDefaultController<R>) -> dynamic?","description":"dev.shibasis.reaktor.core.server.cloudflare.UnderlyingSource.pull","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-underlying-source/pull.html","searchKeys":["pull","open var pull: (controller: ReadableStreamDefaultController<R>) -> dynamic?","dev.shibasis.reaktor.core.server.cloudflare.UnderlyingSource.pull"]},{"name":"open var q: String?","description":"dev.shibasis.reaktor.core.server.cloudflare.JsonWebKey.q","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-json-web-key/q.html","searchKeys":["q","open var q: String?","dev.shibasis.reaktor.core.server.cloudflare.JsonWebKey.q"]},{"name":"open var qi: String?","description":"dev.shibasis.reaktor.core.server.cloudflare.JsonWebKey.qi","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-json-web-key/qi.html","searchKeys":["qi","open var qi: String?","dev.shibasis.reaktor.core.server.cloudflare.JsonWebKey.qi"]},{"name":"open var quality: Number?","description":"dev.shibasis.reaktor.core.server.cloudflare.RequestInitCfPropertiesImage.quality","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-request-init-cf-properties-image/quality.html","searchKeys":["quality","open var quality: Number?","dev.shibasis.reaktor.core.server.cloudflare.RequestInitCfPropertiesImage.quality"]},{"name":"open var queue: ExportedHandlerQueueHandler<Env, QueueHandlerMessage>?","description":"dev.shibasis.reaktor.core.server.cloudflare.ExportedHandler.queue","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-exported-handler/queue.html","searchKeys":["queue","open var queue: ExportedHandlerQueueHandler<Env, QueueHandlerMessage>?","dev.shibasis.reaktor.core.server.cloudflare.ExportedHandler.queue"]},{"name":"open var r: String?","description":"dev.shibasis.reaktor.core.server.cloudflare.RsaOtherPrimesInfo.r","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-rsa-other-primes-info/r.html","searchKeys":["r","open var r: String?","dev.shibasis.reaktor.core.server.cloudflare.RsaOtherPrimesInfo.r"]},{"name":"open var range: dynamic","description":"dev.shibasis.reaktor.core.server.cloudflare.R2GetOptions.range","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-r2-get-options/range.html","searchKeys":["range","open var range: dynamic","dev.shibasis.reaktor.core.server.cloudflare.R2GetOptions.range"]},{"name":"open var range: dynamic","description":"dev.shibasis.reaktor.core.server.cloudflare.R2Object.range","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-r2-object/range.html","searchKeys":["range","open var range: dynamic","dev.shibasis.reaktor.core.server.cloudflare.R2Object.range"]},{"name":"open var readable: ReadableStream<O>","description":"dev.shibasis.reaktor.core.server.cloudflare.TransformStream.readable","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-transform-stream/readable.html","searchKeys":["readable","open var readable: ReadableStream<O>","dev.shibasis.reaktor.core.server.cloudflare.TransformStream.readable"]},{"name":"open var readableType: String?","description":"dev.shibasis.reaktor.core.server.cloudflare.Transformer.readableType","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-transformer/readable-type.html","searchKeys":["readableType","open var readableType: String?","dev.shibasis.reaktor.core.server.cloudflare.Transformer.readableType"]},{"name":"open var ready: Promise<Unit>","description":"dev.shibasis.reaktor.core.server.cloudflare.WritableStreamDefaultWriter.ready","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-writable-stream-default-writer/ready.html","searchKeys":["ready","open var ready: Promise<Unit>","dev.shibasis.reaktor.core.server.cloudflare.WritableStreamDefaultWriter.ready"]},{"name":"open var readyState: Number","description":"dev.shibasis.reaktor.core.server.cloudflare.WebSocket.readyState","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-web-socket/ready-state.html","searchKeys":["readyState","open var readyState: Number","dev.shibasis.reaktor.core.server.cloudflare.WebSocket.readyState"]},{"name":"open var reason: Any","description":"dev.shibasis.reaktor.core.server.cloudflare.AbortSignal.reason","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-abort-signal/reason.html","searchKeys":["reason","open var reason: Any","dev.shibasis.reaktor.core.server.cloudflare.AbortSignal.reason"]},{"name":"open var reason: Any","description":"dev.shibasis.reaktor.core.server.cloudflare.PromiseRejectionEvent.reason","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-promise-rejection-event/reason.html","searchKeys":["reason","open var reason: Any","dev.shibasis.reaktor.core.server.cloudflare.PromiseRejectionEvent.reason"]},{"name":"open var reason: String","description":"dev.shibasis.reaktor.core.server.cloudflare.CloseEvent.reason","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-close-event/reason.html","searchKeys":["reason","open var reason: String","dev.shibasis.reaktor.core.server.cloudflare.CloseEvent.reason"]},{"name":"open var reason: String?","description":"dev.shibasis.reaktor.core.server.cloudflare.CloseEventInit.reason","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-close-event-init/reason.html","searchKeys":["reason","open var reason: String?","dev.shibasis.reaktor.core.server.cloudflare.CloseEventInit.reason"]},{"name":"open var redirect: String","description":"dev.shibasis.reaktor.core.server.cloudflare.Request.redirect","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-request/redirect.html","searchKeys":["redirect","open var redirect: String","dev.shibasis.reaktor.core.server.cloudflare.Request.redirect"]},{"name":"open var redirect: String?","description":"dev.shibasis.reaktor.core.server.cloudflare.RequestInit.redirect","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-request-init/redirect.html","searchKeys":["redirect","open var redirect: String?","dev.shibasis.reaktor.core.server.cloudflare.RequestInit.redirect"]},{"name":"open var redirected: Boolean","description":"dev.shibasis.reaktor.core.server.cloudflare.Response.redirected","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-response/redirected.html","searchKeys":["redirected","open var redirected: Boolean","dev.shibasis.reaktor.core.server.cloudflare.Response.redirected"]},{"name":"open var region: String?","description":"dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesGeographicInformation.region","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-incoming-request-cf-properties-geographic-information/region.html","searchKeys":["region","open var region: String?","dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesGeographicInformation.region"]},{"name":"open var regionCode: String?","description":"dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesGeographicInformation.regionCode","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-incoming-request-cf-properties-geographic-information/region-code.html","searchKeys":["regionCode","open var regionCode: String?","dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesGeographicInformation.regionCode"]},{"name":"open var repeat: dynamic","description":"dev.shibasis.reaktor.core.server.cloudflare.RequestInitCfPropertiesImageDraw.repeat","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-request-init-cf-properties-image-draw/repeat.html","searchKeys":["repeat","open var repeat: dynamic","dev.shibasis.reaktor.core.server.cloudflare.RequestInitCfPropertiesImageDraw.repeat"]},{"name":"open var request: Request__0","description":"dev.shibasis.reaktor.core.server.cloudflare.FetchEvent.request","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-fetch-event/request.html","searchKeys":["request","open var request: Request__0","dev.shibasis.reaktor.core.server.cloudflare.FetchEvent.request"]},{"name":"open var resolveOverride: String?","description":"dev.shibasis.reaktor.core.server.cloudflare.RequestInitCfProperties.resolveOverride","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-request-init-cf-properties/resolve-override.html","searchKeys":["resolveOverride","open var resolveOverride: String?","dev.shibasis.reaktor.core.server.cloudflare.RequestInitCfProperties.resolveOverride"]},{"name":"open var response: TraceItemFetchEventInfoResponse?","description":"dev.shibasis.reaktor.core.server.cloudflare.TraceItemFetchEventInfo.response","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-trace-item-fetch-event-info/response.html","searchKeys":["response","open var response: TraceItemFetchEventInfoResponse?","dev.shibasis.reaktor.core.server.cloudflare.TraceItemFetchEventInfo.response"]},{"name":"open var returnValue: Boolean","description":"dev.shibasis.reaktor.core.server.cloudflare.Event.returnValue","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-event/return-value.html","searchKeys":["returnValue","open var returnValue: Boolean","dev.shibasis.reaktor.core.server.cloudflare.Event.returnValue"]},{"name":"open var reverse: Boolean?","description":"dev.shibasis.reaktor.core.server.cloudflare.DurableObjectListOptions.reverse","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-durable-object-list-options/reverse.html","searchKeys":["reverse","open var reverse: Boolean?","dev.shibasis.reaktor.core.server.cloudflare.DurableObjectListOptions.reverse"]},{"name":"open var right: Number?","description":"dev.shibasis.reaktor.core.server.cloudflare.RequestInitCfPropertiesImageDraw.right","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-request-init-cf-properties-image-draw/right.html","searchKeys":["right","open var right: Number?","dev.shibasis.reaktor.core.server.cloudflare.RequestInitCfPropertiesImageDraw.right"]},{"name":"open var right: Number?","description":"dev.shibasis.reaktor.core.server.cloudflare.T$1.right","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-t$1/right.html","searchKeys":["right","open var right: Number?","dev.shibasis.reaktor.core.server.cloudflare.T$1.right"]},{"name":"open var rotate: Number?","description":"dev.shibasis.reaktor.core.server.cloudflare.BasicImageTransformations.rotate","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-basic-image-transformations/rotate.html","searchKeys":["rotate","open var rotate: Number?","dev.shibasis.reaktor.core.server.cloudflare.BasicImageTransformations.rotate"]},{"name":"open var salt: ArrayBuffer?","description":"dev.shibasis.reaktor.core.server.cloudflare.SubtleCryptoDeriveKeyAlgorithm.salt","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-subtle-crypto-derive-key-algorithm/salt.html","searchKeys":["salt","open var salt: ArrayBuffer?","dev.shibasis.reaktor.core.server.cloudflare.SubtleCryptoDeriveKeyAlgorithm.salt"]},{"name":"open var saltLength: Number?","description":"dev.shibasis.reaktor.core.server.cloudflare.SubtleCryptoSignAlgorithm.saltLength","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-subtle-crypto-sign-algorithm/salt-length.html","searchKeys":["saltLength","open var saltLength: Number?","dev.shibasis.reaktor.core.server.cloudflare.SubtleCryptoSignAlgorithm.saltLength"]},{"name":"open var scheduled: ExportedHandlerScheduledHandler<Env>?","description":"dev.shibasis.reaktor.core.server.cloudflare.ExportedHandler.scheduled","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-exported-handler/scheduled.html","searchKeys":["scheduled","open var scheduled: ExportedHandlerScheduledHandler<Env>?","dev.shibasis.reaktor.core.server.cloudflare.ExportedHandler.scheduled"]},{"name":"open var scheduledTime: Number","description":"dev.shibasis.reaktor.core.server.cloudflare.ScheduledEvent.scheduledTime","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-scheduled-event/scheduled-time.html","searchKeys":["scheduledTime","open var scheduledTime: Number","dev.shibasis.reaktor.core.server.cloudflare.ScheduledEvent.scheduledTime"]},{"name":"open var scrapeShield: Boolean?","description":"dev.shibasis.reaktor.core.server.cloudflare.RequestInitCfProperties.scrapeShield","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-request-init-cf-properties/scrape-shield.html","searchKeys":["scrapeShield","open var scrapeShield: Boolean?","dev.shibasis.reaktor.core.server.cloudflare.RequestInitCfProperties.scrapeShield"]},{"name":"open var scriptTags: Array<String>?","description":"dev.shibasis.reaktor.core.server.cloudflare.TraceItem.scriptTags","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-trace-item/script-tags.html","searchKeys":["scriptTags","open var scriptTags: Array<String>?","dev.shibasis.reaktor.core.server.cloudflare.TraceItem.scriptTags"]},{"name":"open var search: String","description":"dev.shibasis.reaktor.core.server.cloudflare.URL.search","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-u-r-l/search.html","searchKeys":["search","open var search: String","dev.shibasis.reaktor.core.server.cloudflare.URL.search"]},{"name":"open var search: String?","description":"dev.shibasis.reaktor.core.server.cloudflare.URLPatternURLPatternInit.search","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-u-r-l-pattern-u-r-l-pattern-init/search.html","searchKeys":["search","open var search: String?","dev.shibasis.reaktor.core.server.cloudflare.URLPatternURLPatternInit.search"]},{"name":"open var searchParams: URLSearchParams","description":"dev.shibasis.reaktor.core.server.cloudflare.URL.searchParams","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-u-r-l/search-params.html","searchKeys":["searchParams","open var searchParams: URLSearchParams","dev.shibasis.reaktor.core.server.cloudflare.URL.searchParams"]},{"name":"open var secondsGranularity: Boolean?","description":"dev.shibasis.reaktor.core.server.cloudflare.R2Conditional.secondsGranularity","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-r2-conditional/seconds-granularity.html","searchKeys":["secondsGranularity","open var secondsGranularity: Boolean?","dev.shibasis.reaktor.core.server.cloudflare.R2Conditional.secondsGranularity"]},{"name":"open var secureTransport: String?","description":"dev.shibasis.reaktor.core.server.cloudflare.SocketOptions.secureTransport","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-socket-options/secure-transport.html","searchKeys":["secureTransport","open var secureTransport: String?","dev.shibasis.reaktor.core.server.cloudflare.SocketOptions.secureTransport"]},{"name":"open var sha1: ArrayBuffer?","description":"dev.shibasis.reaktor.core.server.cloudflare.R2Checksums.sha1","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-r2-checksums/sha1.html","searchKeys":["sha1","open var sha1: ArrayBuffer?","dev.shibasis.reaktor.core.server.cloudflare.R2Checksums.sha1"]},{"name":"open var sha1: String?","description":"dev.shibasis.reaktor.core.server.cloudflare.R2StringChecksums.sha1","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-r2-string-checksums/sha1.html","searchKeys":["sha1","open var sha1: String?","dev.shibasis.reaktor.core.server.cloudflare.R2StringChecksums.sha1"]},{"name":"open var sha1: dynamic","description":"dev.shibasis.reaktor.core.server.cloudflare.R2PutOptions.sha1","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-r2-put-options/sha1.html","searchKeys":["sha1","open var sha1: dynamic","dev.shibasis.reaktor.core.server.cloudflare.R2PutOptions.sha1"]},{"name":"open var sha256: ArrayBuffer?","description":"dev.shibasis.reaktor.core.server.cloudflare.R2Checksums.sha256","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-r2-checksums/sha256.html","searchKeys":["sha256","open var sha256: ArrayBuffer?","dev.shibasis.reaktor.core.server.cloudflare.R2Checksums.sha256"]},{"name":"open var sha256: String?","description":"dev.shibasis.reaktor.core.server.cloudflare.R2StringChecksums.sha256","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-r2-string-checksums/sha256.html","searchKeys":["sha256","open var sha256: String?","dev.shibasis.reaktor.core.server.cloudflare.R2StringChecksums.sha256"]},{"name":"open var sha256: dynamic","description":"dev.shibasis.reaktor.core.server.cloudflare.R2PutOptions.sha256","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-r2-put-options/sha256.html","searchKeys":["sha256","open var sha256: dynamic","dev.shibasis.reaktor.core.server.cloudflare.R2PutOptions.sha256"]},{"name":"open var sha384: ArrayBuffer?","description":"dev.shibasis.reaktor.core.server.cloudflare.R2Checksums.sha384","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-r2-checksums/sha384.html","searchKeys":["sha384","open var sha384: ArrayBuffer?","dev.shibasis.reaktor.core.server.cloudflare.R2Checksums.sha384"]},{"name":"open var sha384: String?","description":"dev.shibasis.reaktor.core.server.cloudflare.R2StringChecksums.sha384","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-r2-string-checksums/sha384.html","searchKeys":["sha384","open var sha384: String?","dev.shibasis.reaktor.core.server.cloudflare.R2StringChecksums.sha384"]},{"name":"open var sha384: dynamic","description":"dev.shibasis.reaktor.core.server.cloudflare.R2PutOptions.sha384","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-r2-put-options/sha384.html","searchKeys":["sha384","open var sha384: dynamic","dev.shibasis.reaktor.core.server.cloudflare.R2PutOptions.sha384"]},{"name":"open var sha512: ArrayBuffer?","description":"dev.shibasis.reaktor.core.server.cloudflare.R2Checksums.sha512","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-r2-checksums/sha512.html","searchKeys":["sha512","open var sha512: ArrayBuffer?","dev.shibasis.reaktor.core.server.cloudflare.R2Checksums.sha512"]},{"name":"open var sha512: String?","description":"dev.shibasis.reaktor.core.server.cloudflare.R2StringChecksums.sha512","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-r2-string-checksums/sha512.html","searchKeys":["sha512","open var sha512: String?","dev.shibasis.reaktor.core.server.cloudflare.R2StringChecksums.sha512"]},{"name":"open var sha512: dynamic","description":"dev.shibasis.reaktor.core.server.cloudflare.R2PutOptions.sha512","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-r2-put-options/sha512.html","searchKeys":["sha512","open var sha512: dynamic","dev.shibasis.reaktor.core.server.cloudflare.R2PutOptions.sha512"]},{"name":"open var sharpen: Number?","description":"dev.shibasis.reaktor.core.server.cloudflare.RequestInitCfPropertiesImage.sharpen","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-request-init-cf-properties-image/sharpen.html","searchKeys":["sharpen","open var sharpen: Number?","dev.shibasis.reaktor.core.server.cloudflare.RequestInitCfPropertiesImage.sharpen"]},{"name":"open var signal: AbortSignal","description":"dev.shibasis.reaktor.core.server.cloudflare.AbortController.signal","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-abort-controller/signal.html","searchKeys":["signal","open var signal: AbortSignal","dev.shibasis.reaktor.core.server.cloudflare.AbortController.signal"]},{"name":"open var signal: AbortSignal","description":"dev.shibasis.reaktor.core.server.cloudflare.Request.signal","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-request/signal.html","searchKeys":["signal","open var signal: AbortSignal","dev.shibasis.reaktor.core.server.cloudflare.Request.signal"]},{"name":"open var signal: AbortSignal?","description":"dev.shibasis.reaktor.core.server.cloudflare.EventTargetAddEventListenerOptions.signal","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-event-target-add-event-listener-options/signal.html","searchKeys":["signal","open var signal: AbortSignal?","dev.shibasis.reaktor.core.server.cloudflare.EventTargetAddEventListenerOptions.signal"]},{"name":"open var signal: AbortSignal?","description":"dev.shibasis.reaktor.core.server.cloudflare.RequestInit.signal","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-request-init/signal.html","searchKeys":["signal","open var signal: AbortSignal?","dev.shibasis.reaktor.core.server.cloudflare.RequestInit.signal"]},{"name":"open var signal: AbortSignal?","description":"dev.shibasis.reaktor.core.server.cloudflare.SchedulerWaitOptions.signal","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-scheduler-wait-options/signal.html","searchKeys":["signal","open var signal: AbortSignal?","dev.shibasis.reaktor.core.server.cloudflare.SchedulerWaitOptions.signal"]},{"name":"open var signal: AbortSignal?","description":"dev.shibasis.reaktor.core.server.cloudflare.StreamPipeOptions.signal","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-stream-pipe-options/signal.html","searchKeys":["signal","open var signal: AbortSignal?","dev.shibasis.reaktor.core.server.cloudflare.StreamPipeOptions.signal"]},{"name":"open var size: (chunk: T) -> dynamic?","description":"dev.shibasis.reaktor.core.server.cloudflare.QueuingStrategy.size","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-queuing-strategy/size.html","searchKeys":["size","open var size: (chunk: T) -> dynamic?","dev.shibasis.reaktor.core.server.cloudflare.QueuingStrategy.size"]},{"name":"open var size: Number","description":"dev.shibasis.reaktor.core.server.cloudflare.Blob.size","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-blob/size.html","searchKeys":["size","open var size: Number","dev.shibasis.reaktor.core.server.cloudflare.Blob.size"]},{"name":"open var size: Number","description":"dev.shibasis.reaktor.core.server.cloudflare.R2Object.size","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-r2-object/size.html","searchKeys":["size","open var size: Number","dev.shibasis.reaktor.core.server.cloudflare.R2Object.size"]},{"name":"open var srcElement: EventTarget__0","description":"dev.shibasis.reaktor.core.server.cloudflare.Event.srcElement","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-event/src-element.html","searchKeys":["srcElement","open var srcElement: EventTarget__0","dev.shibasis.reaktor.core.server.cloudflare.Event.srcElement"]},{"name":"open var start: (controller: ReadableByteStreamController) -> dynamic?","description":"dev.shibasis.reaktor.core.server.cloudflare.UnderlyingByteSource.start","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-underlying-byte-source/start.html","searchKeys":["start","open var start: (controller: ReadableByteStreamController) -> dynamic?","dev.shibasis.reaktor.core.server.cloudflare.UnderlyingByteSource.start"]},{"name":"open var start: (controller: ReadableStreamDefaultController<R>) -> dynamic?","description":"dev.shibasis.reaktor.core.server.cloudflare.UnderlyingSource.start","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-underlying-source/start.html","searchKeys":["start","open var start: (controller: ReadableStreamDefaultController<R>) -> dynamic?","dev.shibasis.reaktor.core.server.cloudflare.UnderlyingSource.start"]},{"name":"open var start: (controller: TransformStreamDefaultController<O>) -> dynamic?","description":"dev.shibasis.reaktor.core.server.cloudflare.Transformer.start","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-transformer/start.html","searchKeys":["start","open var start: (controller: TransformStreamDefaultController<O>) -> dynamic?","dev.shibasis.reaktor.core.server.cloudflare.Transformer.start"]},{"name":"open var start: (controller: WritableStreamDefaultController) -> dynamic?","description":"dev.shibasis.reaktor.core.server.cloudflare.UnderlyingSink.start","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-underlying-sink/start.html","searchKeys":["start","open var start: (controller: WritableStreamDefaultController) -> dynamic?","dev.shibasis.reaktor.core.server.cloudflare.UnderlyingSink.start"]},{"name":"open var start: String?","description":"dev.shibasis.reaktor.core.server.cloudflare.DurableObjectListOptions.start","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-durable-object-list-options/start.html","searchKeys":["start","open var start: String?","dev.shibasis.reaktor.core.server.cloudflare.DurableObjectListOptions.start"]},{"name":"open var startAfter: String?","description":"dev.shibasis.reaktor.core.server.cloudflare.DurableObjectListOptions.startAfter","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-durable-object-list-options/start-after.html","searchKeys":["startAfter","open var startAfter: String?","dev.shibasis.reaktor.core.server.cloudflare.DurableObjectListOptions.startAfter"]},{"name":"open var startAfter: String?","description":"dev.shibasis.reaktor.core.server.cloudflare.R2ListOptions.startAfter","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-r2-list-options/start-after.html","searchKeys":["startAfter","open var startAfter: String?","dev.shibasis.reaktor.core.server.cloudflare.R2ListOptions.startAfter"]},{"name":"open var status: Number","description":"dev.shibasis.reaktor.core.server.cloudflare.Response.status","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-response/status.html","searchKeys":["status","open var status: Number","dev.shibasis.reaktor.core.server.cloudflare.Response.status"]},{"name":"open var status: Number?","description":"dev.shibasis.reaktor.core.server.cloudflare.ResponseInit.status","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-response-init/status.html","searchKeys":["status","open var status: Number?","dev.shibasis.reaktor.core.server.cloudflare.ResponseInit.status"]},{"name":"open var statusText: String","description":"dev.shibasis.reaktor.core.server.cloudflare.Response.statusText","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-response/status-text.html","searchKeys":["statusText","open var statusText: String","dev.shibasis.reaktor.core.server.cloudflare.Response.statusText"]},{"name":"open var statusText: String?","description":"dev.shibasis.reaktor.core.server.cloudflare.ResponseInit.statusText","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-response-init/status-text.html","searchKeys":["statusText","open var statusText: String?","dev.shibasis.reaktor.core.server.cloudflare.ResponseInit.statusText"]},{"name":"open var subRequests: Number?","description":"dev.shibasis.reaktor.core.server.cloudflare.DynamicDispatchLimits.subRequests","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-dynamic-dispatch-limits/sub-requests.html","searchKeys":["subRequests","open var subRequests: Number?","dev.shibasis.reaktor.core.server.cloudflare.DynamicDispatchLimits.subRequests"]},{"name":"open var subtle: SubtleCrypto","description":"dev.shibasis.reaktor.core.server.cloudflare.Crypto.subtle","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-crypto/subtle.html","searchKeys":["subtle","open var subtle: SubtleCrypto","dev.shibasis.reaktor.core.server.cloudflare.Crypto.subtle"]},{"name":"open var t: String?","description":"dev.shibasis.reaktor.core.server.cloudflare.RsaOtherPrimesInfo.t","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-rsa-other-primes-info/t.html","searchKeys":["t","open var t: String?","dev.shibasis.reaktor.core.server.cloudflare.RsaOtherPrimesInfo.t"]},{"name":"open var tagLength: Number?","description":"dev.shibasis.reaktor.core.server.cloudflare.SubtleCryptoEncryptAlgorithm.tagLength","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-subtle-crypto-encrypt-algorithm/tag-length.html","searchKeys":["tagLength","open var tagLength: Number?","dev.shibasis.reaktor.core.server.cloudflare.SubtleCryptoEncryptAlgorithm.tagLength"]},{"name":"open var tail: ExportedHandlerTailHandler<Env>?","description":"dev.shibasis.reaktor.core.server.cloudflare.ExportedHandler.tail","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-exported-handler/tail.html","searchKeys":["tail","open var tail: ExportedHandlerTailHandler<Env>?","dev.shibasis.reaktor.core.server.cloudflare.ExportedHandler.tail"]},{"name":"open var test: ExportedHandlerTestHandler<Env>?","description":"dev.shibasis.reaktor.core.server.cloudflare.ExportedHandler.test","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-exported-handler/test.html","searchKeys":["test","open var test: ExportedHandlerTestHandler<Env>?","dev.shibasis.reaktor.core.server.cloudflare.ExportedHandler.test"]},{"name":"open var timeStamp: Number","description":"dev.shibasis.reaktor.core.server.cloudflare.Event.timeStamp","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-event/time-stamp.html","searchKeys":["timeStamp","open var timeStamp: Number","dev.shibasis.reaktor.core.server.cloudflare.Event.timeStamp"]},{"name":"open var timezone: String?","description":"dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesGeographicInformation.timezone","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-incoming-request-cf-properties-geographic-information/timezone.html","searchKeys":["timezone","open var timezone: String?","dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesGeographicInformation.timezone"]},{"name":"open var tlsClientAuth: dynamic","description":"dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesCloudflareAccessOrApiShield.tlsClientAuth","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-incoming-request-cf-properties-cloudflare-access-or-api-shield/tls-client-auth.html","searchKeys":["tlsClientAuth","open var tlsClientAuth: dynamic","dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesCloudflareAccessOrApiShield.tlsClientAuth"]},{"name":"open var tlsExportedAuthenticator: IncomingRequestCfPropertiesExportedAuthenticatorMetadata?","description":"dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesBase.tlsExportedAuthenticator","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-incoming-request-cf-properties-base/tls-exported-authenticator.html","searchKeys":["tlsExportedAuthenticator","open var tlsExportedAuthenticator: IncomingRequestCfPropertiesExportedAuthenticatorMetadata?","dev.shibasis.reaktor.core.server.cloudflare.IncomingRequestCfPropertiesBase.tlsExportedAuthenticator"]},{"name":"open var top: Number?","description":"dev.shibasis.reaktor.core.server.cloudflare.RequestInitCfPropertiesImageDraw.top","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-request-init-cf-properties-image-draw/top.html","searchKeys":["top","open var top: Number?","dev.shibasis.reaktor.core.server.cloudflare.RequestInitCfPropertiesImageDraw.top"]},{"name":"open var top: Number?","description":"dev.shibasis.reaktor.core.server.cloudflare.T$1.top","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-t$1/top.html","searchKeys":["top","open var top: Number?","dev.shibasis.reaktor.core.server.cloudflare.T$1.top"]},{"name":"open var trace: ExportedHandlerTraceHandler<Env>?","description":"dev.shibasis.reaktor.core.server.cloudflare.ExportedHandler.trace","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-exported-handler/trace.html","searchKeys":["trace","open var trace: ExportedHandlerTraceHandler<Env>?","dev.shibasis.reaktor.core.server.cloudflare.ExportedHandler.trace"]},{"name":"open var traces: Array<TraceItem>","description":"dev.shibasis.reaktor.core.server.cloudflare.TailEvent.traces","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-tail-event/traces.html","searchKeys":["traces","open var traces: Array<TraceItem>","dev.shibasis.reaktor.core.server.cloudflare.TailEvent.traces"]},{"name":"open var transfer: Array<Any>?","description":"dev.shibasis.reaktor.core.server.cloudflare.StructuredSerializeOptions.transfer","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-structured-serialize-options/transfer.html","searchKeys":["transfer","open var transfer: Array<Any>?","dev.shibasis.reaktor.core.server.cloudflare.StructuredSerializeOptions.transfer"]},{"name":"open var transform: (chunk: I, controller: TransformStreamDefaultController<O>) -> dynamic?","description":"dev.shibasis.reaktor.core.server.cloudflare.Transformer.transform","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-transformer/transform.html","searchKeys":["transform","open var transform: (chunk: I, controller: TransformStreamDefaultController<O>) -> dynamic?","dev.shibasis.reaktor.core.server.cloudflare.Transformer.transform"]},{"name":"open var trim: T$1?","description":"dev.shibasis.reaktor.core.server.cloudflare.RequestInitCfPropertiesImage.trim","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-request-init-cf-properties-image/trim.html","searchKeys":["trim","open var trim: T$1?","dev.shibasis.reaktor.core.server.cloudflare.RequestInitCfPropertiesImage.trim"]},{"name":"open var type: String","description":"dev.shibasis.reaktor.core.server.cloudflare.Blob.type","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-blob/type.html","searchKeys":["type","open var type: String","dev.shibasis.reaktor.core.server.cloudflare.Blob.type"]},{"name":"open var type: String","description":"dev.shibasis.reaktor.core.server.cloudflare.CryptoKey.type","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-crypto-key/type.html","searchKeys":["type","open var type: String","dev.shibasis.reaktor.core.server.cloudflare.CryptoKey.type"]},{"name":"open var type: String","description":"dev.shibasis.reaktor.core.server.cloudflare.Event.type","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-event/type.html","searchKeys":["type","open var type: String","dev.shibasis.reaktor.core.server.cloudflare.Event.type"]},{"name":"open var type: String?","description":"dev.shibasis.reaktor.core.server.cloudflare.BlobOptions.type","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-blob-options/type.html","searchKeys":["type","open var type: String?","dev.shibasis.reaktor.core.server.cloudflare.BlobOptions.type"]},{"name":"open var type: String?","description":"dev.shibasis.reaktor.core.server.cloudflare.FileOptions.type","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-file-options/type.html","searchKeys":["type","open var type: String?","dev.shibasis.reaktor.core.server.cloudflare.FileOptions.type"]},{"name":"open var type: String?","description":"dev.shibasis.reaktor.core.server.cloudflare.UnderlyingSink.type","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-underlying-sink/type.html","searchKeys":["type","open var type: String?","dev.shibasis.reaktor.core.server.cloudflare.UnderlyingSink.type"]},{"name":"open var type: String?","description":"dev.shibasis.reaktor.core.server.cloudflare.UnderlyingSource.type","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-underlying-source/type.html","searchKeys":["type","open var type: String?","dev.shibasis.reaktor.core.server.cloudflare.UnderlyingSource.type"]},{"name":"open var type: Type?","description":"dev.shibasis.reaktor.core.server.cloudflare.KVNamespaceGetOptionsPartial.type","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-k-v-namespace-get-options-partial/type.html","searchKeys":["type","open var type: Type?","dev.shibasis.reaktor.core.server.cloudflare.KVNamespaceGetOptionsPartial.type"]},{"name":"open var uploaded: Date","description":"dev.shibasis.reaktor.core.server.cloudflare.R2Object.uploaded","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-r2-object/uploaded.html","searchKeys":["uploaded","open var uploaded: Date","dev.shibasis.reaktor.core.server.cloudflare.R2Object.uploaded"]},{"name":"open var uploadedAfter: Date?","description":"dev.shibasis.reaktor.core.server.cloudflare.R2Conditional.uploadedAfter","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-r2-conditional/uploaded-after.html","searchKeys":["uploadedAfter","open var uploadedAfter: Date?","dev.shibasis.reaktor.core.server.cloudflare.R2Conditional.uploadedAfter"]},{"name":"open var uploadedBefore: Date?","description":"dev.shibasis.reaktor.core.server.cloudflare.R2Conditional.uploadedBefore","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-r2-conditional/uploaded-before.html","searchKeys":["uploadedBefore","open var uploadedBefore: Date?","dev.shibasis.reaktor.core.server.cloudflare.R2Conditional.uploadedBefore"]},{"name":"open var url: String","description":"dev.shibasis.reaktor.core.server.cloudflare.Request.url","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-request/url.html","searchKeys":["url","open var url: String","dev.shibasis.reaktor.core.server.cloudflare.Request.url"]},{"name":"open var url: String","description":"dev.shibasis.reaktor.core.server.cloudflare.Response.url","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-response/url.html","searchKeys":["url","open var url: String","dev.shibasis.reaktor.core.server.cloudflare.Response.url"]},{"name":"open var url: String?","description":"dev.shibasis.reaktor.core.server.cloudflare.WebSocket.url","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-web-socket/url.html","searchKeys":["url","open var url: String?","dev.shibasis.reaktor.core.server.cloudflare.WebSocket.url"]},{"name":"open var usages: Array<String>","description":"dev.shibasis.reaktor.core.server.cloudflare.CryptoKey.usages","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-crypto-key/usages.html","searchKeys":["usages","open var usages: Array<String>","dev.shibasis.reaktor.core.server.cloudflare.CryptoKey.usages"]},{"name":"open var use: String?","description":"dev.shibasis.reaktor.core.server.cloudflare.JsonWebKey.use","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-json-web-key/use.html","searchKeys":["use","open var use: String?","dev.shibasis.reaktor.core.server.cloudflare.JsonWebKey.use"]},{"name":"open var username: String","description":"dev.shibasis.reaktor.core.server.cloudflare.URL.username","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-u-r-l/username.html","searchKeys":["username","open var username: String","dev.shibasis.reaktor.core.server.cloudflare.URL.username"]},{"name":"open var username: String?","description":"dev.shibasis.reaktor.core.server.cloudflare.URLPatternURLPatternInit.username","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-u-r-l-pattern-u-r-l-pattern-init/username.html","searchKeys":["username","open var username: String?","dev.shibasis.reaktor.core.server.cloudflare.URLPatternURLPatternInit.username"]},{"name":"open var version: String","description":"dev.shibasis.reaktor.core.server.cloudflare.R2Object.version","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-r2-object/version.html","searchKeys":["version","open var version: String","dev.shibasis.reaktor.core.server.cloudflare.R2Object.version"]},{"name":"open var wasClean: Boolean","description":"dev.shibasis.reaktor.core.server.cloudflare.CloseEvent.wasClean","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-close-event/was-clean.html","searchKeys":["wasClean","open var wasClean: Boolean","dev.shibasis.reaktor.core.server.cloudflare.CloseEvent.wasClean"]},{"name":"open var wasClean: Boolean?","description":"dev.shibasis.reaktor.core.server.cloudflare.CloseEventInit.wasClean","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-close-event-init/was-clean.html","searchKeys":["wasClean","open var wasClean: Boolean?","dev.shibasis.reaktor.core.server.cloudflare.CloseEventInit.wasClean"]},{"name":"open var webSocket: WebSocket?","description":"dev.shibasis.reaktor.core.server.cloudflare.Response.webSocket","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-response/web-socket.html","searchKeys":["webSocket","open var webSocket: WebSocket?","dev.shibasis.reaktor.core.server.cloudflare.Response.webSocket"]},{"name":"open var webSocket: WebSocket?","description":"dev.shibasis.reaktor.core.server.cloudflare.ResponseInit.webSocket","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-response-init/web-socket.html","searchKeys":["webSocket","open var webSocket: WebSocket?","dev.shibasis.reaktor.core.server.cloudflare.ResponseInit.webSocket"]},{"name":"open var width: Number?","description":"dev.shibasis.reaktor.core.server.cloudflare.BasicImageTransformations.width","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-basic-image-transformations/width.html","searchKeys":["width","open var width: Number?","dev.shibasis.reaktor.core.server.cloudflare.BasicImageTransformations.width"]},{"name":"open var writable: WritableStream<I>","description":"dev.shibasis.reaktor.core.server.cloudflare.TransformStream.writable","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-transform-stream/writable.html","searchKeys":["writable","open var writable: WritableStream<I>","dev.shibasis.reaktor.core.server.cloudflare.TransformStream.writable"]},{"name":"open var writableType: String?","description":"dev.shibasis.reaktor.core.server.cloudflare.Transformer.writableType","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-transformer/writable-type.html","searchKeys":["writableType","open var writableType: String?","dev.shibasis.reaktor.core.server.cloudflare.Transformer.writableType"]},{"name":"open var write: (chunk: W, controller: WritableStreamDefaultController) -> dynamic?","description":"dev.shibasis.reaktor.core.server.cloudflare.UnderlyingSink.write","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-underlying-sink/write.html","searchKeys":["write","open var write: (chunk: W, controller: WritableStreamDefaultController) -> dynamic?","dev.shibasis.reaktor.core.server.cloudflare.UnderlyingSink.write"]},{"name":"open var x: String?","description":"dev.shibasis.reaktor.core.server.cloudflare.JsonWebKey.x","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-json-web-key/x.html","searchKeys":["x","open var x: String?","dev.shibasis.reaktor.core.server.cloudflare.JsonWebKey.x"]},{"name":"open var y: String?","description":"dev.shibasis.reaktor.core.server.cloudflare.JsonWebKey.y","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-json-web-key/y.html","searchKeys":["y","open var y: String?","dev.shibasis.reaktor.core.server.cloudflare.JsonWebKey.y"]},{"name":"operator fun <Result> invoke(function: Controller.() -> Result?): Result?","description":"dev.shibasis.reaktor.core.framework.Adapter.invoke","location":"reaktor-core/dev.shibasis.reaktor.core.framework/-adapter/invoke.html","searchKeys":["invoke","operator fun <Result> invoke(function: Controller.() -> Result?): Result?","dev.shibasis.reaktor.core.framework.Adapter.invoke"]},{"name":"sealed class ActivityResultError : Error","description":"dev.shibasis.reaktor.core.extensions.ActivityResultError","location":"reaktor-core/dev.shibasis.reaktor.core.extensions/-activity-result-error/index.html","searchKeys":["ActivityResultError","sealed class ActivityResultError : Error","dev.shibasis.reaktor.core.extensions.ActivityResultError"]},{"name":"sealed class ControllerEvent","description":"dev.shibasis.reaktor.core.framework.ControllerEvent","location":"reaktor-core/dev.shibasis.reaktor.core.framework/-controller-event/index.html","searchKeys":["ControllerEvent","sealed class ControllerEvent","dev.shibasis.reaktor.core.framework.ControllerEvent"]},{"name":"sealed class Denied : PermissionResult","description":"dev.shibasis.reaktor.core.adapters.PermissionResult.Denied","location":"reaktor-core/dev.shibasis.reaktor.core.adapters/-permission-result/-denied/index.html","searchKeys":["Denied","sealed class Denied : PermissionResult","dev.shibasis.reaktor.core.adapters.PermissionResult.Denied"]},{"name":"sealed class PermissionResult","description":"dev.shibasis.reaktor.core.adapters.PermissionResult","location":"reaktor-core/dev.shibasis.reaktor.core.adapters/-permission-result/index.html","searchKeys":["PermissionResult","sealed class PermissionResult","dev.shibasis.reaktor.core.adapters.PermissionResult"]},{"name":"suspend fun <Input, Output> ComponentActivity.getResultFromActivity(contract: ActivityResultContract<Input, Output>, input: Input): Output","description":"dev.shibasis.reaktor.core.extensions.getResultFromActivity","location":"reaktor-core/dev.shibasis.reaktor.core.extensions/get-result-from-activity.html","searchKeys":["getResultFromActivity","suspend fun <Input, Output> ComponentActivity.getResultFromActivity(contract: ActivityResultContract<Input, Output>, input: Input): Output","dev.shibasis.reaktor.core.extensions.getResultFromActivity"]},{"name":"suspend fun <Result> invokeSuspend(function: suspend Controller.() -> Result?): Result?","description":"dev.shibasis.reaktor.core.framework.Adapter.invokeSuspend","location":"reaktor-core/dev.shibasis.reaktor.core.framework/-adapter/invoke-suspend.html","searchKeys":["invokeSuspend","suspend fun <Result> invokeSuspend(function: suspend Controller.() -> Result?): Result?","dev.shibasis.reaktor.core.framework.Adapter.invokeSuspend"]},{"name":"suspend fun ComponentActivity.getResultFromActivity(intent: Intent): ActivityResult","description":"dev.shibasis.reaktor.core.extensions.getResultFromActivity","location":"reaktor-core/dev.shibasis.reaktor.core.extensions/get-result-from-activity.html","searchKeys":["getResultFromActivity","suspend fun ComponentActivity.getResultFromActivity(intent: Intent): ActivityResult","dev.shibasis.reaktor.core.extensions.getResultFromActivity"]},{"name":"suspend fun cameraPermissionHandler(): PermissionResult","description":"dev.shibasis.reaktor.core.adapters.cameraPermissionHandler","location":"reaktor-core/dev.shibasis.reaktor.core.adapters/camera-permission-handler.html","searchKeys":["cameraPermissionHandler","suspend fun cameraPermissionHandler(): PermissionResult","dev.shibasis.reaktor.core.adapters.cameraPermissionHandler"]},{"name":"suspend fun galleryPermissionHandler(): PermissionResult","description":"dev.shibasis.reaktor.core.adapters.galleryPermissionHandler","location":"reaktor-core/dev.shibasis.reaktor.core.adapters/gallery-permission-handler.html","searchKeys":["galleryPermissionHandler","suspend fun galleryPermissionHandler(): PermissionResult","dev.shibasis.reaktor.core.adapters.galleryPermissionHandler"]},{"name":"suspend fun requestOptional(vararg permissions: String): Map<String, PermissionResult>","description":"dev.shibasis.reaktor.core.adapters.PermissionAdapter.requestOptional","location":"reaktor-core/dev.shibasis.reaktor.core.adapters/-permission-adapter/request-optional.html","searchKeys":["requestOptional","suspend fun requestOptional(vararg permissions: String): Map<String, PermissionResult>","dev.shibasis.reaktor.core.adapters.PermissionAdapter.requestOptional"]},{"name":"suspend fun speechRecognitionHandler(): PermissionResult","description":"dev.shibasis.reaktor.core.adapters.speechRecognitionHandler","location":"reaktor-core/dev.shibasis.reaktor.core.adapters/speech-recognition-handler.html","searchKeys":["speechRecognitionHandler","suspend fun speechRecognitionHandler(): PermissionResult","dev.shibasis.reaktor.core.adapters.speechRecognitionHandler"]},{"name":"typealias DOMException = Error","description":"dev.shibasis.reaktor.core.server.cloudflare.DOMException","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-d-o-m-exception/index.html","searchKeys":["DOMException","typealias DOMException = Error","dev.shibasis.reaktor.core.server.cloudflare.DOMException"]},{"name":"typealias EmailExportedHandler<Env> = (message: ForwardableEmailMessage, env: Env, ctx: ExecutionContext) -> dynamic","description":"dev.shibasis.reaktor.core.server.cloudflare.EmailExportedHandler","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-email-exported-handler/index.html","searchKeys":["EmailExportedHandler","typealias EmailExportedHandler<Env> = (message: ForwardableEmailMessage, env: Env, ctx: ExecutionContext) -> dynamic","dev.shibasis.reaktor.core.server.cloudflare.EmailExportedHandler"]},{"name":"typealias EventListener<EventType> = (event: EventType) -> Unit","description":"dev.shibasis.reaktor.core.server.cloudflare.EventListener","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-event-listener/index.html","searchKeys":["EventListener","typealias EventListener<EventType> = (event: EventType) -> Unit","dev.shibasis.reaktor.core.server.cloudflare.EventListener"]},{"name":"typealias ExportedHandlerFetchHandler<Env, CfHostMetadata> = (request: Request<CfHostMetadata, IncomingRequestCfPropertiesBase>, env: Env, ctx: ExecutionContext) -> dynamic","description":"dev.shibasis.reaktor.core.server.cloudflare.ExportedHandlerFetchHandler","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-exported-handler-fetch-handler/index.html","searchKeys":["ExportedHandlerFetchHandler","typealias ExportedHandlerFetchHandler<Env, CfHostMetadata> = (request: Request<CfHostMetadata, IncomingRequestCfPropertiesBase>, env: Env, ctx: ExecutionContext) -> dynamic","dev.shibasis.reaktor.core.server.cloudflare.ExportedHandlerFetchHandler"]},{"name":"typealias ExportedHandlerQueueHandler<Env, Message> = (batch: MessageBatch<Message>, env: Env, ctx: ExecutionContext) -> dynamic","description":"dev.shibasis.reaktor.core.server.cloudflare.ExportedHandlerQueueHandler","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-exported-handler-queue-handler/index.html","searchKeys":["ExportedHandlerQueueHandler","typealias ExportedHandlerQueueHandler<Env, Message> = (batch: MessageBatch<Message>, env: Env, ctx: ExecutionContext) -> dynamic","dev.shibasis.reaktor.core.server.cloudflare.ExportedHandlerQueueHandler"]},{"name":"typealias ExportedHandlerScheduledHandler<Env> = (controller: ScheduledController, env: Env, ctx: ExecutionContext) -> dynamic","description":"dev.shibasis.reaktor.core.server.cloudflare.ExportedHandlerScheduledHandler","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-exported-handler-scheduled-handler/index.html","searchKeys":["ExportedHandlerScheduledHandler","typealias ExportedHandlerScheduledHandler<Env> = (controller: ScheduledController, env: Env, ctx: ExecutionContext) -> dynamic","dev.shibasis.reaktor.core.server.cloudflare.ExportedHandlerScheduledHandler"]},{"name":"typealias ExportedHandlerTailHandler<Env> = (events: Array<TraceItem>, env: Env, ctx: ExecutionContext) -> dynamic","description":"dev.shibasis.reaktor.core.server.cloudflare.ExportedHandlerTailHandler","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-exported-handler-tail-handler/index.html","searchKeys":["ExportedHandlerTailHandler","typealias ExportedHandlerTailHandler<Env> = (events: Array<TraceItem>, env: Env, ctx: ExecutionContext) -> dynamic","dev.shibasis.reaktor.core.server.cloudflare.ExportedHandlerTailHandler"]},{"name":"typealias ExportedHandlerTestHandler<Env> = (controller: TestController, env: Env, ctx: ExecutionContext) -> dynamic","description":"dev.shibasis.reaktor.core.server.cloudflare.ExportedHandlerTestHandler","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-exported-handler-test-handler/index.html","searchKeys":["ExportedHandlerTestHandler","typealias ExportedHandlerTestHandler<Env> = (controller: TestController, env: Env, ctx: ExecutionContext) -> dynamic","dev.shibasis.reaktor.core.server.cloudflare.ExportedHandlerTestHandler"]},{"name":"typealias ExportedHandlerTraceHandler<Env> = (traces: Array<TraceItem>, env: Env, ctx: ExecutionContext) -> dynamic","description":"dev.shibasis.reaktor.core.server.cloudflare.ExportedHandlerTraceHandler","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-exported-handler-trace-handler/index.html","searchKeys":["ExportedHandlerTraceHandler","typealias ExportedHandlerTraceHandler<Env> = (traces: Array<TraceItem>, env: Env, ctx: ExecutionContext) -> dynamic","dev.shibasis.reaktor.core.server.cloudflare.ExportedHandlerTraceHandler"]},{"name":"typealias PagesFunction<Env, Params, Data> = (context: EventContext<Env, Params, Data>) -> dynamic","description":"dev.shibasis.reaktor.core.server.cloudflare.PagesFunction","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-pages-function/index.html","searchKeys":["PagesFunction","typealias PagesFunction<Env, Params, Data> = (context: EventContext<Env, Params, Data>) -> dynamic","dev.shibasis.reaktor.core.server.cloudflare.PagesFunction"]},{"name":"typealias PagesPluginFunction<Env, Params, Data, PluginArgs> = (context: EventPluginContext<Env, Params, Data, PluginArgs>) -> dynamic","description":"dev.shibasis.reaktor.core.server.cloudflare.PagesPluginFunction","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-pages-plugin-function/index.html","searchKeys":["PagesPluginFunction","typealias PagesPluginFunction<Env, Params, Data, PluginArgs> = (context: EventPluginContext<Env, Params, Data, PluginArgs>) -> dynamic","dev.shibasis.reaktor.core.server.cloudflare.PagesPluginFunction"]},{"name":"typealias Params<P> = Record<P, dynamic>","description":"dev.shibasis.reaktor.core.server.cloudflare.Params","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-params/index.html","searchKeys":["Params","typealias Params<P> = Record<P, dynamic>","dev.shibasis.reaktor.core.server.cloudflare.Params"]},{"name":"typealias PermissionRequestHandler = suspend () -> PermissionResult","description":"dev.shibasis.reaktor.core.adapters.PermissionRequestHandler","location":"reaktor-core/dev.shibasis.reaktor.core.adapters/-permission-request-handler/index.html","searchKeys":["PermissionRequestHandler","typealias PermissionRequestHandler = suspend () -> PermissionResult","dev.shibasis.reaktor.core.adapters.PermissionRequestHandler"]},{"name":"typealias R2Error = Error","description":"dev.shibasis.reaktor.core.server.cloudflare.R2Error","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-r2-error/index.html","searchKeys":["R2Error","typealias R2Error = Error","dev.shibasis.reaktor.core.server.cloudflare.R2Error"]},{"name":"val BaseActivity.scope: LifecycleCoroutineScope","description":"dev.shibasis.reaktor.core.extensions.scope","location":"reaktor-core/dev.shibasis.reaktor.core.extensions/scope.html","searchKeys":["scope","val BaseActivity.scope: LifecycleCoroutineScope","dev.shibasis.reaktor.core.extensions.scope"]},{"name":"val CAMERA: String","description":"dev.shibasis.reaktor.core.adapters.Permission.CAMERA","location":"reaktor-core/dev.shibasis.reaktor.core.adapters/-permission/-c-a-m-e-r-a.html","searchKeys":["CAMERA","val CAMERA: String","dev.shibasis.reaktor.core.adapters.Permission.CAMERA"]},{"name":"val CPU: DispatchGroup","description":"dev.shibasis.reaktor.core.framework.Dispatch.CPU","location":"reaktor-core/dev.shibasis.reaktor.core.framework/-dispatch/-c-p-u.html","searchKeys":["CPU","val CPU: DispatchGroup","dev.shibasis.reaktor.core.framework.Dispatch.CPU"]},{"name":"val Dispatch.CPUQueue: dispatch_queue_global_t","description":"dev.shibasis.reaktor.core.framework.CPUQueue","location":"reaktor-core/dev.shibasis.reaktor.core.framework/-c-p-u-queue.html","searchKeys":["CPUQueue","val Dispatch.CPUQueue: dispatch_queue_global_t","dev.shibasis.reaktor.core.framework.CPUQueue"]},{"name":"val Dispatch.IOQueue: dispatch_queue_global_t","description":"dev.shibasis.reaktor.core.framework.IOQueue","location":"reaktor-core/dev.shibasis.reaktor.core.framework/-i-o-queue.html","searchKeys":["IOQueue","val Dispatch.IOQueue: dispatch_queue_global_t","dev.shibasis.reaktor.core.framework.IOQueue"]},{"name":"val Dispatch.MainQueue: dispatch_queue_global_t","description":"dev.shibasis.reaktor.core.framework.MainQueue","location":"reaktor-core/dev.shibasis.reaktor.core.framework/-main-queue.html","searchKeys":["MainQueue","val Dispatch.MainQueue: dispatch_queue_global_t","dev.shibasis.reaktor.core.framework.MainQueue"]},{"name":"val GALLERY: String","description":"dev.shibasis.reaktor.core.adapters.Permission.GALLERY","location":"reaktor-core/dev.shibasis.reaktor.core.adapters/-permission/-g-a-l-l-e-r-y.html","searchKeys":["GALLERY","val GALLERY: String","dev.shibasis.reaktor.core.adapters.Permission.GALLERY"]},{"name":"val IO: DispatchGroup","description":"dev.shibasis.reaktor.core.framework.Dispatch.IO","location":"reaktor-core/dev.shibasis.reaktor.core.framework/-dispatch/-i-o.html","searchKeys":["IO","val IO: DispatchGroup","dev.shibasis.reaktor.core.framework.Dispatch.IO"]},{"name":"val LOCATION: String","description":"dev.shibasis.reaktor.core.adapters.Permission.LOCATION","location":"reaktor-core/dev.shibasis.reaktor.core.adapters/-permission/-l-o-c-a-t-i-o-n.html","searchKeys":["LOCATION","val LOCATION: String","dev.shibasis.reaktor.core.adapters.Permission.LOCATION"]},{"name":"val Main: DispatchGroup","description":"dev.shibasis.reaktor.core.framework.Dispatch.Main","location":"reaktor-core/dev.shibasis.reaktor.core.framework/-dispatch/-main.html","searchKeys":["Main","val Main: DispatchGroup","dev.shibasis.reaktor.core.framework.Dispatch.Main"]},{"name":"val NULL_CONTROLLER: Error","description":"dev.shibasis.reaktor.core.framework.Adapter.NULL_CONTROLLER","location":"reaktor-core/dev.shibasis.reaktor.core.framework/-adapter/-n-u-l-l_-c-o-n-t-r-o-l-l-e-r.html","searchKeys":["NULL_CONTROLLER","val NULL_CONTROLLER: Error","dev.shibasis.reaktor.core.framework.Adapter.NULL_CONTROLLER"]},{"name":"val SPEECH_RECOGNITION: String","description":"dev.shibasis.reaktor.core.adapters.Permission.SPEECH_RECOGNITION","location":"reaktor-core/dev.shibasis.reaktor.core.adapters/-permission/-s-p-e-e-c-h_-r-e-c-o-g-n-i-t-i-o-n.html","searchKeys":["SPEECH_RECOGNITION","val SPEECH_RECOGNITION: String","dev.shibasis.reaktor.core.adapters.Permission.SPEECH_RECOGNITION"]},{"name":"val STORAGE: String","description":"dev.shibasis.reaktor.core.adapters.Permission.STORAGE","location":"reaktor-core/dev.shibasis.reaktor.core.adapters/-permission/-s-t-o-r-a-g-e.html","searchKeys":["STORAGE","val STORAGE: String","dev.shibasis.reaktor.core.adapters.Permission.STORAGE"]},{"name":"val adapters: MutableList<Adapter<ComponentActivity>>","description":"dev.shibasis.reaktor.core.framework.BaseActivity.adapters","location":"reaktor-core/dev.shibasis.reaktor.core.framework/-base-activity/adapters.html","searchKeys":["adapters","val adapters: MutableList<Adapter<ComponentActivity>>","dev.shibasis.reaktor.core.framework.BaseActivity.adapters"]},{"name":"val asyncQueue: NSObject?","description":"dev.shibasis.reaktor.core.framework.asyncQueue","location":"reaktor-core/dev.shibasis.reaktor.core.framework/async-queue.html","searchKeys":["asyncQueue","val asyncQueue: NSObject?","dev.shibasis.reaktor.core.framework.asyncQueue"]},{"name":"val code: Int","description":"dev.shibasis.reaktor.core.network.ErrorMessage.code","location":"reaktor-core/dev.shibasis.reaktor.core.network/-error-message/code.html","searchKeys":["code","val code: Int","dev.shibasis.reaktor.core.network.ErrorMessage.code"]},{"name":"val code: Int","description":"dev.shibasis.reaktor.core.network.StatusCode.code","location":"reaktor-core/dev.shibasis.reaktor.core.network/-status-code/code.html","searchKeys":["code","val code: Int","dev.shibasis.reaktor.core.network.StatusCode.code"]},{"name":"val controller: Controller?","description":"dev.shibasis.reaktor.core.framework.Adapter.controller","location":"reaktor-core/dev.shibasis.reaktor.core.framework/-adapter/controller.html","searchKeys":["controller","val controller: Controller?","dev.shibasis.reaktor.core.framework.Adapter.controller"]},{"name":"val entries: EnumEntries<PlatformType>","description":"dev.shibasis.reaktor.core.framework.PlatformType.entries","location":"reaktor-core/dev.shibasis.reaktor.core.framework/-platform-type/entries.html","searchKeys":["entries","val entries: EnumEntries<PlatformType>","dev.shibasis.reaktor.core.framework.PlatformType.entries"]},{"name":"val entries: EnumEntries<StatusCode>","description":"dev.shibasis.reaktor.core.network.StatusCode.entries","location":"reaktor-core/dev.shibasis.reaktor.core.network/-status-code/entries.html","searchKeys":["entries","val entries: EnumEntries<StatusCode>","dev.shibasis.reaktor.core.network.StatusCode.entries"]},{"name":"val error: Error","description":"dev.shibasis.reaktor.core.adapters.PermissionResult.Denied.Unknown.error","location":"reaktor-core/dev.shibasis.reaktor.core.adapters/-permission-result/-denied/-unknown/error.html","searchKeys":["error","val error: Error","dev.shibasis.reaktor.core.adapters.PermissionResult.Denied.Unknown.error"]},{"name":"val id: Int","description":"dev.shibasis.reaktor.core.framework.CreateSlot.id","location":"reaktor-core/dev.shibasis.reaktor.core.framework/-create-slot/id.html","searchKeys":["id","val id: Int","dev.shibasis.reaktor.core.framework.CreateSlot.id"]},{"name":"val json: Json","description":"dev.shibasis.reaktor.core.framework.json","location":"reaktor-core/dev.shibasis.reaktor.core.framework/json.html","searchKeys":["json","val json: Json","dev.shibasis.reaktor.core.framework.json"]},{"name":"val jsonData: String","description":"dev.shibasis.reaktor.core.network.Response.jsonData","location":"reaktor-core/dev.shibasis.reaktor.core.network/-response/json-data.html","searchKeys":["jsonData","val jsonData: String","dev.shibasis.reaktor.core.network.Response.jsonData"]},{"name":"val message: String","description":"dev.shibasis.reaktor.core.network.ErrorMessage.message","location":"reaktor-core/dev.shibasis.reaktor.core.network/-error-message/message.html","searchKeys":["message","val message: String","dev.shibasis.reaktor.core.network.ErrorMessage.message"]},{"name":"val name: PlatformType","description":"dev.shibasis.reaktor.core.framework.Platform.name","location":"reaktor-core/dev.shibasis.reaktor.core.framework/-platform/name.html","searchKeys":["name","val name: PlatformType","dev.shibasis.reaktor.core.framework.Platform.name"]},{"name":"val ref: WeakRef<Controller>","description":"dev.shibasis.reaktor.core.framework.Adapter.ref","location":"reaktor-core/dev.shibasis.reaktor.core.framework/-adapter/ref.html","searchKeys":["ref","val ref: WeakRef<Controller>","dev.shibasis.reaktor.core.framework.Adapter.ref"]},{"name":"val ref: WeakReference<T & Any>?","description":"dev.shibasis.reaktor.core.framework.WeakRef.ref","location":"reaktor-core/dev.shibasis.reaktor.core.framework/-weak-ref/ref.html","searchKeys":["ref","val ref: WeakReference<T & Any>?","dev.shibasis.reaktor.core.framework.WeakRef.ref"]},{"name":"val scope: CoroutineScope","description":"dev.shibasis.reaktor.core.framework.Adapter.scope","location":"reaktor-core/dev.shibasis.reaktor.core.framework/-adapter/scope.html","searchKeys":["scope","val scope: CoroutineScope","dev.shibasis.reaktor.core.framework.Adapter.scope"]},{"name":"val statusCode: StatusCode","description":"dev.shibasis.reaktor.core.network.Response.statusCode","location":"reaktor-core/dev.shibasis.reaktor.core.network/-response/status-code.html","searchKeys":["statusCode","val statusCode: StatusCode","dev.shibasis.reaktor.core.network.Response.statusCode"]},{"name":"var AT_TARGET: Number","description":"dev.shibasis.reaktor.core.server.cloudflare.Event.Companion.AT_TARGET","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-event/-companion/-a-t_-t-a-r-g-e-t.html","searchKeys":["AT_TARGET","var AT_TARGET: Number","dev.shibasis.reaktor.core.server.cloudflare.Event.Companion.AT_TARGET"]},{"name":"var BUBBLING_PHASE: Number","description":"dev.shibasis.reaktor.core.server.cloudflare.Event.Companion.BUBBLING_PHASE","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-event/-companion/-b-u-b-b-l-i-n-g_-p-h-a-s-e.html","searchKeys":["BUBBLING_PHASE","var BUBBLING_PHASE: Number","dev.shibasis.reaktor.core.server.cloudflare.Event.Companion.BUBBLING_PHASE"]},{"name":"var CAPTURING_PHASE: Number","description":"dev.shibasis.reaktor.core.server.cloudflare.Event.Companion.CAPTURING_PHASE","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-event/-companion/-c-a-p-t-u-r-i-n-g_-p-h-a-s-e.html","searchKeys":["CAPTURING_PHASE","var CAPTURING_PHASE: Number","dev.shibasis.reaktor.core.server.cloudflare.Event.Companion.CAPTURING_PHASE"]},{"name":"var Feature.Permission: PermissionAdapter<*>?","description":"dev.shibasis.reaktor.core.adapters.Permission","location":"reaktor-core/dev.shibasis.reaktor.core.adapters/-permission.html","searchKeys":["Permission","var Feature.Permission: PermissionAdapter<*>?","dev.shibasis.reaktor.core.adapters.Permission"]},{"name":"var Feature.Storage: StorageAdapter<*>?","description":"dev.shibasis.reaktor.core.adapters.Storage","location":"reaktor-core/dev.shibasis.reaktor.core.adapters/-storage.html","searchKeys":["Storage","var Feature.Storage: StorageAdapter<*>?","dev.shibasis.reaktor.core.adapters.Storage"]},{"name":"var NONE: Number","description":"dev.shibasis.reaktor.core.server.cloudflare.Event.Companion.NONE","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-event/-companion/-n-o-n-e.html","searchKeys":["NONE","var NONE: Number","dev.shibasis.reaktor.core.server.cloudflare.Event.Companion.NONE"]},{"name":"var READY_STATE_CLOSED: Number","description":"dev.shibasis.reaktor.core.server.cloudflare.WebSocket.Companion.READY_STATE_CLOSED","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-web-socket/-companion/-r-e-a-d-y_-s-t-a-t-e_-c-l-o-s-e-d.html","searchKeys":["READY_STATE_CLOSED","var READY_STATE_CLOSED: Number","dev.shibasis.reaktor.core.server.cloudflare.WebSocket.Companion.READY_STATE_CLOSED"]},{"name":"var READY_STATE_CLOSING: Number","description":"dev.shibasis.reaktor.core.server.cloudflare.WebSocket.Companion.READY_STATE_CLOSING","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-web-socket/-companion/-r-e-a-d-y_-s-t-a-t-e_-c-l-o-s-i-n-g.html","searchKeys":["READY_STATE_CLOSING","var READY_STATE_CLOSING: Number","dev.shibasis.reaktor.core.server.cloudflare.WebSocket.Companion.READY_STATE_CLOSING"]},{"name":"var READY_STATE_CONNECTING: Number","description":"dev.shibasis.reaktor.core.server.cloudflare.WebSocket.Companion.READY_STATE_CONNECTING","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-web-socket/-companion/-r-e-a-d-y_-s-t-a-t-e_-c-o-n-n-e-c-t-i-n-g.html","searchKeys":["READY_STATE_CONNECTING","var READY_STATE_CONNECTING: Number","dev.shibasis.reaktor.core.server.cloudflare.WebSocket.Companion.READY_STATE_CONNECTING"]},{"name":"var READY_STATE_OPEN: Number","description":"dev.shibasis.reaktor.core.server.cloudflare.WebSocket.Companion.READY_STATE_OPEN","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-web-socket/-companion/-r-e-a-d-y_-s-t-a-t-e_-o-p-e-n.html","searchKeys":["READY_STATE_OPEN","var READY_STATE_OPEN: Number","dev.shibasis.reaktor.core.server.cloudflare.WebSocket.Companion.READY_STATE_OPEN"]},{"name":"var prototype: ReadableStream<Uint8Array>","description":"dev.shibasis.reaktor.core.server.cloudflare.ReadableStream.Companion.prototype","location":"reaktor-core/dev.shibasis.reaktor.core.server.cloudflare/-readable-stream/-companion/prototype.html","searchKeys":["prototype","var prototype: ReadableStream<Uint8Array>","dev.shibasis.reaktor.core.server.cloudflare.ReadableStream.Companion.prototype"]},{"name":"Initial","description":"dev.shibasis.reaktor.ui.material.PromiseState.Initial","location":"reaktor-ui/dev.shibasis.reaktor.ui.material/-promise-state/-initial/index.html","searchKeys":["Initial","Initial","dev.shibasis.reaktor.ui.material.PromiseState.Initial"]},{"name":"Pending","description":"dev.shibasis.reaktor.ui.material.PromiseState.Pending","location":"reaktor-ui/dev.shibasis.reaktor.ui.material/-promise-state/-pending/index.html","searchKeys":["Pending","Pending","dev.shibasis.reaktor.ui.material.PromiseState.Pending"]},{"name":"Rejected","description":"dev.shibasis.reaktor.ui.material.PromiseState.Rejected","location":"reaktor-ui/dev.shibasis.reaktor.ui.material/-promise-state/-rejected/index.html","searchKeys":["Rejected","Rejected","dev.shibasis.reaktor.ui.material.PromiseState.Rejected"]},{"name":"Resolved","description":"dev.shibasis.reaktor.ui.material.PromiseState.Resolved","location":"reaktor-ui/dev.shibasis.reaktor.ui.material/-promise-state/-resolved/index.html","searchKeys":["Resolved","Resolved","dev.shibasis.reaktor.ui.material.PromiseState.Resolved"]},{"name":"abstract fun Render()","description":"dev.shibasis.reaktor.ui.compose.NoArgRender.Render","location":"reaktor-ui/dev.shibasis.reaktor.ui.compose/-no-arg-render/-render.html","searchKeys":["Render","abstract fun Render()","dev.shibasis.reaktor.ui.compose.NoArgRender.Render"]},{"name":"class Theme(designSystem: DesignSystem)","description":"dev.shibasis.reaktor.ui.Theme","location":"reaktor-ui/dev.shibasis.reaktor.ui/-theme/index.html","searchKeys":["Theme","class Theme(designSystem: DesignSystem)","dev.shibasis.reaktor.ui.Theme"]},{"name":"constructor(designSystem: DesignSystem)","description":"dev.shibasis.reaktor.ui.Theme.Theme","location":"reaktor-ui/dev.shibasis.reaktor.ui/-theme/-theme.html","searchKeys":["Theme","constructor(designSystem: DesignSystem)","dev.shibasis.reaktor.ui.Theme.Theme"]},{"name":"constructor(extraSmall: Dp = 4.dp, small: Dp = 8.dp, medium: Dp = 16.dp, large: Dp = 24.dp, extraLarge: Dp = 32.dp)","description":"dev.shibasis.reaktor.ui.Sizes.Sizes","location":"reaktor-ui/dev.shibasis.reaktor.ui/-sizes/-sizes.html","searchKeys":["Sizes","constructor(extraSmall: Dp = 4.dp, small: Dp = 8.dp, medium: Dp = 16.dp, large: Dp = 24.dp, extraLarge: Dp = 32.dp)","dev.shibasis.reaktor.ui.Sizes.Sizes"]},{"name":"constructor(state: PromiseState, data: T? = null, error: Throwable? = null)","description":"dev.shibasis.reaktor.ui.material.PromiseResult.PromiseResult","location":"reaktor-ui/dev.shibasis.reaktor.ui.material/-promise-result/-promise-result.html","searchKeys":["PromiseResult","constructor(state: PromiseState, data: T? = null, error: Throwable? = null)","dev.shibasis.reaktor.ui.material.PromiseResult.PromiseResult"]},{"name":"data class PromiseResult<T>(val state: PromiseState, val data: T? = null, val error: Throwable? = null)","description":"dev.shibasis.reaktor.ui.material.PromiseResult","location":"reaktor-ui/dev.shibasis.reaktor.ui.material/-promise-result/index.html","searchKeys":["PromiseResult","data class PromiseResult<T>(val state: PromiseState, val data: T? = null, val error: Throwable? = null)","dev.shibasis.reaktor.ui.material.PromiseResult"]},{"name":"data class Sizes(val extraSmall: Dp = 4.dp, val small: Dp = 8.dp, val medium: Dp = 16.dp, val large: Dp = 24.dp, val extraLarge: Dp = 32.dp)","description":"dev.shibasis.reaktor.ui.Sizes","location":"reaktor-ui/dev.shibasis.reaktor.ui/-sizes/index.html","searchKeys":["Sizes","data class Sizes(val extraSmall: Dp = 4.dp, val small: Dp = 8.dp, val medium: Dp = 16.dp, val large: Dp = 24.dp, val extraLarge: Dp = 32.dp)","dev.shibasis.reaktor.ui.Sizes"]},{"name":"enum PromiseState : Enum<PromiseState> ","description":"dev.shibasis.reaktor.ui.material.PromiseState","location":"reaktor-ui/dev.shibasis.reaktor.ui.material/-promise-state/index.html","searchKeys":["PromiseState","enum PromiseState : Enum<PromiseState> ","dev.shibasis.reaktor.ui.material.PromiseState"]},{"name":"fun <T> usePromise(promiseFactory: () -> Promise<T>?, dependencies: Dependencies): PromiseResult<T>","description":"dev.shibasis.reaktor.ui.material.usePromise","location":"reaktor-ui/dev.shibasis.reaktor.ui.material/use-promise.html","searchKeys":["usePromise","fun <T> usePromise(promiseFactory: () -> Promise<T>?, dependencies: Dependencies): PromiseResult<T>","dev.shibasis.reaktor.ui.material.usePromise"]},{"name":"fun <T> useState(initialValue: T, factory: (T) -> MutableState<T> = { mutableStateOf(it) }): MutableState<T>","description":"dev.shibasis.reaktor.ui.compose.useState","location":"reaktor-ui/dev.shibasis.reaktor.ui.compose/use-state.html","searchKeys":["useState","fun <T> useState(initialValue: T, factory: (T) -> MutableState<T> = { mutableStateOf(it) }): MutableState<T>","dev.shibasis.reaktor.ui.compose.useState"]},{"name":"fun ButtonFloatingAction(modifier: Modifier = Modifier, onClick: () -> Unit = {}, shape: Shape = FloatingActionButtonDefaults.extendedFabShape, containerColor: Color = FloatingActionButtonDefaults.containerColor, contentColor: Color = contentColorFor(containerColor), elevation: FloatingActionButtonElevation = FloatingActionButtonDefaults.elevation(), content: RowScope.() -> Unit = {})","description":"dev.shibasis.reaktor.ui.Theme.ButtonFloatingAction","location":"reaktor-ui/dev.shibasis.reaktor.ui/-theme/-button-floating-action.html","searchKeys":["ButtonFloatingAction","fun ButtonFloatingAction(modifier: Modifier = Modifier, onClick: () -> Unit = {}, shape: Shape = FloatingActionButtonDefaults.extendedFabShape, containerColor: Color = FloatingActionButtonDefaults.containerColor, contentColor: Color = contentColorFor(containerColor), elevation: FloatingActionButtonElevation = FloatingActionButtonDefaults.elevation(), content: RowScope.() -> Unit = {})","dev.shibasis.reaktor.ui.Theme.ButtonFloatingAction"]},{"name":"fun ButtonIcon(modifier: Modifier = Modifier, imageVector: ImageVector, onClick: () -> Unit = {})","description":"dev.shibasis.reaktor.ui.Theme.ButtonIcon","location":"reaktor-ui/dev.shibasis.reaktor.ui/-theme/-button-icon.html","searchKeys":["ButtonIcon","fun ButtonIcon(modifier: Modifier = Modifier, imageVector: ImageVector, onClick: () -> Unit = {})","dev.shibasis.reaktor.ui.Theme.ButtonIcon"]},{"name":"fun ButtonPrimary(modifier: Modifier = Modifier, onClick: () -> Unit = {}, enabled: Boolean = true, shape: Shape = ButtonDefaults.shape, colors: ButtonColors = ButtonDefaults.buttonColors(), elevation: ButtonElevation? = ButtonDefaults.buttonElevation(), content: RowScope.() -> Unit = {})","description":"dev.shibasis.reaktor.ui.Theme.ButtonPrimary","location":"reaktor-ui/dev.shibasis.reaktor.ui/-theme/-button-primary.html","searchKeys":["ButtonPrimary","fun ButtonPrimary(modifier: Modifier = Modifier, onClick: () -> Unit = {}, enabled: Boolean = true, shape: Shape = ButtonDefaults.shape, colors: ButtonColors = ButtonDefaults.buttonColors(), elevation: ButtonElevation? = ButtonDefaults.buttonElevation(), content: RowScope.() -> Unit = {})","dev.shibasis.reaktor.ui.Theme.ButtonPrimary"]},{"name":"fun ButtonSecondary(modifier: Modifier = Modifier, onClick: () -> Unit = {}, enabled: Boolean = true, shape: Shape = ButtonDefaults.shape, colors: ButtonColors = ButtonDefaults.buttonColors(), elevation: ButtonElevation? = ButtonDefaults.buttonElevation(), content: RowScope.() -> Unit = {})","description":"dev.shibasis.reaktor.ui.Theme.ButtonSecondary","location":"reaktor-ui/dev.shibasis.reaktor.ui/-theme/-button-secondary.html","searchKeys":["ButtonSecondary","fun ButtonSecondary(modifier: Modifier = Modifier, onClick: () -> Unit = {}, enabled: Boolean = true, shape: Shape = ButtonDefaults.shape, colors: ButtonColors = ButtonDefaults.buttonColors(), elevation: ButtonElevation? = ButtonDefaults.buttonElevation(), content: RowScope.() -> Unit = {})","dev.shibasis.reaktor.ui.Theme.ButtonSecondary"]},{"name":"fun CardView(modifier: Modifier = Modifier, content: BoxScope.() -> Unit = {})","description":"dev.shibasis.reaktor.ui.Theme.CardView","location":"reaktor-ui/dev.shibasis.reaktor.ui/-theme/-card-view.html","searchKeys":["CardView","fun CardView(modifier: Modifier = Modifier, content: BoxScope.() -> Unit = {})","dev.shibasis.reaktor.ui.Theme.CardView"]},{"name":"fun Example()","description":"dev.shibasis.reaktor.ui.Example","location":"reaktor-ui/dev.shibasis.reaktor.ui/-example.html","searchKeys":["Example","fun Example()","dev.shibasis.reaktor.ui.Example"]},{"name":"fun InputText(modifier: Modifier = Modifier, value: String = \"\", onValueChange: (String) -> Unit = {}, label: () -> Unit = {}, placeholder: String = \"\")","description":"dev.shibasis.reaktor.ui.Theme.InputText","location":"reaktor-ui/dev.shibasis.reaktor.ui/-theme/-input-text.html","searchKeys":["InputText","fun InputText(modifier: Modifier = Modifier, value: String = \"\", onValueChange: (String) -> Unit = {}, label: () -> Unit = {}, placeholder: String = \"\")","dev.shibasis.reaktor.ui.Theme.InputText"]},{"name":"fun Modifier.paddingExtraLarge(): Modifier","description":"dev.shibasis.reaktor.ui.Theme.paddingExtraLarge","location":"reaktor-ui/dev.shibasis.reaktor.ui/-theme/padding-extra-large.html","searchKeys":["paddingExtraLarge","fun Modifier.paddingExtraLarge(): Modifier","dev.shibasis.reaktor.ui.Theme.paddingExtraLarge"]},{"name":"fun Modifier.paddingExtraSmall(): Modifier","description":"dev.shibasis.reaktor.ui.Theme.paddingExtraSmall","location":"reaktor-ui/dev.shibasis.reaktor.ui/-theme/padding-extra-small.html","searchKeys":["paddingExtraSmall","fun Modifier.paddingExtraSmall(): Modifier","dev.shibasis.reaktor.ui.Theme.paddingExtraSmall"]},{"name":"fun Modifier.paddingLarge(): Modifier","description":"dev.shibasis.reaktor.ui.Theme.paddingLarge","location":"reaktor-ui/dev.shibasis.reaktor.ui/-theme/padding-large.html","searchKeys":["paddingLarge","fun Modifier.paddingLarge(): Modifier","dev.shibasis.reaktor.ui.Theme.paddingLarge"]},{"name":"fun Modifier.paddingMedium(): Modifier","description":"dev.shibasis.reaktor.ui.Theme.paddingMedium","location":"reaktor-ui/dev.shibasis.reaktor.ui/-theme/padding-medium.html","searchKeys":["paddingMedium","fun Modifier.paddingMedium(): Modifier","dev.shibasis.reaktor.ui.Theme.paddingMedium"]},{"name":"fun Modifier.paddingSmall(): Modifier","description":"dev.shibasis.reaktor.ui.Theme.paddingSmall","location":"reaktor-ui/dev.shibasis.reaktor.ui/-theme/padding-small.html","searchKeys":["paddingSmall","fun Modifier.paddingSmall(): Modifier","dev.shibasis.reaktor.ui.Theme.paddingSmall"]},{"name":"fun TextView(modifier: Modifier = Modifier, text: String = \"\", style: TextStyle = this.text.bodyMedium)","description":"dev.shibasis.reaktor.ui.Theme.TextView","location":"reaktor-ui/dev.shibasis.reaktor.ui/-theme/-text-view.html","searchKeys":["TextView","fun TextView(modifier: Modifier = Modifier, text: String = \"\", style: TextStyle = this.text.bodyMedium)","dev.shibasis.reaktor.ui.Theme.TextView"]},{"name":"fun autoContentColor(background: Color): Color","description":"dev.shibasis.reaktor.ui.theme.autoContentColor","location":"reaktor-ui/dev.shibasis.reaktor.ui.theme/auto-content-color.html","searchKeys":["autoContentColor","fun autoContentColor(background: Color): Color","dev.shibasis.reaktor.ui.theme.autoContentColor"]},{"name":"fun interface NoArgRender","description":"dev.shibasis.reaktor.ui.compose.NoArgRender","location":"reaktor-ui/dev.shibasis.reaktor.ui.compose/-no-arg-render/index.html","searchKeys":["NoArgRender","fun interface NoArgRender","dev.shibasis.reaktor.ui.compose.NoArgRender"]},{"name":"fun lighten(color: Color, fraction: Float): Color","description":"dev.shibasis.reaktor.ui.theme.lighten","location":"reaktor-ui/dev.shibasis.reaktor.ui.theme/lighten.html","searchKeys":["lighten","fun lighten(color: Color, fraction: Float): Color","dev.shibasis.reaktor.ui.theme.lighten"]},{"name":"fun minimalDarkColorScheme(primary: Color, secondary: Color, tertiary: Color, surface: Color, background: Color, error: Color): ColorScheme","description":"dev.shibasis.reaktor.ui.theme.minimalDarkColorScheme","location":"reaktor-ui/dev.shibasis.reaktor.ui.theme/minimal-dark-color-scheme.html","searchKeys":["minimalDarkColorScheme","fun minimalDarkColorScheme(primary: Color, secondary: Color, tertiary: Color, surface: Color, background: Color, error: Color): ColorScheme","dev.shibasis.reaktor.ui.theme.minimalDarkColorScheme"]},{"name":"fun minimalLightColorScheme(primary: Color, secondary: Color, tertiary: Color, surface: Color, background: Color, error: Color): ColorScheme","description":"dev.shibasis.reaktor.ui.theme.minimalLightColorScheme","location":"reaktor-ui/dev.shibasis.reaktor.ui.theme/minimal-light-color-scheme.html","searchKeys":["minimalLightColorScheme","fun minimalLightColorScheme(primary: Color, secondary: Color, tertiary: Color, surface: Color, background: Color, error: Color): ColorScheme","dev.shibasis.reaktor.ui.theme.minimalLightColorScheme"]},{"name":"fun valueOf(value: String): PromiseState","description":"dev.shibasis.reaktor.ui.material.PromiseState.valueOf","location":"reaktor-ui/dev.shibasis.reaktor.ui.material/-promise-state/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): PromiseState","dev.shibasis.reaktor.ui.material.PromiseState.valueOf"]},{"name":"fun values(): Array<PromiseState>","description":"dev.shibasis.reaktor.ui.material.PromiseState.values","location":"reaktor-ui/dev.shibasis.reaktor.ui.material/-promise-state/values.html","searchKeys":["values","fun values(): Array<PromiseState>","dev.shibasis.reaktor.ui.material.PromiseState.values"]},{"name":"inline fun <R> themed(block: Theme.() -> R): R","description":"dev.shibasis.reaktor.ui.themed","location":"reaktor-ui/dev.shibasis.reaktor.ui/themed.html","searchKeys":["themed","inline fun <R> themed(block: Theme.() -> R): R","dev.shibasis.reaktor.ui.themed"]},{"name":"interface DesignSystem","description":"dev.shibasis.reaktor.ui.DesignSystem","location":"reaktor-ui/dev.shibasis.reaktor.ui/-design-system/index.html","searchKeys":["DesignSystem","interface DesignSystem","dev.shibasis.reaktor.ui.DesignSystem"]},{"name":"object ReaktorDesignSystem : DesignSystem","description":"dev.shibasis.reaktor.ui.material.ReaktorDesignSystem","location":"reaktor-ui/dev.shibasis.reaktor.ui.material/-reaktor-design-system/index.html","searchKeys":["ReaktorDesignSystem","object ReaktorDesignSystem : DesignSystem","dev.shibasis.reaktor.ui.material.ReaktorDesignSystem"]},{"name":"open fun ButtonFloatingAction(modifier: Modifier, onClick: () -> Unit, shape: Shape, containerColor: Color, contentColor: Color, elevation: FloatingActionButtonElevation, content: RowScope.() -> Unit)","description":"dev.shibasis.reaktor.ui.DesignSystem.ButtonFloatingAction","location":"reaktor-ui/dev.shibasis.reaktor.ui/-design-system/-button-floating-action.html","searchKeys":["ButtonFloatingAction","open fun ButtonFloatingAction(modifier: Modifier, onClick: () -> Unit, shape: Shape, containerColor: Color, contentColor: Color, elevation: FloatingActionButtonElevation, content: RowScope.() -> Unit)","dev.shibasis.reaktor.ui.DesignSystem.ButtonFloatingAction"]},{"name":"open fun ButtonIcon(modifier: Modifier, imageVector: ImageVector, onClick: () -> Unit)","description":"dev.shibasis.reaktor.ui.DesignSystem.ButtonIcon","location":"reaktor-ui/dev.shibasis.reaktor.ui/-design-system/-button-icon.html","searchKeys":["ButtonIcon","open fun ButtonIcon(modifier: Modifier, imageVector: ImageVector, onClick: () -> Unit)","dev.shibasis.reaktor.ui.DesignSystem.ButtonIcon"]},{"name":"open fun ButtonWrapped(modifier: Modifier, onClick: () -> Unit, enabled: Boolean, shape: Shape, colors: ButtonColors, elevation: ButtonElevation?, content: RowScope.() -> Unit)","description":"dev.shibasis.reaktor.ui.DesignSystem.ButtonWrapped","location":"reaktor-ui/dev.shibasis.reaktor.ui/-design-system/-button-wrapped.html","searchKeys":["ButtonWrapped","open fun ButtonWrapped(modifier: Modifier, onClick: () -> Unit, enabled: Boolean, shape: Shape, colors: ButtonColors, elevation: ButtonElevation?, content: RowScope.() -> Unit)","dev.shibasis.reaktor.ui.DesignSystem.ButtonWrapped"]},{"name":"open fun CardView(modifier: Modifier, content: BoxScope.() -> Unit)","description":"dev.shibasis.reaktor.ui.DesignSystem.CardView","location":"reaktor-ui/dev.shibasis.reaktor.ui/-design-system/-card-view.html","searchKeys":["CardView","open fun CardView(modifier: Modifier, content: BoxScope.() -> Unit)","dev.shibasis.reaktor.ui.DesignSystem.CardView"]},{"name":"open fun InputText(modifier: Modifier, value: String, onValueChange: (String) -> Unit, label: () -> Unit, placeholder: String)","description":"dev.shibasis.reaktor.ui.DesignSystem.InputText","location":"reaktor-ui/dev.shibasis.reaktor.ui/-design-system/-input-text.html","searchKeys":["InputText","open fun InputText(modifier: Modifier, value: String, onValueChange: (String) -> Unit, label: () -> Unit, placeholder: String)","dev.shibasis.reaktor.ui.DesignSystem.InputText"]},{"name":"open fun TextView(modifier: Modifier, text: String, style: TextStyle)","description":"dev.shibasis.reaktor.ui.DesignSystem.TextView","location":"reaktor-ui/dev.shibasis.reaktor.ui/-design-system/-text-view.html","searchKeys":["TextView","open fun TextView(modifier: Modifier, text: String, style: TextStyle)","dev.shibasis.reaktor.ui.DesignSystem.TextView"]},{"name":"open fun getColorScheme(): ColorScheme","description":"dev.shibasis.reaktor.ui.DesignSystem.getColorScheme","location":"reaktor-ui/dev.shibasis.reaktor.ui/-design-system/get-color-scheme.html","searchKeys":["getColorScheme","open fun getColorScheme(): ColorScheme","dev.shibasis.reaktor.ui.DesignSystem.getColorScheme"]},{"name":"open fun getShapes(): Shapes","description":"dev.shibasis.reaktor.ui.DesignSystem.getShapes","location":"reaktor-ui/dev.shibasis.reaktor.ui/-design-system/get-shapes.html","searchKeys":["getShapes","open fun getShapes(): Shapes","dev.shibasis.reaktor.ui.DesignSystem.getShapes"]},{"name":"open fun getSizes(): Sizes","description":"dev.shibasis.reaktor.ui.DesignSystem.getSizes","location":"reaktor-ui/dev.shibasis.reaktor.ui/-design-system/get-sizes.html","searchKeys":["getSizes","open fun getSizes(): Sizes","dev.shibasis.reaktor.ui.DesignSystem.getSizes"]},{"name":"open fun getTypography(): Typography","description":"dev.shibasis.reaktor.ui.DesignSystem.getTypography","location":"reaktor-ui/dev.shibasis.reaktor.ui/-design-system/get-typography.html","searchKeys":["getTypography","open fun getTypography(): Typography","dev.shibasis.reaktor.ui.DesignSystem.getTypography"]},{"name":"open override fun getColorScheme(): ColorScheme","description":"dev.shibasis.reaktor.ui.material.ReaktorDesignSystem.getColorScheme","location":"reaktor-ui/dev.shibasis.reaktor.ui.material/-reaktor-design-system/get-color-scheme.html","searchKeys":["getColorScheme","open override fun getColorScheme(): ColorScheme","dev.shibasis.reaktor.ui.material.ReaktorDesignSystem.getColorScheme"]},{"name":"open override fun getTypography(): Typography","description":"dev.shibasis.reaktor.ui.material.ReaktorDesignSystem.getTypography","location":"reaktor-ui/dev.shibasis.reaktor.ui.material/-reaktor-design-system/get-typography.html","searchKeys":["getTypography","open override fun getTypography(): Typography","dev.shibasis.reaktor.ui.material.ReaktorDesignSystem.getTypography"]},{"name":"val Color.Companion.BlackText: Color","description":"dev.shibasis.reaktor.ui.BlackText","location":"reaktor-ui/dev.shibasis.reaktor.ui/-black-text.html","searchKeys":["BlackText","val Color.Companion.BlackText: Color","dev.shibasis.reaktor.ui.BlackText"]},{"name":"val Color.Companion.Teal: Color","description":"dev.shibasis.reaktor.ui.Teal","location":"reaktor-ui/dev.shibasis.reaktor.ui/-teal.html","searchKeys":["Teal","val Color.Companion.Teal: Color","dev.shibasis.reaktor.ui.Teal"]},{"name":"val colors: ColorScheme","description":"dev.shibasis.reaktor.ui.Theme.colors","location":"reaktor-ui/dev.shibasis.reaktor.ui/-theme/colors.html","searchKeys":["colors","val colors: ColorScheme","dev.shibasis.reaktor.ui.Theme.colors"]},{"name":"val darkScheme: ColorScheme","description":"dev.shibasis.reaktor.ui.theme.darkScheme","location":"reaktor-ui/dev.shibasis.reaktor.ui.theme/dark-scheme.html","searchKeys":["darkScheme","val darkScheme: ColorScheme","dev.shibasis.reaktor.ui.theme.darkScheme"]},{"name":"val data: T? = null","description":"dev.shibasis.reaktor.ui.material.PromiseResult.data","location":"reaktor-ui/dev.shibasis.reaktor.ui.material/-promise-result/data.html","searchKeys":["data","val data: T? = null","dev.shibasis.reaktor.ui.material.PromiseResult.data"]},{"name":"val entries: EnumEntries<PromiseState>","description":"dev.shibasis.reaktor.ui.material.PromiseState.entries","location":"reaktor-ui/dev.shibasis.reaktor.ui.material/-promise-state/entries.html","searchKeys":["entries","val entries: EnumEntries<PromiseState>","dev.shibasis.reaktor.ui.material.PromiseState.entries"]},{"name":"val error: Throwable? = null","description":"dev.shibasis.reaktor.ui.material.PromiseResult.error","location":"reaktor-ui/dev.shibasis.reaktor.ui.material/-promise-result/error.html","searchKeys":["error","val error: Throwable? = null","dev.shibasis.reaktor.ui.material.PromiseResult.error"]},{"name":"val extraLarge: Dp","description":"dev.shibasis.reaktor.ui.Sizes.extraLarge","location":"reaktor-ui/dev.shibasis.reaktor.ui/-sizes/extra-large.html","searchKeys":["extraLarge","val extraLarge: Dp","dev.shibasis.reaktor.ui.Sizes.extraLarge"]},{"name":"val extraSmall: Dp","description":"dev.shibasis.reaktor.ui.Sizes.extraSmall","location":"reaktor-ui/dev.shibasis.reaktor.ui/-sizes/extra-small.html","searchKeys":["extraSmall","val extraSmall: Dp","dev.shibasis.reaktor.ui.Sizes.extraSmall"]},{"name":"val large: Dp","description":"dev.shibasis.reaktor.ui.Sizes.large","location":"reaktor-ui/dev.shibasis.reaktor.ui/-sizes/large.html","searchKeys":["large","val large: Dp","dev.shibasis.reaktor.ui.Sizes.large"]},{"name":"val lightScheme: ColorScheme","description":"dev.shibasis.reaktor.ui.theme.lightScheme","location":"reaktor-ui/dev.shibasis.reaktor.ui.theme/light-scheme.html","searchKeys":["lightScheme","val lightScheme: ColorScheme","dev.shibasis.reaktor.ui.theme.lightScheme"]},{"name":"val medium: Dp","description":"dev.shibasis.reaktor.ui.Sizes.medium","location":"reaktor-ui/dev.shibasis.reaktor.ui/-sizes/medium.html","searchKeys":["medium","val medium: Dp","dev.shibasis.reaktor.ui.Sizes.medium"]},{"name":"val shapes: Shapes","description":"dev.shibasis.reaktor.ui.Theme.shapes","location":"reaktor-ui/dev.shibasis.reaktor.ui/-theme/shapes.html","searchKeys":["shapes","val shapes: Shapes","dev.shibasis.reaktor.ui.Theme.shapes"]},{"name":"val sizes: Sizes","description":"dev.shibasis.reaktor.ui.Theme.sizes","location":"reaktor-ui/dev.shibasis.reaktor.ui/-theme/sizes.html","searchKeys":["sizes","val sizes: Sizes","dev.shibasis.reaktor.ui.Theme.sizes"]},{"name":"val small: Dp","description":"dev.shibasis.reaktor.ui.Sizes.small","location":"reaktor-ui/dev.shibasis.reaktor.ui/-sizes/small.html","searchKeys":["small","val small: Dp","dev.shibasis.reaktor.ui.Sizes.small"]},{"name":"val state: PromiseState","description":"dev.shibasis.reaktor.ui.material.PromiseResult.state","location":"reaktor-ui/dev.shibasis.reaktor.ui.material/-promise-result/state.html","searchKeys":["state","val state: PromiseState","dev.shibasis.reaktor.ui.material.PromiseResult.state"]},{"name":"val text: Typography","description":"dev.shibasis.reaktor.ui.Theme.text","location":"reaktor-ui/dev.shibasis.reaktor.ui/-theme/text.html","searchKeys":["text","val text: Typography","dev.shibasis.reaktor.ui.Theme.text"]},{"name":"var Feature.Theme: Theme?","description":"dev.shibasis.reaktor.ui.Theme","location":"reaktor-ui/dev.shibasis.reaktor.ui/-theme.html","searchKeys":["Theme","var Feature.Theme: Theme?","dev.shibasis.reaktor.ui.Theme"]},{"name":"abstract fun generateCompound(compound: Compound): String","description":"dev.shibasis.reaktor.generator.codegen.CodeGenerator.generateCompound","location":"flatinvoker-compiler/dev.shibasis.reaktor.generator.codegen/-code-generator/generate-compound.html","searchKeys":["generateCompound","abstract fun generateCompound(compound: Compound): String","dev.shibasis.reaktor.generator.codegen.CodeGenerator.generateCompound"]},{"name":"abstract fun generateElement(element: Element, parent: Compound): String","description":"dev.shibasis.reaktor.generator.codegen.CodeGenerator.generateElement","location":"flatinvoker-compiler/dev.shibasis.reaktor.generator.codegen/-code-generator/generate-element.html","searchKeys":["generateElement","abstract fun generateElement(element: Element, parent: Compound): String","dev.shibasis.reaktor.generator.codegen.CodeGenerator.generateElement"]},{"name":"class ReaktorProcessor(val codeGenerator: CodeGenerator, val logger: KSPLogger) : SymbolProcessor","description":"dev.shibasis.reaktor.generator.ReaktorProcessor","location":"flatinvoker-compiler/dev.shibasis.reaktor.generator/-reaktor-processor/index.html","searchKeys":["ReaktorProcessor","class ReaktorProcessor(val codeGenerator: CodeGenerator, val logger: KSPLogger) : SymbolProcessor","dev.shibasis.reaktor.generator.ReaktorProcessor"]},{"name":"class ReaktorProcessorProvider : SymbolProcessorProvider","description":"dev.shibasis.reaktor.generator.ReaktorProcessorProvider","location":"flatinvoker-compiler/dev.shibasis.reaktor.generator/-reaktor-processor-provider/index.html","searchKeys":["ReaktorProcessorProvider","class ReaktorProcessorProvider : SymbolProcessorProvider","dev.shibasis.reaktor.generator.ReaktorProcessorProvider"]},{"name":"constructor()","description":"dev.shibasis.reaktor.generator.ReaktorProcessorProvider.ReaktorProcessorProvider","location":"flatinvoker-compiler/dev.shibasis.reaktor.generator/-reaktor-processor-provider/-reaktor-processor-provider.html","searchKeys":["ReaktorProcessorProvider","constructor()","dev.shibasis.reaktor.generator.ReaktorProcessorProvider.ReaktorProcessorProvider"]},{"name":"constructor(codeGenerator: CodeGenerator, logger: KSPLogger)","description":"dev.shibasis.reaktor.generator.ReaktorProcessor.ReaktorProcessor","location":"flatinvoker-compiler/dev.shibasis.reaktor.generator/-reaktor-processor/-reaktor-processor.html","searchKeys":["ReaktorProcessor","constructor(codeGenerator: CodeGenerator, logger: KSPLogger)","dev.shibasis.reaktor.generator.ReaktorProcessor.ReaktorProcessor"]},{"name":"constructor(content: String)","description":"dev.shibasis.reaktor.generator.codegen.Element.Statement.Statement","location":"flatinvoker-compiler/dev.shibasis.reaktor.generator.codegen/-element/-statement/-statement.html","searchKeys":["Statement","constructor(content: String)","dev.shibasis.reaktor.generator.codegen.Element.Statement.Statement"]},{"name":"constructor(name: String, functions: List<Compound.Function>)","description":"dev.shibasis.reaktor.generator.codegen.Compound.Interface.Interface","location":"flatinvoker-compiler/dev.shibasis.reaktor.generator.codegen/-compound/-interface/-interface.html","searchKeys":["Interface","constructor(name: String, functions: List<Compound.Function>)","dev.shibasis.reaktor.generator.codegen.Compound.Interface.Interface"]},{"name":"constructor(name: String, functions: List<Compound.Function>, properties: List<Element.Parameter>)","description":"dev.shibasis.reaktor.generator.codegen.Compound.Class.Class","location":"flatinvoker-compiler/dev.shibasis.reaktor.generator.codegen/-compound/-class/-class.html","searchKeys":["Class","constructor(name: String, functions: List<Compound.Function>, properties: List<Element.Parameter>)","dev.shibasis.reaktor.generator.codegen.Compound.Class.Class"]},{"name":"constructor(name: String, params: List<Element.Parameter>, body: Compound.Block? = null, returnType: String)","description":"dev.shibasis.reaktor.generator.codegen.Compound.Function.Function","location":"flatinvoker-compiler/dev.shibasis.reaktor.generator.codegen/-compound/-function/-function.html","searchKeys":["Function","constructor(name: String, params: List<Element.Parameter>, body: Compound.Block? = null, returnType: String)","dev.shibasis.reaktor.generator.codegen.Compound.Function.Function"]},{"name":"constructor(name: String, type: String, isMutable: Boolean = false, isNullable: Boolean = false)","description":"dev.shibasis.reaktor.generator.codegen.Element.Parameter.Parameter","location":"flatinvoker-compiler/dev.shibasis.reaktor.generator.codegen/-element/-parameter/-parameter.html","searchKeys":["Parameter","constructor(name: String, type: String, isMutable: Boolean = false, isNullable: Boolean = false)","dev.shibasis.reaktor.generator.codegen.Element.Parameter.Parameter"]},{"name":"constructor(statements: List<Element.Statement>)","description":"dev.shibasis.reaktor.generator.codegen.Compound.Block.Block","location":"flatinvoker-compiler/dev.shibasis.reaktor.generator.codegen/-compound/-block/-block.html","searchKeys":["Block","constructor(statements: List<Element.Statement>)","dev.shibasis.reaktor.generator.codegen.Compound.Block.Block"]},{"name":"data class Block(val statements: List<Element.Statement>) : Compound","description":"dev.shibasis.reaktor.generator.codegen.Compound.Block","location":"flatinvoker-compiler/dev.shibasis.reaktor.generator.codegen/-compound/-block/index.html","searchKeys":["Block","data class Block(val statements: List<Element.Statement>) : Compound","dev.shibasis.reaktor.generator.codegen.Compound.Block"]},{"name":"data class Class(val name: String, val functions: List<Compound.Function>, val properties: List<Element.Parameter>) : Compound","description":"dev.shibasis.reaktor.generator.codegen.Compound.Class","location":"flatinvoker-compiler/dev.shibasis.reaktor.generator.codegen/-compound/-class/index.html","searchKeys":["Class","data class Class(val name: String, val functions: List<Compound.Function>, val properties: List<Element.Parameter>) : Compound","dev.shibasis.reaktor.generator.codegen.Compound.Class"]},{"name":"data class Function(val name: String, val params: List<Element.Parameter>, val body: Compound.Block? = null, val returnType: String) : Compound","description":"dev.shibasis.reaktor.generator.codegen.Compound.Function","location":"flatinvoker-compiler/dev.shibasis.reaktor.generator.codegen/-compound/-function/index.html","searchKeys":["Function","data class Function(val name: String, val params: List<Element.Parameter>, val body: Compound.Block? = null, val returnType: String) : Compound","dev.shibasis.reaktor.generator.codegen.Compound.Function"]},{"name":"data class Interface(val name: String, val functions: List<Compound.Function>) : Compound","description":"dev.shibasis.reaktor.generator.codegen.Compound.Interface","location":"flatinvoker-compiler/dev.shibasis.reaktor.generator.codegen/-compound/-interface/index.html","searchKeys":["Interface","data class Interface(val name: String, val functions: List<Compound.Function>) : Compound","dev.shibasis.reaktor.generator.codegen.Compound.Interface"]},{"name":"data class Parameter(val name: String, val type: String, val isMutable: Boolean = false, val isNullable: Boolean = false) : Element","description":"dev.shibasis.reaktor.generator.codegen.Element.Parameter","location":"flatinvoker-compiler/dev.shibasis.reaktor.generator.codegen/-element/-parameter/index.html","searchKeys":["Parameter","data class Parameter(val name: String, val type: String, val isMutable: Boolean = false, val isNullable: Boolean = false) : Element","dev.shibasis.reaktor.generator.codegen.Element.Parameter"]},{"name":"data class Statement(val content: String) : Element","description":"dev.shibasis.reaktor.generator.codegen.Element.Statement","location":"flatinvoker-compiler/dev.shibasis.reaktor.generator.codegen/-element/-statement/index.html","searchKeys":["Statement","data class Statement(val content: String) : Element","dev.shibasis.reaktor.generator.codegen.Element.Statement"]},{"name":"fun KSFunctionDeclaration.toFunction(): Compound.Function","description":"dev.shibasis.reaktor.generator.codegen.toFunction","location":"flatinvoker-compiler/dev.shibasis.reaktor.generator.codegen/to-function.html","searchKeys":["toFunction","fun KSFunctionDeclaration.toFunction(): Compound.Function","dev.shibasis.reaktor.generator.codegen.toFunction"]},{"name":"fun log(message: String)","description":"dev.shibasis.reaktor.generator.ReaktorProcessor.log","location":"flatinvoker-compiler/dev.shibasis.reaktor.generator/-reaktor-processor/log.html","searchKeys":["log","fun log(message: String)","dev.shibasis.reaktor.generator.ReaktorProcessor.log"]},{"name":"interface CodeGenerator","description":"dev.shibasis.reaktor.generator.codegen.CodeGenerator","location":"flatinvoker-compiler/dev.shibasis.reaktor.generator.codegen/-code-generator/index.html","searchKeys":["CodeGenerator","interface CodeGenerator","dev.shibasis.reaktor.generator.codegen.CodeGenerator"]},{"name":"object KotlinCodeGenerator : CodeGenerator","description":"dev.shibasis.reaktor.generator.codegen.languages.KotlinCodeGenerator","location":"flatinvoker-compiler/dev.shibasis.reaktor.generator.codegen.languages/-kotlin-code-generator/index.html","searchKeys":["KotlinCodeGenerator","object KotlinCodeGenerator : CodeGenerator","dev.shibasis.reaktor.generator.codegen.languages.KotlinCodeGenerator"]},{"name":"open override fun create(environment: SymbolProcessorEnvironment): SymbolProcessor","description":"dev.shibasis.reaktor.generator.ReaktorProcessorProvider.create","location":"flatinvoker-compiler/dev.shibasis.reaktor.generator/-reaktor-processor-provider/create.html","searchKeys":["create","open override fun create(environment: SymbolProcessorEnvironment): SymbolProcessor","dev.shibasis.reaktor.generator.ReaktorProcessorProvider.create"]},{"name":"open override fun generateCompound(compound: Compound): String","description":"dev.shibasis.reaktor.generator.codegen.languages.KotlinCodeGenerator.generateCompound","location":"flatinvoker-compiler/dev.shibasis.reaktor.generator.codegen.languages/-kotlin-code-generator/generate-compound.html","searchKeys":["generateCompound","open override fun generateCompound(compound: Compound): String","dev.shibasis.reaktor.generator.codegen.languages.KotlinCodeGenerator.generateCompound"]},{"name":"open override fun generateElement(element: Element, parent: Compound): String","description":"dev.shibasis.reaktor.generator.codegen.languages.KotlinCodeGenerator.generateElement","location":"flatinvoker-compiler/dev.shibasis.reaktor.generator.codegen.languages/-kotlin-code-generator/generate-element.html","searchKeys":["generateElement","open override fun generateElement(element: Element, parent: Compound): String","dev.shibasis.reaktor.generator.codegen.languages.KotlinCodeGenerator.generateElement"]},{"name":"open override fun process(resolver: Resolver): List<KSAnnotated>","description":"dev.shibasis.reaktor.generator.ReaktorProcessor.process","location":"flatinvoker-compiler/dev.shibasis.reaktor.generator/-reaktor-processor/process.html","searchKeys":["process","open override fun process(resolver: Resolver): List<KSAnnotated>","dev.shibasis.reaktor.generator.ReaktorProcessor.process"]},{"name":"sealed class Compound","description":"dev.shibasis.reaktor.generator.codegen.Compound","location":"flatinvoker-compiler/dev.shibasis.reaktor.generator.codegen/-compound/index.html","searchKeys":["Compound","sealed class Compound","dev.shibasis.reaktor.generator.codegen.Compound"]},{"name":"sealed class Element","description":"dev.shibasis.reaktor.generator.codegen.Element","location":"flatinvoker-compiler/dev.shibasis.reaktor.generator.codegen/-element/index.html","searchKeys":["Element","sealed class Element","dev.shibasis.reaktor.generator.codegen.Element"]},{"name":"val body: Compound.Block? = null","description":"dev.shibasis.reaktor.generator.codegen.Compound.Function.body","location":"flatinvoker-compiler/dev.shibasis.reaktor.generator.codegen/-compound/-function/body.html","searchKeys":["body","val body: Compound.Block? = null","dev.shibasis.reaktor.generator.codegen.Compound.Function.body"]},{"name":"val codeGenerator: CodeGenerator","description":"dev.shibasis.reaktor.generator.ReaktorProcessor.codeGenerator","location":"flatinvoker-compiler/dev.shibasis.reaktor.generator/-reaktor-processor/code-generator.html","searchKeys":["codeGenerator","val codeGenerator: CodeGenerator","dev.shibasis.reaktor.generator.ReaktorProcessor.codeGenerator"]},{"name":"val content: String","description":"dev.shibasis.reaktor.generator.codegen.Element.Statement.content","location":"flatinvoker-compiler/dev.shibasis.reaktor.generator.codegen/-element/-statement/content.html","searchKeys":["content","val content: String","dev.shibasis.reaktor.generator.codegen.Element.Statement.content"]},{"name":"val functions: List<Compound.Function>","description":"dev.shibasis.reaktor.generator.codegen.Compound.Class.functions","location":"flatinvoker-compiler/dev.shibasis.reaktor.generator.codegen/-compound/-class/functions.html","searchKeys":["functions","val functions: List<Compound.Function>","dev.shibasis.reaktor.generator.codegen.Compound.Class.functions"]},{"name":"val functions: List<Compound.Function>","description":"dev.shibasis.reaktor.generator.codegen.Compound.Interface.functions","location":"flatinvoker-compiler/dev.shibasis.reaktor.generator.codegen/-compound/-interface/functions.html","searchKeys":["functions","val functions: List<Compound.Function>","dev.shibasis.reaktor.generator.codegen.Compound.Interface.functions"]},{"name":"val isMutable: Boolean = false","description":"dev.shibasis.reaktor.generator.codegen.Element.Parameter.isMutable","location":"flatinvoker-compiler/dev.shibasis.reaktor.generator.codegen/-element/-parameter/is-mutable.html","searchKeys":["isMutable","val isMutable: Boolean = false","dev.shibasis.reaktor.generator.codegen.Element.Parameter.isMutable"]},{"name":"val isNullable: Boolean = false","description":"dev.shibasis.reaktor.generator.codegen.Element.Parameter.isNullable","location":"flatinvoker-compiler/dev.shibasis.reaktor.generator.codegen/-element/-parameter/is-nullable.html","searchKeys":["isNullable","val isNullable: Boolean = false","dev.shibasis.reaktor.generator.codegen.Element.Parameter.isNullable"]},{"name":"val logger: KSPLogger","description":"dev.shibasis.reaktor.generator.ReaktorProcessor.logger","location":"flatinvoker-compiler/dev.shibasis.reaktor.generator/-reaktor-processor/logger.html","searchKeys":["logger","val logger: KSPLogger","dev.shibasis.reaktor.generator.ReaktorProcessor.logger"]},{"name":"val name: String","description":"dev.shibasis.reaktor.generator.codegen.Compound.Class.name","location":"flatinvoker-compiler/dev.shibasis.reaktor.generator.codegen/-compound/-class/name.html","searchKeys":["name","val name: String","dev.shibasis.reaktor.generator.codegen.Compound.Class.name"]},{"name":"val name: String","description":"dev.shibasis.reaktor.generator.codegen.Compound.Function.name","location":"flatinvoker-compiler/dev.shibasis.reaktor.generator.codegen/-compound/-function/name.html","searchKeys":["name","val name: String","dev.shibasis.reaktor.generator.codegen.Compound.Function.name"]},{"name":"val name: String","description":"dev.shibasis.reaktor.generator.codegen.Compound.Interface.name","location":"flatinvoker-compiler/dev.shibasis.reaktor.generator.codegen/-compound/-interface/name.html","searchKeys":["name","val name: String","dev.shibasis.reaktor.generator.codegen.Compound.Interface.name"]},{"name":"val name: String","description":"dev.shibasis.reaktor.generator.codegen.Element.Parameter.name","location":"flatinvoker-compiler/dev.shibasis.reaktor.generator.codegen/-element/-parameter/name.html","searchKeys":["name","val name: String","dev.shibasis.reaktor.generator.codegen.Element.Parameter.name"]},{"name":"val params: List<Element.Parameter>","description":"dev.shibasis.reaktor.generator.codegen.Compound.Function.params","location":"flatinvoker-compiler/dev.shibasis.reaktor.generator.codegen/-compound/-function/params.html","searchKeys":["params","val params: List<Element.Parameter>","dev.shibasis.reaktor.generator.codegen.Compound.Function.params"]},{"name":"val properties: List<Element.Parameter>","description":"dev.shibasis.reaktor.generator.codegen.Compound.Class.properties","location":"flatinvoker-compiler/dev.shibasis.reaktor.generator.codegen/-compound/-class/properties.html","searchKeys":["properties","val properties: List<Element.Parameter>","dev.shibasis.reaktor.generator.codegen.Compound.Class.properties"]},{"name":"val returnType: String","description":"dev.shibasis.reaktor.generator.codegen.Compound.Function.returnType","location":"flatinvoker-compiler/dev.shibasis.reaktor.generator.codegen/-compound/-function/return-type.html","searchKeys":["returnType","val returnType: String","dev.shibasis.reaktor.generator.codegen.Compound.Function.returnType"]},{"name":"val statements: List<Element.Statement>","description":"dev.shibasis.reaktor.generator.codegen.Compound.Block.statements","location":"flatinvoker-compiler/dev.shibasis.reaktor.generator.codegen/-compound/-block/statements.html","searchKeys":["statements","val statements: List<Element.Statement>","dev.shibasis.reaktor.generator.codegen.Compound.Block.statements"]},{"name":"val type: String","description":"dev.shibasis.reaktor.generator.codegen.Element.Parameter.type","location":"flatinvoker-compiler/dev.shibasis.reaktor.generator.codegen/-element/-parameter/type.html","searchKeys":["type","val type: String","dev.shibasis.reaktor.generator.codegen.Element.Parameter.type"]},{"name":"BLOB","description":"dev.shibasis.flatinvoker.core.serialization.util.TypeCategory.BLOB","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.util/-type-category/-b-l-o-b/index.html","searchKeys":["BLOB","BLOB","dev.shibasis.flatinvoker.core.serialization.util.TypeCategory.BLOB"]},{"name":"INDIRECT_PRIMITIVE","description":"dev.shibasis.flatinvoker.core.serialization.util.TypeCategory.INDIRECT_PRIMITIVE","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.util/-type-category/-i-n-d-i-r-e-c-t_-p-r-i-m-i-t-i-v-e/index.html","searchKeys":["INDIRECT_PRIMITIVE","INDIRECT_PRIMITIVE","dev.shibasis.flatinvoker.core.serialization.util.TypeCategory.INDIRECT_PRIMITIVE"]},{"name":"INVALID","description":"dev.shibasis.flatinvoker.core.serialization.util.TypeCategory.INVALID","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.util/-type-category/-i-n-v-a-l-i-d/index.html","searchKeys":["INVALID","INVALID","dev.shibasis.flatinvoker.core.serialization.util.TypeCategory.INVALID"]},{"name":"KEY","description":"dev.shibasis.flatinvoker.core.serialization.util.TypeCategory.KEY","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.util/-type-category/-k-e-y/index.html","searchKeys":["KEY","KEY","dev.shibasis.flatinvoker.core.serialization.util.TypeCategory.KEY"]},{"name":"MAP","description":"dev.shibasis.flatinvoker.core.serialization.util.TypeCategory.MAP","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.util/-type-category/-m-a-p/index.html","searchKeys":["MAP","MAP","dev.shibasis.flatinvoker.core.serialization.util.TypeCategory.MAP"]},{"name":"PRIMITIVE","description":"dev.shibasis.flatinvoker.core.serialization.util.TypeCategory.PRIMITIVE","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.util/-type-category/-p-r-i-m-i-t-i-v-e/index.html","searchKeys":["PRIMITIVE","PRIMITIVE","dev.shibasis.flatinvoker.core.serialization.util.TypeCategory.PRIMITIVE"]},{"name":"STRING","description":"dev.shibasis.flatinvoker.core.serialization.util.TypeCategory.STRING","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.util/-type-category/-s-t-r-i-n-g/index.html","searchKeys":["STRING","STRING","dev.shibasis.flatinvoker.core.serialization.util.TypeCategory.STRING"]},{"name":"TYPED_VECTOR","description":"dev.shibasis.flatinvoker.core.serialization.util.TypeCategory.TYPED_VECTOR","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.util/-type-category/-t-y-p-e-d_-v-e-c-t-o-r/index.html","searchKeys":["TYPED_VECTOR","TYPED_VECTOR","dev.shibasis.flatinvoker.core.serialization.util.TypeCategory.TYPED_VECTOR"]},{"name":"VECTOR","description":"dev.shibasis.flatinvoker.core.serialization.util.TypeCategory.VECTOR","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.util/-type-category/-v-e-c-t-o-r/index.html","searchKeys":["VECTOR","VECTOR","dev.shibasis.flatinvoker.core.serialization.util.TypeCategory.VECTOR"]},{"name":"abstract fun getCachedResponse(url: String): String","description":"dev.shibasis.flatinvoker.core.Network.getCachedResponse","location":"flatinvoker-core/dev.shibasis.flatinvoker.core/-network/get-cached-response.html","searchKeys":["getCachedResponse","abstract fun getCachedResponse(url: String): String","dev.shibasis.flatinvoker.core.Network.getCachedResponse"]},{"name":"abstract fun getResponse(url: String): Flow<String>","description":"dev.shibasis.flatinvoker.core.Network.getResponse","location":"flatinvoker-core/dev.shibasis.flatinvoker.core/-network/get-response.html","searchKeys":["getResponse","abstract fun getResponse(url: String): Flow<String>","dev.shibasis.flatinvoker.core.Network.getResponse"]},{"name":"abstract fun invokeAsync(methodName: String, arguments: Vector): Flow<Any>","description":"dev.shibasis.flatinvoker.core.Network.invokeAsync","location":"flatinvoker-core/dev.shibasis.flatinvoker.core/-network/invoke-async.html","searchKeys":["invokeAsync","abstract fun invokeAsync(methodName: String, arguments: Vector): Flow<Any>","dev.shibasis.flatinvoker.core.Network.invokeAsync"]},{"name":"abstract operator fun invoke(methodName: String, arguments: Vector): Any","description":"dev.shibasis.flatinvoker.core.Network.invoke","location":"flatinvoker-core/dev.shibasis.flatinvoker.core/-network/invoke.html","searchKeys":["invoke","abstract operator fun invoke(methodName: String, arguments: Vector): Any","dev.shibasis.flatinvoker.core.Network.invoke"]},{"name":"annotation class CriticalNative","description":"dalvik.annotation.optimization.CriticalNative","location":"flatinvoker-core/dalvik.annotation.optimization/-critical-native/index.html","searchKeys":["CriticalNative","annotation class CriticalNative","dalvik.annotation.optimization.CriticalNative"]},{"name":"annotation class FastNative","description":"dalvik.annotation.optimization.FastNative","location":"flatinvoker-core/dalvik.annotation.optimization/-fast-native/index.html","searchKeys":["FastNative","annotation class FastNative","dalvik.annotation.optimization.FastNative"]},{"name":"class BaseDecoder : Decoder, CompositeDecoder","description":"dev.shibasis.flatinvoker.core.serialization.decoder.BaseDecoder","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.decoder/-base-decoder/index.html","searchKeys":["BaseDecoder","class BaseDecoder : Decoder, CompositeDecoder","dev.shibasis.flatinvoker.core.serialization.decoder.BaseDecoder"]},{"name":"class CallTraceDecoder(descriptor: SerialDescriptor, val prefix: String = \"\", var name: String? = null) : Decoder, CompositeDecoder","description":"dev.shibasis.flatinvoker.core.serialization.decoder.CallTraceDecoder","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.decoder/-call-trace-decoder/index.html","searchKeys":["CallTraceDecoder","class CallTraceDecoder(descriptor: SerialDescriptor, val prefix: String = \"\", var name: String? = null) : Decoder, CompositeDecoder","dev.shibasis.flatinvoker.core.serialization.decoder.CallTraceDecoder"]},{"name":"class CompositePosition(var type: Int = COMPOSITE_MAP, var position: Long = 0, var fieldName: String? = null, var idx: Int = 0)","description":"dev.shibasis.flatinvoker.core.serialization.util.CompositePosition","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.util/-composite-position/index.html","searchKeys":["CompositePosition","class CompositePosition(var type: Int = COMPOSITE_MAP, var position: Long = 0, var fieldName: String? = null, var idx: Int = 0)","dev.shibasis.flatinvoker.core.serialization.util.CompositePosition"]},{"name":"class CompositePositionStack(initialCapacity: Int = 32)","description":"dev.shibasis.flatinvoker.core.serialization.util.CompositePositionStack","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.util/-composite-position-stack/index.html","searchKeys":["CompositePositionStack","class CompositePositionStack(initialCapacity: Int = 32)","dev.shibasis.flatinvoker.core.serialization.util.CompositePositionStack"]},{"name":"class CppArray(ref: Any) : DestructorThread.Destructor","description":"dev.shibasis.flatinvoker.core.CppArray","location":"flatinvoker-core/dev.shibasis.flatinvoker.core/-cpp-array/index.html","searchKeys":["CppArray","class CppArray(ref: Any) : DestructorThread.Destructor","dev.shibasis.flatinvoker.core.CppArray"]},{"name":"class EncodingStack","description":"dev.shibasis.flatinvoker.core.serialization.util.EncodingStack","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.util/-encoding-stack/index.html","searchKeys":["EncodingStack","class EncodingStack","dev.shibasis.flatinvoker.core.serialization.util.EncodingStack"]},{"name":"class FlexDecoder(pointer: Reference, descriptor: SerialDescriptor) : Decoder, CompositeDecoder","description":"dev.shibasis.flatinvoker.core.serialization.decoder.FlexDecoder","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.decoder/-flex-decoder/index.html","searchKeys":["FlexDecoder","class FlexDecoder(pointer: Reference, descriptor: SerialDescriptor) : Decoder, CompositeDecoder","dev.shibasis.flatinvoker.core.serialization.decoder.FlexDecoder"]},{"name":"class FlexEncoder : AbstractEncoder","description":"dev.shibasis.flatinvoker.core.serialization.encoder.FlexEncoder","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.encoder/-flex-encoder/index.html","searchKeys":["FlexEncoder","class FlexEncoder : AbstractEncoder","dev.shibasis.flatinvoker.core.serialization.encoder.FlexEncoder"]},{"name":"class FlexEncoderHalfMigrated : Encoder, CompositeEncoder","description":"dev.shibasis.flatinvoker.core.serialization.encoder.FlexEncoderHalfMigrated","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.encoder/-flex-encoder-half-migrated/index.html","searchKeys":["FlexEncoderHalfMigrated","class FlexEncoderHalfMigrated : Encoder, CompositeEncoder","dev.shibasis.flatinvoker.core.serialization.encoder.FlexEncoderHalfMigrated"]},{"name":"class PrimitiveDecoder","description":"dev.shibasis.flatinvoker.core.serialization.decoder.typed.PrimitiveDecoder","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.decoder.typed/-primitive-decoder/index.html","searchKeys":["PrimitiveDecoder","class PrimitiveDecoder","dev.shibasis.flatinvoker.core.serialization.decoder.typed.PrimitiveDecoder"]},{"name":"const val COMPOSITE_CLASS: Int = 3","description":"dev.shibasis.flatinvoker.core.serialization.util.COMPOSITE_CLASS","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.util/-c-o-m-p-o-s-i-t-e_-c-l-a-s-s.html","searchKeys":["COMPOSITE_CLASS","const val COMPOSITE_CLASS: Int = 3","dev.shibasis.flatinvoker.core.serialization.util.COMPOSITE_CLASS"]},{"name":"const val COMPOSITE_MAP: Int = 1","description":"dev.shibasis.flatinvoker.core.serialization.util.COMPOSITE_MAP","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.util/-c-o-m-p-o-s-i-t-e_-m-a-p.html","searchKeys":["COMPOSITE_MAP","const val COMPOSITE_MAP: Int = 1","dev.shibasis.flatinvoker.core.serialization.util.COMPOSITE_MAP"]},{"name":"const val COMPOSITE_VECTOR: Int = 2","description":"dev.shibasis.flatinvoker.core.serialization.util.COMPOSITE_VECTOR","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.util/-c-o-m-p-o-s-i-t-e_-v-e-c-t-o-r.html","searchKeys":["COMPOSITE_VECTOR","const val COMPOSITE_VECTOR: Int = 2","dev.shibasis.flatinvoker.core.serialization.util.COMPOSITE_VECTOR"]},{"name":"constructor()","description":"dev.shibasis.flatinvoker.core.serialization.decoder.BaseDecoder.BaseDecoder","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.decoder/-base-decoder/-base-decoder.html","searchKeys":["BaseDecoder","constructor()","dev.shibasis.flatinvoker.core.serialization.decoder.BaseDecoder.BaseDecoder"]},{"name":"constructor()","description":"dev.shibasis.flatinvoker.core.serialization.decoder.typed.PrimitiveDecoder.PrimitiveDecoder","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.decoder.typed/-primitive-decoder/-primitive-decoder.html","searchKeys":["PrimitiveDecoder","constructor()","dev.shibasis.flatinvoker.core.serialization.decoder.typed.PrimitiveDecoder.PrimitiveDecoder"]},{"name":"constructor()","description":"dev.shibasis.flatinvoker.core.serialization.encoder.FlexEncoder.FlexEncoder","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.encoder/-flex-encoder/-flex-encoder.html","searchKeys":["FlexEncoder","constructor()","dev.shibasis.flatinvoker.core.serialization.encoder.FlexEncoder.FlexEncoder"]},{"name":"constructor()","description":"dev.shibasis.flatinvoker.core.serialization.encoder.FlexEncoderHalfMigrated.FlexEncoderHalfMigrated","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.encoder/-flex-encoder-half-migrated/-flex-encoder-half-migrated.html","searchKeys":["FlexEncoderHalfMigrated","constructor()","dev.shibasis.flatinvoker.core.serialization.encoder.FlexEncoderHalfMigrated.FlexEncoderHalfMigrated"]},{"name":"constructor()","description":"dev.shibasis.flatinvoker.core.serialization.util.EncodingStack.EncodingStack","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.util/-encoding-stack/-encoding-stack.html","searchKeys":["EncodingStack","constructor()","dev.shibasis.flatinvoker.core.serialization.util.EncodingStack.EncodingStack"]},{"name":"constructor(booleanField: Boolean = true, byteField: Byte = 1, shortField: Short = 2, intField: Int = 3, longField: Long = 4, floatField: Float = 5.0f, doubleField: Double = 6.0, charField: Char = 'A', stringField: String = \"Hello\", byteArrayField: ByteArray = byteArrayOf(1, 2, 3), shortListField: List<Short> = listOf(4, 5, 6), intSetField: Set<Int> = setOf(7, 8, 9), longListField: MutableList<Long> = mutableListOf(10L, 11L, 12L), floatSetField: Set<Float> = setOf(13.0f, 14.0f, 15.0f), doubleListField: List<Double> = listOf(16.0, 17.0, 18.0), charListField: MutableList<Char> = mutableListOf('B', 'C', 'D'), stringSetField: Set<String> = setOf(\"World\", \"Kotlin\"), listOfLists: List<List<Int>> = listOf(listOf(1, 2), listOf(3, 4)), mapOfStringToInt: Map<String, Int> = mapOf(\"one\" to 1, \"two\" to 2), mapOfIntToBoolean: Map<Int, Boolean> = mapOf(1 to true, 2 to false), setOfSets: Set<Set<Float>> = setOf(setOf(1.0f, 2.0f), setOf(3.0f, 4.0f)), mutableMapOfStringToList: MutableMap<String, List<Double>> = mutableMapOf(\"key1\" to listOf(1.0, 2.0), \"key2\" to listOf(3.0, 4.0)), nestedData: NestedData = NestedData(\n        nestedInt = 99,\n        nestedString = \"Nested\",\n        innerNestedData = listOf(\n            InnerNestedData(\n            innerValue = 100.0,\n            innerList = listOf(\"Inner\", \"List\")\n        )\n        )\n    ), mapOfStringToNestedData: Map<String, NestedData> = mapOf(\"nested\" to NestedData(\n        nestedInt = 101,\n        nestedString = \"Nested\",\n        innerNestedData = listOf(\n            InnerNestedData(\n            innerValue = 102.0,\n            innerList = listOf(\"Inner\", \"List\")\n        )\n        )\n    ), \"nested2\" to NestedData(\n        nestedInt = 103,\n        nestedString = \"Nested\",\n        innerNestedData = listOf(\n            InnerNestedData(\n            innerValue = 104.0,\n            innerList = listOf(\"Inner\", \"List\")\n        )\n        )\n    )\n    ))","description":"dev.shibasis.flatinvoker.core.EncodingComplexCase.EncodingComplexCase","location":"flatinvoker-core/dev.shibasis.flatinvoker.core/-encoding-complex-case/-encoding-complex-case.html","searchKeys":["EncodingComplexCase","constructor(booleanField: Boolean = true, byteField: Byte = 1, shortField: Short = 2, intField: Int = 3, longField: Long = 4, floatField: Float = 5.0f, doubleField: Double = 6.0, charField: Char = 'A', stringField: String = \"Hello\", byteArrayField: ByteArray = byteArrayOf(1, 2, 3), shortListField: List<Short> = listOf(4, 5, 6), intSetField: Set<Int> = setOf(7, 8, 9), longListField: MutableList<Long> = mutableListOf(10L, 11L, 12L), floatSetField: Set<Float> = setOf(13.0f, 14.0f, 15.0f), doubleListField: List<Double> = listOf(16.0, 17.0, 18.0), charListField: MutableList<Char> = mutableListOf('B', 'C', 'D'), stringSetField: Set<String> = setOf(\"World\", \"Kotlin\"), listOfLists: List<List<Int>> = listOf(listOf(1, 2), listOf(3, 4)), mapOfStringToInt: Map<String, Int> = mapOf(\"one\" to 1, \"two\" to 2), mapOfIntToBoolean: Map<Int, Boolean> = mapOf(1 to true, 2 to false), setOfSets: Set<Set<Float>> = setOf(setOf(1.0f, 2.0f), setOf(3.0f, 4.0f)), mutableMapOfStringToList: MutableMap<String, List<Double>> = mutableMapOf(\"key1\" to listOf(1.0, 2.0), \"key2\" to listOf(3.0, 4.0)), nestedData: NestedData = NestedData(\n        nestedInt = 99,\n        nestedString = \"Nested\",\n        innerNestedData = listOf(\n            InnerNestedData(\n            innerValue = 100.0,\n            innerList = listOf(\"Inner\", \"List\")\n        )\n        )\n    ), mapOfStringToNestedData: Map<String, NestedData> = mapOf(\"nested\" to NestedData(\n        nestedInt = 101,\n        nestedString = \"Nested\",\n        innerNestedData = listOf(\n            InnerNestedData(\n            innerValue = 102.0,\n            innerList = listOf(\"Inner\", \"List\")\n        )\n        )\n    ), \"nested2\" to NestedData(\n        nestedInt = 103,\n        nestedString = \"Nested\",\n        innerNestedData = listOf(\n            InnerNestedData(\n            innerValue = 104.0,\n            innerList = listOf(\"Inner\", \"List\")\n        )\n        )\n    )\n    ))","dev.shibasis.flatinvoker.core.EncodingComplexCase.EncodingComplexCase"]},{"name":"constructor(descriptor: SerialDescriptor, prefix: String = \"\", name: String? = null)","description":"dev.shibasis.flatinvoker.core.serialization.decoder.CallTraceDecoder.CallTraceDecoder","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.decoder/-call-trace-decoder/-call-trace-decoder.html","searchKeys":["CallTraceDecoder","constructor(descriptor: SerialDescriptor, prefix: String = \"\", name: String? = null)","dev.shibasis.flatinvoker.core.serialization.decoder.CallTraceDecoder.CallTraceDecoder"]},{"name":"constructor(field: EncodingComplexCase = EncodingComplexCase(), arrayOfComplex: Array<EncodingComplexCase> = arrayOf(EncodingComplexCase(), EncodingComplexCase()), listComplex: List<EncodingComplexCase> = listOf(EncodingComplexCase(), EncodingComplexCase()), mapComplex: Map<String, EncodingComplexCase> = mapOf(\"key1\" to EncodingComplexCase(), \"key2\" to EncodingComplexCase()), mapOfListComplex: Map<String, List<EncodingComplexCase>> = mapOf(\"key1\" to listOf(\n        EncodingComplexCase(), EncodingComplexCase()\n    ), \"key2\" to listOf(EncodingComplexCase(), EncodingComplexCase())), mapOfMapComplex: Map<String, Map<String, EncodingComplexCase>> = mapOf(\"key1\" to mapOf(\"key1\" to EncodingComplexCase(), \"key2\" to EncodingComplexCase()), \"key2\" to mapOf(\"key1\" to EncodingComplexCase(), \"key2\" to EncodingComplexCase())), mapOfMapOfListComplex: Map<String, Map<String, List<EncodingComplexCase>>> = mapOf(\"key1\" to mapOf(\"key1\" to listOf(EncodingComplexCase(), EncodingComplexCase()), \"key2\" to listOf(\n        EncodingComplexCase(), EncodingComplexCase()\n    ), \"key3\" to listOf(EncodingComplexCase(), EncodingComplexCase()), \"key4\" to listOf(\n        EncodingComplexCase(), EncodingComplexCase()\n    ), \"key5\" to listOf(EncodingComplexCase(), EncodingComplexCase()), \"key6\" to listOf(\n        EncodingComplexCase(), EncodingComplexCase()\n    ), \"key7\" to listOf(EncodingComplexCase(), EncodingComplexCase()), \"key8\" to listOf(\n        EncodingComplexCase(), EncodingComplexCase()\n    ), \"key9\" to listOf(EncodingComplexCase(), EncodingComplexCase()), \"key10\" to listOf(\n        EncodingComplexCase(), EncodingComplexCase()\n    ))), setComplex: Set<EncodingComplexCase> = setOf(EncodingComplexCase(), EncodingComplexCase()), setOfListComplex: Set<List<EncodingComplexCase>> = setOf(listOf(EncodingComplexCase(), EncodingComplexCase()), listOf(\n        EncodingComplexCase(), EncodingComplexCase()\n    )), setOfMapComplex: Set<Map<String, EncodingComplexCase>> = setOf(mapOf(\"key1\" to EncodingComplexCase(), \"key2\" to EncodingComplexCase()), mapOf(\"key3\" to EncodingComplexCase(), \"key4\" to EncodingComplexCase())), setOfSetComplex: Set<Set<EncodingComplexCase>> = setOf(setOf(EncodingComplexCase(), EncodingComplexCase()), setOf(\n        EncodingComplexCase(), EncodingComplexCase()\n    )))","description":"dev.shibasis.flatinvoker.core.EncodingSophisticatedCase.EncodingSophisticatedCase","location":"flatinvoker-core/dev.shibasis.flatinvoker.core/-encoding-sophisticated-case/-encoding-sophisticated-case.html","searchKeys":["EncodingSophisticatedCase","constructor(field: EncodingComplexCase = EncodingComplexCase(), arrayOfComplex: Array<EncodingComplexCase> = arrayOf(EncodingComplexCase(), EncodingComplexCase()), listComplex: List<EncodingComplexCase> = listOf(EncodingComplexCase(), EncodingComplexCase()), mapComplex: Map<String, EncodingComplexCase> = mapOf(\"key1\" to EncodingComplexCase(), \"key2\" to EncodingComplexCase()), mapOfListComplex: Map<String, List<EncodingComplexCase>> = mapOf(\"key1\" to listOf(\n        EncodingComplexCase(), EncodingComplexCase()\n    ), \"key2\" to listOf(EncodingComplexCase(), EncodingComplexCase())), mapOfMapComplex: Map<String, Map<String, EncodingComplexCase>> = mapOf(\"key1\" to mapOf(\"key1\" to EncodingComplexCase(), \"key2\" to EncodingComplexCase()), \"key2\" to mapOf(\"key1\" to EncodingComplexCase(), \"key2\" to EncodingComplexCase())), mapOfMapOfListComplex: Map<String, Map<String, List<EncodingComplexCase>>> = mapOf(\"key1\" to mapOf(\"key1\" to listOf(EncodingComplexCase(), EncodingComplexCase()), \"key2\" to listOf(\n        EncodingComplexCase(), EncodingComplexCase()\n    ), \"key3\" to listOf(EncodingComplexCase(), EncodingComplexCase()), \"key4\" to listOf(\n        EncodingComplexCase(), EncodingComplexCase()\n    ), \"key5\" to listOf(EncodingComplexCase(), EncodingComplexCase()), \"key6\" to listOf(\n        EncodingComplexCase(), EncodingComplexCase()\n    ), \"key7\" to listOf(EncodingComplexCase(), EncodingComplexCase()), \"key8\" to listOf(\n        EncodingComplexCase(), EncodingComplexCase()\n    ), \"key9\" to listOf(EncodingComplexCase(), EncodingComplexCase()), \"key10\" to listOf(\n        EncodingComplexCase(), EncodingComplexCase()\n    ))), setComplex: Set<EncodingComplexCase> = setOf(EncodingComplexCase(), EncodingComplexCase()), setOfListComplex: Set<List<EncodingComplexCase>> = setOf(listOf(EncodingComplexCase(), EncodingComplexCase()), listOf(\n        EncodingComplexCase(), EncodingComplexCase()\n    )), setOfMapComplex: Set<Map<String, EncodingComplexCase>> = setOf(mapOf(\"key1\" to EncodingComplexCase(), \"key2\" to EncodingComplexCase()), mapOf(\"key3\" to EncodingComplexCase(), \"key4\" to EncodingComplexCase())), setOfSetComplex: Set<Set<EncodingComplexCase>> = setOf(setOf(EncodingComplexCase(), EncodingComplexCase()), setOf(\n        EncodingComplexCase(), EncodingComplexCase()\n    )))","dev.shibasis.flatinvoker.core.EncodingSophisticatedCase.EncodingSophisticatedCase"]},{"name":"constructor(initialCapacity: Int = 32)","description":"dev.shibasis.flatinvoker.core.serialization.util.CompositePositionStack.CompositePositionStack","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.util/-composite-position-stack/-composite-position-stack.html","searchKeys":["CompositePositionStack","constructor(initialCapacity: Int = 32)","dev.shibasis.flatinvoker.core.serialization.util.CompositePositionStack.CompositePositionStack"]},{"name":"constructor(innerValue: Double, innerList: List<String>)","description":"dev.shibasis.flatinvoker.core.InnerNestedData.InnerNestedData","location":"flatinvoker-core/dev.shibasis.flatinvoker.core/-inner-nested-data/-inner-nested-data.html","searchKeys":["InnerNestedData","constructor(innerValue: Double, innerList: List<String>)","dev.shibasis.flatinvoker.core.InnerNestedData.InnerNestedData"]},{"name":"constructor(mapOfStringToInt: Map<String, Int> = mapOf(\"one\" to 1, \"two\" to 2, \"three\" to 3), arrayOfInt: ArrayList<Int> = arrayListOf(1, 2, 3, 4, 5), mutableMapOfStringToList: MutableMap<String, List<Double>> = mutableMapOf(\n        \"key1\" to listOf(1.0, 2.0),\n        \"key2\" to listOf(3.0, 4.0),\n        \"key3\" to listOf(5.0, 6.0),\n        \"key4\" to listOf(7.0, 8.0),\n    ))","description":"dev.shibasis.flatinvoker.core.EncodingSimpleCase.EncodingSimpleCase","location":"flatinvoker-core/dev.shibasis.flatinvoker.core/-encoding-simple-case/-encoding-simple-case.html","searchKeys":["EncodingSimpleCase","constructor(mapOfStringToInt: Map<String, Int> = mapOf(\"one\" to 1, \"two\" to 2, \"three\" to 3), arrayOfInt: ArrayList<Int> = arrayListOf(1, 2, 3, 4, 5), mutableMapOfStringToList: MutableMap<String, List<Double>> = mutableMapOf(\n        \"key1\" to listOf(1.0, 2.0),\n        \"key2\" to listOf(3.0, 4.0),\n        \"key3\" to listOf(5.0, 6.0),\n        \"key4\" to listOf(7.0, 8.0),\n    ))","dev.shibasis.flatinvoker.core.EncodingSimpleCase.EncodingSimpleCase"]},{"name":"constructor(nestedInt: Int, nestedString: String, innerNestedData: List<InnerNestedData>)","description":"dev.shibasis.flatinvoker.core.NestedData.NestedData","location":"flatinvoker-core/dev.shibasis.flatinvoker.core/-nested-data/-nested-data.html","searchKeys":["NestedData","constructor(nestedInt: Int, nestedString: String, innerNestedData: List<InnerNestedData>)","dev.shibasis.flatinvoker.core.NestedData.NestedData"]},{"name":"constructor(pointer: Reference, descriptor: SerialDescriptor)","description":"dev.shibasis.flatinvoker.core.serialization.decoder.FlexDecoder.FlexDecoder","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.decoder/-flex-decoder/-flex-decoder.html","searchKeys":["FlexDecoder","constructor(pointer: Reference, descriptor: SerialDescriptor)","dev.shibasis.flatinvoker.core.serialization.decoder.FlexDecoder.FlexDecoder"]},{"name":"constructor(ref: Any)","description":"dev.shibasis.flatinvoker.core.CppArray.CppArray","location":"flatinvoker-core/dev.shibasis.flatinvoker.core/-cpp-array/-cpp-array.html","searchKeys":["CppArray","constructor(ref: Any)","dev.shibasis.flatinvoker.core.CppArray.CppArray"]},{"name":"constructor(type: Int = COMPOSITE_MAP, position: Long = 0, fieldName: String? = null, idx: Int = 0)","description":"dev.shibasis.flatinvoker.core.serialization.util.CompositePosition.CompositePosition","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.util/-composite-position/-composite-position.html","searchKeys":["CompositePosition","constructor(type: Int = COMPOSITE_MAP, position: Long = 0, fieldName: String? = null, idx: Int = 0)","dev.shibasis.flatinvoker.core.serialization.util.CompositePosition.CompositePosition"]},{"name":"data class EncodingComplexCase(val booleanField: Boolean = true, val byteField: Byte = 1, val shortField: Short = 2, val intField: Int = 3, val longField: Long = 4, val floatField: Float = 5.0f, val doubleField: Double = 6.0, val charField: Char = 'A', val stringField: String = \"Hello\", val byteArrayField: ByteArray = byteArrayOf(1, 2, 3), val shortListField: List<Short> = listOf(4, 5, 6), val intSetField: Set<Int> = setOf(7, 8, 9), val longListField: MutableList<Long> = mutableListOf(10L, 11L, 12L), val floatSetField: Set<Float> = setOf(13.0f, 14.0f, 15.0f), val doubleListField: List<Double> = listOf(16.0, 17.0, 18.0), val charListField: MutableList<Char> = mutableListOf('B', 'C', 'D'), val stringSetField: Set<String> = setOf(\"World\", \"Kotlin\"), val listOfLists: List<List<Int>> = listOf(listOf(1, 2), listOf(3, 4)), val mapOfStringToInt: Map<String, Int> = mapOf(\"one\" to 1, \"two\" to 2), val mapOfIntToBoolean: Map<Int, Boolean> = mapOf(1 to true, 2 to false), val setOfSets: Set<Set<Float>> = setOf(setOf(1.0f, 2.0f), setOf(3.0f, 4.0f)), val mutableMapOfStringToList: MutableMap<String, List<Double>> = mutableMapOf(\"key1\" to listOf(1.0, 2.0), \"key2\" to listOf(3.0, 4.0)), val nestedData: NestedData = NestedData(\n        nestedInt = 99,\n        nestedString = \"Nested\",\n        innerNestedData = listOf(\n            InnerNestedData(\n            innerValue = 100.0,\n            innerList = listOf(\"Inner\", \"List\")\n        )\n        )\n    ), val mapOfStringToNestedData: Map<String, NestedData> = mapOf(\"nested\" to NestedData(\n        nestedInt = 101,\n        nestedString = \"Nested\",\n        innerNestedData = listOf(\n            InnerNestedData(\n            innerValue = 102.0,\n            innerList = listOf(\"Inner\", \"List\")\n        )\n        )\n    ), \"nested2\" to NestedData(\n        nestedInt = 103,\n        nestedString = \"Nested\",\n        innerNestedData = listOf(\n            InnerNestedData(\n            innerValue = 104.0,\n            innerList = listOf(\"Inner\", \"List\")\n        )\n        )\n    )\n    ))","description":"dev.shibasis.flatinvoker.core.EncodingComplexCase","location":"flatinvoker-core/dev.shibasis.flatinvoker.core/-encoding-complex-case/index.html","searchKeys":["EncodingComplexCase","data class EncodingComplexCase(val booleanField: Boolean = true, val byteField: Byte = 1, val shortField: Short = 2, val intField: Int = 3, val longField: Long = 4, val floatField: Float = 5.0f, val doubleField: Double = 6.0, val charField: Char = 'A', val stringField: String = \"Hello\", val byteArrayField: ByteArray = byteArrayOf(1, 2, 3), val shortListField: List<Short> = listOf(4, 5, 6), val intSetField: Set<Int> = setOf(7, 8, 9), val longListField: MutableList<Long> = mutableListOf(10L, 11L, 12L), val floatSetField: Set<Float> = setOf(13.0f, 14.0f, 15.0f), val doubleListField: List<Double> = listOf(16.0, 17.0, 18.0), val charListField: MutableList<Char> = mutableListOf('B', 'C', 'D'), val stringSetField: Set<String> = setOf(\"World\", \"Kotlin\"), val listOfLists: List<List<Int>> = listOf(listOf(1, 2), listOf(3, 4)), val mapOfStringToInt: Map<String, Int> = mapOf(\"one\" to 1, \"two\" to 2), val mapOfIntToBoolean: Map<Int, Boolean> = mapOf(1 to true, 2 to false), val setOfSets: Set<Set<Float>> = setOf(setOf(1.0f, 2.0f), setOf(3.0f, 4.0f)), val mutableMapOfStringToList: MutableMap<String, List<Double>> = mutableMapOf(\"key1\" to listOf(1.0, 2.0), \"key2\" to listOf(3.0, 4.0)), val nestedData: NestedData = NestedData(\n        nestedInt = 99,\n        nestedString = \"Nested\",\n        innerNestedData = listOf(\n            InnerNestedData(\n            innerValue = 100.0,\n            innerList = listOf(\"Inner\", \"List\")\n        )\n        )\n    ), val mapOfStringToNestedData: Map<String, NestedData> = mapOf(\"nested\" to NestedData(\n        nestedInt = 101,\n        nestedString = \"Nested\",\n        innerNestedData = listOf(\n            InnerNestedData(\n            innerValue = 102.0,\n            innerList = listOf(\"Inner\", \"List\")\n        )\n        )\n    ), \"nested2\" to NestedData(\n        nestedInt = 103,\n        nestedString = \"Nested\",\n        innerNestedData = listOf(\n            InnerNestedData(\n            innerValue = 104.0,\n            innerList = listOf(\"Inner\", \"List\")\n        )\n        )\n    )\n    ))","dev.shibasis.flatinvoker.core.EncodingComplexCase"]},{"name":"data class EncodingSimpleCase(val mapOfStringToInt: Map<String, Int> = mapOf(\"one\" to 1, \"two\" to 2, \"three\" to 3), val arrayOfInt: ArrayList<Int> = arrayListOf(1, 2, 3, 4, 5), val mutableMapOfStringToList: MutableMap<String, List<Double>> = mutableMapOf(\n        \"key1\" to listOf(1.0, 2.0),\n        \"key2\" to listOf(3.0, 4.0),\n        \"key3\" to listOf(5.0, 6.0),\n        \"key4\" to listOf(7.0, 8.0),\n    ))","description":"dev.shibasis.flatinvoker.core.EncodingSimpleCase","location":"flatinvoker-core/dev.shibasis.flatinvoker.core/-encoding-simple-case/index.html","searchKeys":["EncodingSimpleCase","data class EncodingSimpleCase(val mapOfStringToInt: Map<String, Int> = mapOf(\"one\" to 1, \"two\" to 2, \"three\" to 3), val arrayOfInt: ArrayList<Int> = arrayListOf(1, 2, 3, 4, 5), val mutableMapOfStringToList: MutableMap<String, List<Double>> = mutableMapOf(\n        \"key1\" to listOf(1.0, 2.0),\n        \"key2\" to listOf(3.0, 4.0),\n        \"key3\" to listOf(5.0, 6.0),\n        \"key4\" to listOf(7.0, 8.0),\n    ))","dev.shibasis.flatinvoker.core.EncodingSimpleCase"]},{"name":"data class EncodingSophisticatedCase(val field: EncodingComplexCase = EncodingComplexCase(), val arrayOfComplex: Array<EncodingComplexCase> = arrayOf(EncodingComplexCase(), EncodingComplexCase()), val listComplex: List<EncodingComplexCase> = listOf(EncodingComplexCase(), EncodingComplexCase()), val mapComplex: Map<String, EncodingComplexCase> = mapOf(\"key1\" to EncodingComplexCase(), \"key2\" to EncodingComplexCase()), val mapOfListComplex: Map<String, List<EncodingComplexCase>> = mapOf(\"key1\" to listOf(\n        EncodingComplexCase(), EncodingComplexCase()\n    ), \"key2\" to listOf(EncodingComplexCase(), EncodingComplexCase())), val mapOfMapComplex: Map<String, Map<String, EncodingComplexCase>> = mapOf(\"key1\" to mapOf(\"key1\" to EncodingComplexCase(), \"key2\" to EncodingComplexCase()), \"key2\" to mapOf(\"key1\" to EncodingComplexCase(), \"key2\" to EncodingComplexCase())), val mapOfMapOfListComplex: Map<String, Map<String, List<EncodingComplexCase>>> = mapOf(\"key1\" to mapOf(\"key1\" to listOf(EncodingComplexCase(), EncodingComplexCase()), \"key2\" to listOf(\n        EncodingComplexCase(), EncodingComplexCase()\n    ), \"key3\" to listOf(EncodingComplexCase(), EncodingComplexCase()), \"key4\" to listOf(\n        EncodingComplexCase(), EncodingComplexCase()\n    ), \"key5\" to listOf(EncodingComplexCase(), EncodingComplexCase()), \"key6\" to listOf(\n        EncodingComplexCase(), EncodingComplexCase()\n    ), \"key7\" to listOf(EncodingComplexCase(), EncodingComplexCase()), \"key8\" to listOf(\n        EncodingComplexCase(), EncodingComplexCase()\n    ), \"key9\" to listOf(EncodingComplexCase(), EncodingComplexCase()), \"key10\" to listOf(\n        EncodingComplexCase(), EncodingComplexCase()\n    ))), val setComplex: Set<EncodingComplexCase> = setOf(EncodingComplexCase(), EncodingComplexCase()), val setOfListComplex: Set<List<EncodingComplexCase>> = setOf(listOf(EncodingComplexCase(), EncodingComplexCase()), listOf(\n        EncodingComplexCase(), EncodingComplexCase()\n    )), val setOfMapComplex: Set<Map<String, EncodingComplexCase>> = setOf(mapOf(\"key1\" to EncodingComplexCase(), \"key2\" to EncodingComplexCase()), mapOf(\"key3\" to EncodingComplexCase(), \"key4\" to EncodingComplexCase())), val setOfSetComplex: Set<Set<EncodingComplexCase>> = setOf(setOf(EncodingComplexCase(), EncodingComplexCase()), setOf(\n        EncodingComplexCase(), EncodingComplexCase()\n    )))","description":"dev.shibasis.flatinvoker.core.EncodingSophisticatedCase","location":"flatinvoker-core/dev.shibasis.flatinvoker.core/-encoding-sophisticated-case/index.html","searchKeys":["EncodingSophisticatedCase","data class EncodingSophisticatedCase(val field: EncodingComplexCase = EncodingComplexCase(), val arrayOfComplex: Array<EncodingComplexCase> = arrayOf(EncodingComplexCase(), EncodingComplexCase()), val listComplex: List<EncodingComplexCase> = listOf(EncodingComplexCase(), EncodingComplexCase()), val mapComplex: Map<String, EncodingComplexCase> = mapOf(\"key1\" to EncodingComplexCase(), \"key2\" to EncodingComplexCase()), val mapOfListComplex: Map<String, List<EncodingComplexCase>> = mapOf(\"key1\" to listOf(\n        EncodingComplexCase(), EncodingComplexCase()\n    ), \"key2\" to listOf(EncodingComplexCase(), EncodingComplexCase())), val mapOfMapComplex: Map<String, Map<String, EncodingComplexCase>> = mapOf(\"key1\" to mapOf(\"key1\" to EncodingComplexCase(), \"key2\" to EncodingComplexCase()), \"key2\" to mapOf(\"key1\" to EncodingComplexCase(), \"key2\" to EncodingComplexCase())), val mapOfMapOfListComplex: Map<String, Map<String, List<EncodingComplexCase>>> = mapOf(\"key1\" to mapOf(\"key1\" to listOf(EncodingComplexCase(), EncodingComplexCase()), \"key2\" to listOf(\n        EncodingComplexCase(), EncodingComplexCase()\n    ), \"key3\" to listOf(EncodingComplexCase(), EncodingComplexCase()), \"key4\" to listOf(\n        EncodingComplexCase(), EncodingComplexCase()\n    ), \"key5\" to listOf(EncodingComplexCase(), EncodingComplexCase()), \"key6\" to listOf(\n        EncodingComplexCase(), EncodingComplexCase()\n    ), \"key7\" to listOf(EncodingComplexCase(), EncodingComplexCase()), \"key8\" to listOf(\n        EncodingComplexCase(), EncodingComplexCase()\n    ), \"key9\" to listOf(EncodingComplexCase(), EncodingComplexCase()), \"key10\" to listOf(\n        EncodingComplexCase(), EncodingComplexCase()\n    ))), val setComplex: Set<EncodingComplexCase> = setOf(EncodingComplexCase(), EncodingComplexCase()), val setOfListComplex: Set<List<EncodingComplexCase>> = setOf(listOf(EncodingComplexCase(), EncodingComplexCase()), listOf(\n        EncodingComplexCase(), EncodingComplexCase()\n    )), val setOfMapComplex: Set<Map<String, EncodingComplexCase>> = setOf(mapOf(\"key1\" to EncodingComplexCase(), \"key2\" to EncodingComplexCase()), mapOf(\"key3\" to EncodingComplexCase(), \"key4\" to EncodingComplexCase())), val setOfSetComplex: Set<Set<EncodingComplexCase>> = setOf(setOf(EncodingComplexCase(), EncodingComplexCase()), setOf(\n        EncodingComplexCase(), EncodingComplexCase()\n    )))","dev.shibasis.flatinvoker.core.EncodingSophisticatedCase"]},{"name":"data class InnerNestedData(val innerValue: Double, val innerList: List<String>)","description":"dev.shibasis.flatinvoker.core.InnerNestedData","location":"flatinvoker-core/dev.shibasis.flatinvoker.core/-inner-nested-data/index.html","searchKeys":["InnerNestedData","data class InnerNestedData(val innerValue: Double, val innerList: List<String>)","dev.shibasis.flatinvoker.core.InnerNestedData"]},{"name":"data class NestedData(val nestedInt: Int, val nestedString: String, val innerNestedData: List<InnerNestedData>)","description":"dev.shibasis.flatinvoker.core.NestedData","location":"flatinvoker-core/dev.shibasis.flatinvoker.core/-nested-data/index.html","searchKeys":["NestedData","data class NestedData(val nestedInt: Int, val nestedString: String, val innerNestedData: List<InnerNestedData>)","dev.shibasis.flatinvoker.core.NestedData"]},{"name":"enum TypeCategory : Enum<TypeCategory> ","description":"dev.shibasis.flatinvoker.core.serialization.util.TypeCategory","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.util/-type-category/index.html","searchKeys":["TypeCategory","enum TypeCategory : Enum<TypeCategory> ","dev.shibasis.flatinvoker.core.serialization.util.TypeCategory"]},{"name":"expect fun Blob(pointer: Long, key: String?, value: ByteArray)","description":"dev.shibasis.flatinvoker.core.FlexBuffer.Blob","location":"flatinvoker-core/dev.shibasis.flatinvoker.core/-flex-buffer/-blob.html","searchKeys":["Blob","expect fun Blob(pointer: Long, key: String?, value: ByteArray)","dev.shibasis.flatinvoker.core.FlexBuffer.Blob"]},{"name":"expect fun Bool(pointer: Long, key: String?, value: Boolean)","description":"dev.shibasis.flatinvoker.core.FlexBuffer.Bool","location":"flatinvoker-core/dev.shibasis.flatinvoker.core/-flex-buffer/-bool.html","searchKeys":["Bool","expect fun Bool(pointer: Long, key: String?, value: Boolean)","dev.shibasis.flatinvoker.core.FlexBuffer.Bool"]},{"name":"expect fun Create(): Long","description":"dev.shibasis.flatinvoker.core.FlexBuffer.Create","location":"flatinvoker-core/dev.shibasis.flatinvoker.core/-flex-buffer/-create.html","searchKeys":["Create","expect fun Create(): Long","dev.shibasis.flatinvoker.core.FlexBuffer.Create"]},{"name":"expect fun Destroy(pointer: Long)","description":"dev.shibasis.flatinvoker.core.FlexBuffer.Destroy","location":"flatinvoker-core/dev.shibasis.flatinvoker.core/-flex-buffer/-destroy.html","searchKeys":["Destroy","expect fun Destroy(pointer: Long)","dev.shibasis.flatinvoker.core.FlexBuffer.Destroy"]},{"name":"expect fun Double(pointer: Long, key: String?, value: Double)","description":"dev.shibasis.flatinvoker.core.FlexBuffer.Double","location":"flatinvoker-core/dev.shibasis.flatinvoker.core/-flex-buffer/-double.html","searchKeys":["Double","expect fun Double(pointer: Long, key: String?, value: Double)","dev.shibasis.flatinvoker.core.FlexBuffer.Double"]},{"name":"expect fun EndMap(pointer: Long, mapStart: Long)","description":"dev.shibasis.flatinvoker.core.FlexBuffer.EndMap","location":"flatinvoker-core/dev.shibasis.flatinvoker.core/-flex-buffer/-end-map.html","searchKeys":["EndMap","expect fun EndMap(pointer: Long, mapStart: Long)","dev.shibasis.flatinvoker.core.FlexBuffer.EndMap"]},{"name":"expect fun EndVector(pointer: Long, vectorStart: Long)","description":"dev.shibasis.flatinvoker.core.FlexBuffer.EndVector","location":"flatinvoker-core/dev.shibasis.flatinvoker.core/-flex-buffer/-end-vector.html","searchKeys":["EndVector","expect fun EndVector(pointer: Long, vectorStart: Long)","dev.shibasis.flatinvoker.core.FlexBuffer.EndVector"]},{"name":"expect fun Finish(pointer: Long): Long","description":"dev.shibasis.flatinvoker.core.FlexBuffer.Finish","location":"flatinvoker-core/dev.shibasis.flatinvoker.core/-flex-buffer/-finish.html","searchKeys":["Finish","expect fun Finish(pointer: Long): Long","dev.shibasis.flatinvoker.core.FlexBuffer.Finish"]},{"name":"expect fun Float(pointer: Long, key: String?, value: Float)","description":"dev.shibasis.flatinvoker.core.FlexBuffer.Float","location":"flatinvoker-core/dev.shibasis.flatinvoker.core/-flex-buffer/-float.html","searchKeys":["Float","expect fun Float(pointer: Long, key: String?, value: Float)","dev.shibasis.flatinvoker.core.FlexBuffer.Float"]},{"name":"expect fun GetBuffer(pointer: Long): ByteArray","description":"dev.shibasis.flatinvoker.core.FlexBuffer.GetBuffer","location":"flatinvoker-core/dev.shibasis.flatinvoker.core/-flex-buffer/-get-buffer.html","searchKeys":["GetBuffer","expect fun GetBuffer(pointer: Long): ByteArray","dev.shibasis.flatinvoker.core.FlexBuffer.GetBuffer"]},{"name":"expect fun Int(pointer: Long, key: String?, value: Long)","description":"dev.shibasis.flatinvoker.core.FlexBuffer.Int","location":"flatinvoker-core/dev.shibasis.flatinvoker.core/-flex-buffer/-int.html","searchKeys":["Int","expect fun Int(pointer: Long, key: String?, value: Long)","dev.shibasis.flatinvoker.core.FlexBuffer.Int"]},{"name":"expect fun Null(pointer: Long, key: String?)","description":"dev.shibasis.flatinvoker.core.FlexBuffer.Null","location":"flatinvoker-core/dev.shibasis.flatinvoker.core/-flex-buffer/-null.html","searchKeys":["Null","expect fun Null(pointer: Long, key: String?)","dev.shibasis.flatinvoker.core.FlexBuffer.Null"]},{"name":"expect fun ParseJson(pointer: Long, data: String): Long","description":"dev.shibasis.flatinvoker.core.FlexBuffer.ParseJson","location":"flatinvoker-core/dev.shibasis.flatinvoker.core/-flex-buffer/-parse-json.html","searchKeys":["ParseJson","expect fun ParseJson(pointer: Long, data: String): Long","dev.shibasis.flatinvoker.core.FlexBuffer.ParseJson"]},{"name":"expect fun StartMap(pointer: Long, key: String?): Long","description":"dev.shibasis.flatinvoker.core.FlexBuffer.StartMap","location":"flatinvoker-core/dev.shibasis.flatinvoker.core/-flex-buffer/-start-map.html","searchKeys":["StartMap","expect fun StartMap(pointer: Long, key: String?): Long","dev.shibasis.flatinvoker.core.FlexBuffer.StartMap"]},{"name":"expect fun StartVector(pointer: Long, key: String?): Long","description":"dev.shibasis.flatinvoker.core.FlexBuffer.StartVector","location":"flatinvoker-core/dev.shibasis.flatinvoker.core/-flex-buffer/-start-vector.html","searchKeys":["StartVector","expect fun StartVector(pointer: Long, key: String?): Long","dev.shibasis.flatinvoker.core.FlexBuffer.StartVector"]},{"name":"expect fun String(pointer: Long, key: String?, value: String)","description":"dev.shibasis.flatinvoker.core.FlexBuffer.String","location":"flatinvoker-core/dev.shibasis.flatinvoker.core/-flex-buffer/-string.html","searchKeys":["String","expect fun String(pointer: Long, key: String?, value: String)","dev.shibasis.flatinvoker.core.FlexBuffer.String"]},{"name":"expect object FlexBuffer","description":"dev.shibasis.flatinvoker.core.FlexBuffer","location":"flatinvoker-core/dev.shibasis.flatinvoker.core/-flex-buffer/index.html","searchKeys":["FlexBuffer","expect object FlexBuffer","dev.shibasis.flatinvoker.core.FlexBuffer"]},{"name":"external fun jniGetBuffer(pointer: Long): ByteBuffer","description":"dev.shibasis.flatinvoker.core.FlexBuffer.jniGetBuffer","location":"flatinvoker-core/dev.shibasis.flatinvoker.core/-flex-buffer/jni-get-buffer.html","searchKeys":["jniGetBuffer","external fun jniGetBuffer(pointer: Long): ByteBuffer","dev.shibasis.flatinvoker.core.FlexBuffer.jniGetBuffer"]},{"name":"fun ByteBuffer.toReadBuffer(): ReadBuffer","description":"dev.shibasis.flatinvoker.core.toReadBuffer","location":"flatinvoker-core/dev.shibasis.flatinvoker.core/to-read-buffer.html","searchKeys":["toReadBuffer","fun ByteBuffer.toReadBuffer(): ReadBuffer","dev.shibasis.flatinvoker.core.toReadBuffer"]},{"name":"fun ReadBuffer.toByteBuffer(): ByteBuffer","description":"dev.shibasis.flatinvoker.core.toByteBuffer","location":"flatinvoker-core/dev.shibasis.flatinvoker.core/to-byte-buffer.html","searchKeys":["toByteBuffer","fun ReadBuffer.toByteBuffer(): ByteBuffer","dev.shibasis.flatinvoker.core.toByteBuffer"]},{"name":"fun Reference.typeCategory(): TypeCategory","description":"dev.shibasis.flatinvoker.core.serialization.util.typeCategory","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.util/type-category.html","searchKeys":["typeCategory","fun Reference.typeCategory(): TypeCategory","dev.shibasis.flatinvoker.core.serialization.util.typeCategory"]},{"name":"fun encodeElement(descriptor: SerialDescriptor, index: Int): Boolean","description":"dev.shibasis.flatinvoker.core.serialization.encoder.FlexEncoderHalfMigrated.encodeElement","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.encoder/-flex-encoder-half-migrated/encode-element.html","searchKeys":["encodeElement","fun encodeElement(descriptor: SerialDescriptor, index: Int): Boolean","dev.shibasis.flatinvoker.core.serialization.encoder.FlexEncoderHalfMigrated.encodeElement"]},{"name":"fun encodeValue(value: Any)","description":"dev.shibasis.flatinvoker.core.serialization.encoder.FlexEncoderHalfMigrated.encodeValue","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.encoder/-flex-encoder-half-migrated/encode-value.html","searchKeys":["encodeValue","fun encodeValue(value: Any)","dev.shibasis.flatinvoker.core.serialization.encoder.FlexEncoderHalfMigrated.encodeValue"]},{"name":"fun r(t: Any)","description":"dev.shibasis.flatinvoker.core.r","location":"flatinvoker-core/dev.shibasis.flatinvoker.core/r.html","searchKeys":["r","fun r(t: Any)","dev.shibasis.flatinvoker.core.r"]},{"name":"fun test()","description":"dev.shibasis.flatinvoker.core.serialization.encoder.test","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.encoder/test.html","searchKeys":["test","fun test()","dev.shibasis.flatinvoker.core.serialization.encoder.test"]},{"name":"fun valueOf(value: String): TypeCategory","description":"dev.shibasis.flatinvoker.core.serialization.util.TypeCategory.valueOf","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.util/-type-category/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): TypeCategory","dev.shibasis.flatinvoker.core.serialization.util.TypeCategory.valueOf"]},{"name":"fun values(): Array<TypeCategory>","description":"dev.shibasis.flatinvoker.core.serialization.util.TypeCategory.values","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.util/-type-category/values.html","searchKeys":["values","fun values(): Array<TypeCategory>","dev.shibasis.flatinvoker.core.serialization.util.TypeCategory.values"]},{"name":"inline fun <T> decodeFromFlexBuffer(pointer: Long): T","description":"dev.shibasis.flatinvoker.core.serialization.decodeFromFlexBuffer","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization/decode-from-flex-buffer.html","searchKeys":["decodeFromFlexBuffer","inline fun <T> decodeFromFlexBuffer(pointer: Long): T","dev.shibasis.flatinvoker.core.serialization.decodeFromFlexBuffer"]},{"name":"inline fun <T> encodeToFlexBuffer(value: T): Long","description":"dev.shibasis.flatinvoker.core.serialization.encodeToFlexBuffer","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization/encode-to-flex-buffer.html","searchKeys":["encodeToFlexBuffer","inline fun <T> encodeToFlexBuffer(value: T): Long","dev.shibasis.flatinvoker.core.serialization.encodeToFlexBuffer"]},{"name":"inline fun <T> printDecoderCallTrace(): T","description":"dev.shibasis.flatinvoker.core.serialization.printDecoderCallTrace","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization/print-decoder-call-trace.html","searchKeys":["printDecoderCallTrace","inline fun <T> printDecoderCallTrace(): T","dev.shibasis.flatinvoker.core.serialization.printDecoderCallTrace"]},{"name":"inline fun clear()","description":"dev.shibasis.flatinvoker.core.serialization.util.CompositePositionStack.clear","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.util/-composite-position-stack/clear.html","searchKeys":["clear","inline fun clear()","dev.shibasis.flatinvoker.core.serialization.util.CompositePositionStack.clear"]},{"name":"inline fun decodeCategory(ref: Reference)","description":"dev.shibasis.flatinvoker.core.serialization.decodeCategory","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization/decode-category.html","searchKeys":["decodeCategory","inline fun decodeCategory(ref: Reference)","dev.shibasis.flatinvoker.core.serialization.decodeCategory"]},{"name":"inline fun expandCapacityBy(additionalCapacity: Int)","description":"dev.shibasis.flatinvoker.core.serialization.util.CompositePositionStack.expandCapacityBy","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.util/-composite-position-stack/expand-capacity-by.html","searchKeys":["expandCapacityBy","inline fun expandCapacityBy(additionalCapacity: Int)","dev.shibasis.flatinvoker.core.serialization.util.CompositePositionStack.expandCapacityBy"]},{"name":"inline fun isEmpty(): Boolean","description":"dev.shibasis.flatinvoker.core.serialization.util.CompositePositionStack.isEmpty","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.util/-composite-position-stack/is-empty.html","searchKeys":["isEmpty","inline fun isEmpty(): Boolean","dev.shibasis.flatinvoker.core.serialization.util.CompositePositionStack.isEmpty"]},{"name":"inline fun log(msg: String, tag: String = \"CallTraceDecoder: \")","description":"dev.shibasis.flatinvoker.core.serialization.decoder.CallTraceDecoder.log","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.decoder/-call-trace-decoder/log.html","searchKeys":["log","inline fun log(msg: String, tag: String = \"CallTraceDecoder: \")","dev.shibasis.flatinvoker.core.serialization.decoder.CallTraceDecoder.log"]},{"name":"inline fun onEncodeElement(name: String)","description":"dev.shibasis.flatinvoker.core.serialization.util.EncodingStack.onEncodeElement","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.util/-encoding-stack/on-encode-element.html","searchKeys":["onEncodeElement","inline fun onEncodeElement(name: String)","dev.shibasis.flatinvoker.core.serialization.util.EncodingStack.onEncodeElement"]},{"name":"inline fun onEncodeValue(value: Any?): Boolean","description":"dev.shibasis.flatinvoker.core.serialization.util.EncodingStack.onEncodeValue","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.util/-encoding-stack/on-encode-value.html","searchKeys":["onEncodeValue","inline fun onEncodeValue(value: Any?): Boolean","dev.shibasis.flatinvoker.core.serialization.util.EncodingStack.onEncodeValue"]},{"name":"inline fun onEncodeValue(value: Any?): Int?","description":"dev.shibasis.flatinvoker.core.serialization.encoder.FlexEncoderHalfMigrated.onEncodeValue","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.encoder/-flex-encoder-half-migrated/on-encode-value.html","searchKeys":["onEncodeValue","inline fun onEncodeValue(value: Any?): Int?","dev.shibasis.flatinvoker.core.serialization.encoder.FlexEncoderHalfMigrated.onEncodeValue"]},{"name":"inline fun pop(): CompositePosition","description":"dev.shibasis.flatinvoker.core.serialization.util.CompositePositionStack.pop","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.util/-composite-position-stack/pop.html","searchKeys":["pop","inline fun pop(): CompositePosition","dev.shibasis.flatinvoker.core.serialization.util.CompositePositionStack.pop"]},{"name":"inline fun pop(): CompositePosition","description":"dev.shibasis.flatinvoker.core.serialization.util.EncodingStack.pop","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.util/-encoding-stack/pop.html","searchKeys":["pop","inline fun pop(): CompositePosition","dev.shibasis.flatinvoker.core.serialization.util.EncodingStack.pop"]},{"name":"inline fun push(composite: Int, start: Long)","description":"dev.shibasis.flatinvoker.core.serialization.util.EncodingStack.push","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.util/-encoding-stack/push.html","searchKeys":["push","inline fun push(composite: Int, start: Long)","dev.shibasis.flatinvoker.core.serialization.util.EncodingStack.push"]},{"name":"inline fun push(type: Int, position: Long, fieldName: String? = null, idx: Int = 0)","description":"dev.shibasis.flatinvoker.core.serialization.util.CompositePositionStack.push","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.util/-composite-position-stack/push.html","searchKeys":["push","inline fun push(type: Int, position: Long, fieldName: String? = null, idx: Int = 0)","dev.shibasis.flatinvoker.core.serialization.util.CompositePositionStack.push"]},{"name":"inline fun top(): CompositePosition?","description":"dev.shibasis.flatinvoker.core.serialization.util.CompositePositionStack.top","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.util/-composite-position-stack/top.html","searchKeys":["top","inline fun top(): CompositePosition?","dev.shibasis.flatinvoker.core.serialization.util.CompositePositionStack.top"]},{"name":"interface Network","description":"dev.shibasis.flatinvoker.core.Network","location":"flatinvoker-core/dev.shibasis.flatinvoker.core/-network/index.html","searchKeys":["Network","interface Network","dev.shibasis.flatinvoker.core.Network"]},{"name":"object NetworkImpl : Network","description":"dev.shibasis.flatinvoker.core.NetworkImpl","location":"flatinvoker-core/dev.shibasis.flatinvoker.core/-network-impl/index.html","searchKeys":["NetworkImpl","object NetworkImpl : Network","dev.shibasis.flatinvoker.core.NetworkImpl"]},{"name":"open fun exposedMethods(): Map<String, String>","description":"dev.shibasis.flatinvoker.core.Network.exposedMethods","location":"flatinvoker-core/dev.shibasis.flatinvoker.core/-network/exposed-methods.html","searchKeys":["exposedMethods","open fun exposedMethods(): Map<String, String>","dev.shibasis.flatinvoker.core.Network.exposedMethods"]},{"name":"open operator override fun invoke(methodName: String, arguments: Vector): Any","description":"dev.shibasis.flatinvoker.core.NetworkImpl.invoke","location":"flatinvoker-core/dev.shibasis.flatinvoker.core/-network-impl/invoke.html","searchKeys":["invoke","open operator override fun invoke(methodName: String, arguments: Vector): Any","dev.shibasis.flatinvoker.core.NetworkImpl.invoke"]},{"name":"open override fun <T : Any> decodeNullableSerializableElement(descriptor: SerialDescriptor, index: Int, deserializer: DeserializationStrategy<T?>, previousValue: T?): T?","description":"dev.shibasis.flatinvoker.core.serialization.decoder.BaseDecoder.decodeNullableSerializableElement","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.decoder/-base-decoder/decode-nullable-serializable-element.html","searchKeys":["decodeNullableSerializableElement","open override fun <T : Any> decodeNullableSerializableElement(descriptor: SerialDescriptor, index: Int, deserializer: DeserializationStrategy<T?>, previousValue: T?): T?","dev.shibasis.flatinvoker.core.serialization.decoder.BaseDecoder.decodeNullableSerializableElement"]},{"name":"open override fun <T : Any> decodeNullableSerializableElement(descriptor: SerialDescriptor, index: Int, deserializer: DeserializationStrategy<T?>, previousValue: T?): T?","description":"dev.shibasis.flatinvoker.core.serialization.decoder.CallTraceDecoder.decodeNullableSerializableElement","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.decoder/-call-trace-decoder/decode-nullable-serializable-element.html","searchKeys":["decodeNullableSerializableElement","open override fun <T : Any> decodeNullableSerializableElement(descriptor: SerialDescriptor, index: Int, deserializer: DeserializationStrategy<T?>, previousValue: T?): T?","dev.shibasis.flatinvoker.core.serialization.decoder.CallTraceDecoder.decodeNullableSerializableElement"]},{"name":"open override fun <T : Any> decodeNullableSerializableElement(descriptor: SerialDescriptor, index: Int, deserializer: DeserializationStrategy<T?>, previousValue: T?): T?","description":"dev.shibasis.flatinvoker.core.serialization.decoder.FlexDecoder.decodeNullableSerializableElement","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.decoder/-flex-decoder/decode-nullable-serializable-element.html","searchKeys":["decodeNullableSerializableElement","open override fun <T : Any> decodeNullableSerializableElement(descriptor: SerialDescriptor, index: Int, deserializer: DeserializationStrategy<T?>, previousValue: T?): T?","dev.shibasis.flatinvoker.core.serialization.decoder.FlexDecoder.decodeNullableSerializableElement"]},{"name":"open override fun <T : Any> decodeNullableSerializableValue(deserializer: DeserializationStrategy<T?>): T?","description":"dev.shibasis.flatinvoker.core.serialization.decoder.CallTraceDecoder.decodeNullableSerializableValue","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.decoder/-call-trace-decoder/decode-nullable-serializable-value.html","searchKeys":["decodeNullableSerializableValue","open override fun <T : Any> decodeNullableSerializableValue(deserializer: DeserializationStrategy<T?>): T?","dev.shibasis.flatinvoker.core.serialization.decoder.CallTraceDecoder.decodeNullableSerializableValue"]},{"name":"open override fun <T : Any> decodeNullableSerializableValue(deserializer: DeserializationStrategy<T?>): T?","description":"dev.shibasis.flatinvoker.core.serialization.decoder.FlexDecoder.decodeNullableSerializableValue","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.decoder/-flex-decoder/decode-nullable-serializable-value.html","searchKeys":["decodeNullableSerializableValue","open override fun <T : Any> decodeNullableSerializableValue(deserializer: DeserializationStrategy<T?>): T?","dev.shibasis.flatinvoker.core.serialization.decoder.FlexDecoder.decodeNullableSerializableValue"]},{"name":"open override fun <T : Any> encodeNullableSerializableElement(descriptor: SerialDescriptor, index: Int, serializer: SerializationStrategy<T>, value: T?)","description":"dev.shibasis.flatinvoker.core.serialization.encoder.FlexEncoderHalfMigrated.encodeNullableSerializableElement","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.encoder/-flex-encoder-half-migrated/encode-nullable-serializable-element.html","searchKeys":["encodeNullableSerializableElement","open override fun <T : Any> encodeNullableSerializableElement(descriptor: SerialDescriptor, index: Int, serializer: SerializationStrategy<T>, value: T?)","dev.shibasis.flatinvoker.core.serialization.encoder.FlexEncoderHalfMigrated.encodeNullableSerializableElement"]},{"name":"open override fun <T> decodeSerializableElement(descriptor: SerialDescriptor, index: Int, deserializer: DeserializationStrategy<T>, previousValue: T?): T","description":"dev.shibasis.flatinvoker.core.serialization.decoder.BaseDecoder.decodeSerializableElement","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.decoder/-base-decoder/decode-serializable-element.html","searchKeys":["decodeSerializableElement","open override fun <T> decodeSerializableElement(descriptor: SerialDescriptor, index: Int, deserializer: DeserializationStrategy<T>, previousValue: T?): T","dev.shibasis.flatinvoker.core.serialization.decoder.BaseDecoder.decodeSerializableElement"]},{"name":"open override fun <T> decodeSerializableElement(descriptor: SerialDescriptor, index: Int, deserializer: DeserializationStrategy<T>, previousValue: T?): T","description":"dev.shibasis.flatinvoker.core.serialization.decoder.CallTraceDecoder.decodeSerializableElement","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.decoder/-call-trace-decoder/decode-serializable-element.html","searchKeys":["decodeSerializableElement","open override fun <T> decodeSerializableElement(descriptor: SerialDescriptor, index: Int, deserializer: DeserializationStrategy<T>, previousValue: T?): T","dev.shibasis.flatinvoker.core.serialization.decoder.CallTraceDecoder.decodeSerializableElement"]},{"name":"open override fun <T> decodeSerializableElement(descriptor: SerialDescriptor, index: Int, deserializer: DeserializationStrategy<T>, previousValue: T?): T","description":"dev.shibasis.flatinvoker.core.serialization.decoder.FlexDecoder.decodeSerializableElement","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.decoder/-flex-decoder/decode-serializable-element.html","searchKeys":["decodeSerializableElement","open override fun <T> decodeSerializableElement(descriptor: SerialDescriptor, index: Int, deserializer: DeserializationStrategy<T>, previousValue: T?): T","dev.shibasis.flatinvoker.core.serialization.decoder.FlexDecoder.decodeSerializableElement"]},{"name":"open override fun <T> decodeSerializableValue(deserializer: DeserializationStrategy<T>): T","description":"dev.shibasis.flatinvoker.core.serialization.decoder.CallTraceDecoder.decodeSerializableValue","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.decoder/-call-trace-decoder/decode-serializable-value.html","searchKeys":["decodeSerializableValue","open override fun <T> decodeSerializableValue(deserializer: DeserializationStrategy<T>): T","dev.shibasis.flatinvoker.core.serialization.decoder.CallTraceDecoder.decodeSerializableValue"]},{"name":"open override fun <T> decodeSerializableValue(deserializer: DeserializationStrategy<T>): T","description":"dev.shibasis.flatinvoker.core.serialization.decoder.FlexDecoder.decodeSerializableValue","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.decoder/-flex-decoder/decode-serializable-value.html","searchKeys":["decodeSerializableValue","open override fun <T> decodeSerializableValue(deserializer: DeserializationStrategy<T>): T","dev.shibasis.flatinvoker.core.serialization.decoder.FlexDecoder.decodeSerializableValue"]},{"name":"open override fun <T> encodeSerializableElement(descriptor: SerialDescriptor, index: Int, serializer: SerializationStrategy<T>, value: T)","description":"dev.shibasis.flatinvoker.core.serialization.encoder.FlexEncoderHalfMigrated.encodeSerializableElement","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.encoder/-flex-encoder-half-migrated/encode-serializable-element.html","searchKeys":["encodeSerializableElement","open override fun <T> encodeSerializableElement(descriptor: SerialDescriptor, index: Int, serializer: SerializationStrategy<T>, value: T)","dev.shibasis.flatinvoker.core.serialization.encoder.FlexEncoderHalfMigrated.encodeSerializableElement"]},{"name":"open override fun beginCollection(descriptor: SerialDescriptor, collectionSize: Int): CompositeEncoder","description":"dev.shibasis.flatinvoker.core.serialization.encoder.FlexEncoder.beginCollection","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.encoder/-flex-encoder/begin-collection.html","searchKeys":["beginCollection","open override fun beginCollection(descriptor: SerialDescriptor, collectionSize: Int): CompositeEncoder","dev.shibasis.flatinvoker.core.serialization.encoder.FlexEncoder.beginCollection"]},{"name":"open override fun beginCollection(descriptor: SerialDescriptor, collectionSize: Int): CompositeEncoder","description":"dev.shibasis.flatinvoker.core.serialization.encoder.FlexEncoderHalfMigrated.beginCollection","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.encoder/-flex-encoder-half-migrated/begin-collection.html","searchKeys":["beginCollection","open override fun beginCollection(descriptor: SerialDescriptor, collectionSize: Int): CompositeEncoder","dev.shibasis.flatinvoker.core.serialization.encoder.FlexEncoderHalfMigrated.beginCollection"]},{"name":"open override fun beginStructure(descriptor: SerialDescriptor): CompositeDecoder","description":"dev.shibasis.flatinvoker.core.serialization.decoder.BaseDecoder.beginStructure","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.decoder/-base-decoder/begin-structure.html","searchKeys":["beginStructure","open override fun beginStructure(descriptor: SerialDescriptor): CompositeDecoder","dev.shibasis.flatinvoker.core.serialization.decoder.BaseDecoder.beginStructure"]},{"name":"open override fun beginStructure(descriptor: SerialDescriptor): CompositeDecoder","description":"dev.shibasis.flatinvoker.core.serialization.decoder.CallTraceDecoder.beginStructure","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.decoder/-call-trace-decoder/begin-structure.html","searchKeys":["beginStructure","open override fun beginStructure(descriptor: SerialDescriptor): CompositeDecoder","dev.shibasis.flatinvoker.core.serialization.decoder.CallTraceDecoder.beginStructure"]},{"name":"open override fun beginStructure(descriptor: SerialDescriptor): CompositeDecoder","description":"dev.shibasis.flatinvoker.core.serialization.decoder.FlexDecoder.beginStructure","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.decoder/-flex-decoder/begin-structure.html","searchKeys":["beginStructure","open override fun beginStructure(descriptor: SerialDescriptor): CompositeDecoder","dev.shibasis.flatinvoker.core.serialization.decoder.FlexDecoder.beginStructure"]},{"name":"open override fun beginStructure(descriptor: SerialDescriptor): CompositeEncoder","description":"dev.shibasis.flatinvoker.core.serialization.encoder.FlexEncoder.beginStructure","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.encoder/-flex-encoder/begin-structure.html","searchKeys":["beginStructure","open override fun beginStructure(descriptor: SerialDescriptor): CompositeEncoder","dev.shibasis.flatinvoker.core.serialization.encoder.FlexEncoder.beginStructure"]},{"name":"open override fun beginStructure(descriptor: SerialDescriptor): CompositeEncoder","description":"dev.shibasis.flatinvoker.core.serialization.encoder.FlexEncoderHalfMigrated.beginStructure","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.encoder/-flex-encoder-half-migrated/begin-structure.html","searchKeys":["beginStructure","open override fun beginStructure(descriptor: SerialDescriptor): CompositeEncoder","dev.shibasis.flatinvoker.core.serialization.encoder.FlexEncoderHalfMigrated.beginStructure"]},{"name":"open override fun decodeBoolean(): Boolean","description":"dev.shibasis.flatinvoker.core.serialization.decoder.BaseDecoder.decodeBoolean","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.decoder/-base-decoder/decode-boolean.html","searchKeys":["decodeBoolean","open override fun decodeBoolean(): Boolean","dev.shibasis.flatinvoker.core.serialization.decoder.BaseDecoder.decodeBoolean"]},{"name":"open override fun decodeBoolean(): Boolean","description":"dev.shibasis.flatinvoker.core.serialization.decoder.CallTraceDecoder.decodeBoolean","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.decoder/-call-trace-decoder/decode-boolean.html","searchKeys":["decodeBoolean","open override fun decodeBoolean(): Boolean","dev.shibasis.flatinvoker.core.serialization.decoder.CallTraceDecoder.decodeBoolean"]},{"name":"open override fun decodeBoolean(): Boolean","description":"dev.shibasis.flatinvoker.core.serialization.decoder.FlexDecoder.decodeBoolean","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.decoder/-flex-decoder/decode-boolean.html","searchKeys":["decodeBoolean","open override fun decodeBoolean(): Boolean","dev.shibasis.flatinvoker.core.serialization.decoder.FlexDecoder.decodeBoolean"]},{"name":"open override fun decodeBooleanElement(descriptor: SerialDescriptor, index: Int): Boolean","description":"dev.shibasis.flatinvoker.core.serialization.decoder.BaseDecoder.decodeBooleanElement","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.decoder/-base-decoder/decode-boolean-element.html","searchKeys":["decodeBooleanElement","open override fun decodeBooleanElement(descriptor: SerialDescriptor, index: Int): Boolean","dev.shibasis.flatinvoker.core.serialization.decoder.BaseDecoder.decodeBooleanElement"]},{"name":"open override fun decodeBooleanElement(descriptor: SerialDescriptor, index: Int): Boolean","description":"dev.shibasis.flatinvoker.core.serialization.decoder.CallTraceDecoder.decodeBooleanElement","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.decoder/-call-trace-decoder/decode-boolean-element.html","searchKeys":["decodeBooleanElement","open override fun decodeBooleanElement(descriptor: SerialDescriptor, index: Int): Boolean","dev.shibasis.flatinvoker.core.serialization.decoder.CallTraceDecoder.decodeBooleanElement"]},{"name":"open override fun decodeBooleanElement(descriptor: SerialDescriptor, index: Int): Boolean","description":"dev.shibasis.flatinvoker.core.serialization.decoder.FlexDecoder.decodeBooleanElement","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.decoder/-flex-decoder/decode-boolean-element.html","searchKeys":["decodeBooleanElement","open override fun decodeBooleanElement(descriptor: SerialDescriptor, index: Int): Boolean","dev.shibasis.flatinvoker.core.serialization.decoder.FlexDecoder.decodeBooleanElement"]},{"name":"open override fun decodeByte(): Byte","description":"dev.shibasis.flatinvoker.core.serialization.decoder.BaseDecoder.decodeByte","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.decoder/-base-decoder/decode-byte.html","searchKeys":["decodeByte","open override fun decodeByte(): Byte","dev.shibasis.flatinvoker.core.serialization.decoder.BaseDecoder.decodeByte"]},{"name":"open override fun decodeByte(): Byte","description":"dev.shibasis.flatinvoker.core.serialization.decoder.CallTraceDecoder.decodeByte","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.decoder/-call-trace-decoder/decode-byte.html","searchKeys":["decodeByte","open override fun decodeByte(): Byte","dev.shibasis.flatinvoker.core.serialization.decoder.CallTraceDecoder.decodeByte"]},{"name":"open override fun decodeByte(): Byte","description":"dev.shibasis.flatinvoker.core.serialization.decoder.FlexDecoder.decodeByte","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.decoder/-flex-decoder/decode-byte.html","searchKeys":["decodeByte","open override fun decodeByte(): Byte","dev.shibasis.flatinvoker.core.serialization.decoder.FlexDecoder.decodeByte"]},{"name":"open override fun decodeByteElement(descriptor: SerialDescriptor, index: Int): Byte","description":"dev.shibasis.flatinvoker.core.serialization.decoder.BaseDecoder.decodeByteElement","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.decoder/-base-decoder/decode-byte-element.html","searchKeys":["decodeByteElement","open override fun decodeByteElement(descriptor: SerialDescriptor, index: Int): Byte","dev.shibasis.flatinvoker.core.serialization.decoder.BaseDecoder.decodeByteElement"]},{"name":"open override fun decodeByteElement(descriptor: SerialDescriptor, index: Int): Byte","description":"dev.shibasis.flatinvoker.core.serialization.decoder.CallTraceDecoder.decodeByteElement","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.decoder/-call-trace-decoder/decode-byte-element.html","searchKeys":["decodeByteElement","open override fun decodeByteElement(descriptor: SerialDescriptor, index: Int): Byte","dev.shibasis.flatinvoker.core.serialization.decoder.CallTraceDecoder.decodeByteElement"]},{"name":"open override fun decodeByteElement(descriptor: SerialDescriptor, index: Int): Byte","description":"dev.shibasis.flatinvoker.core.serialization.decoder.FlexDecoder.decodeByteElement","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.decoder/-flex-decoder/decode-byte-element.html","searchKeys":["decodeByteElement","open override fun decodeByteElement(descriptor: SerialDescriptor, index: Int): Byte","dev.shibasis.flatinvoker.core.serialization.decoder.FlexDecoder.decodeByteElement"]},{"name":"open override fun decodeChar(): Char","description":"dev.shibasis.flatinvoker.core.serialization.decoder.BaseDecoder.decodeChar","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.decoder/-base-decoder/decode-char.html","searchKeys":["decodeChar","open override fun decodeChar(): Char","dev.shibasis.flatinvoker.core.serialization.decoder.BaseDecoder.decodeChar"]},{"name":"open override fun decodeChar(): Char","description":"dev.shibasis.flatinvoker.core.serialization.decoder.CallTraceDecoder.decodeChar","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.decoder/-call-trace-decoder/decode-char.html","searchKeys":["decodeChar","open override fun decodeChar(): Char","dev.shibasis.flatinvoker.core.serialization.decoder.CallTraceDecoder.decodeChar"]},{"name":"open override fun decodeChar(): Char","description":"dev.shibasis.flatinvoker.core.serialization.decoder.FlexDecoder.decodeChar","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.decoder/-flex-decoder/decode-char.html","searchKeys":["decodeChar","open override fun decodeChar(): Char","dev.shibasis.flatinvoker.core.serialization.decoder.FlexDecoder.decodeChar"]},{"name":"open override fun decodeCharElement(descriptor: SerialDescriptor, index: Int): Char","description":"dev.shibasis.flatinvoker.core.serialization.decoder.BaseDecoder.decodeCharElement","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.decoder/-base-decoder/decode-char-element.html","searchKeys":["decodeCharElement","open override fun decodeCharElement(descriptor: SerialDescriptor, index: Int): Char","dev.shibasis.flatinvoker.core.serialization.decoder.BaseDecoder.decodeCharElement"]},{"name":"open override fun decodeCharElement(descriptor: SerialDescriptor, index: Int): Char","description":"dev.shibasis.flatinvoker.core.serialization.decoder.CallTraceDecoder.decodeCharElement","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.decoder/-call-trace-decoder/decode-char-element.html","searchKeys":["decodeCharElement","open override fun decodeCharElement(descriptor: SerialDescriptor, index: Int): Char","dev.shibasis.flatinvoker.core.serialization.decoder.CallTraceDecoder.decodeCharElement"]},{"name":"open override fun decodeCharElement(descriptor: SerialDescriptor, index: Int): Char","description":"dev.shibasis.flatinvoker.core.serialization.decoder.FlexDecoder.decodeCharElement","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.decoder/-flex-decoder/decode-char-element.html","searchKeys":["decodeCharElement","open override fun decodeCharElement(descriptor: SerialDescriptor, index: Int): Char","dev.shibasis.flatinvoker.core.serialization.decoder.FlexDecoder.decodeCharElement"]},{"name":"open override fun decodeCollectionSize(descriptor: SerialDescriptor): Int","description":"dev.shibasis.flatinvoker.core.serialization.decoder.CallTraceDecoder.decodeCollectionSize","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.decoder/-call-trace-decoder/decode-collection-size.html","searchKeys":["decodeCollectionSize","open override fun decodeCollectionSize(descriptor: SerialDescriptor): Int","dev.shibasis.flatinvoker.core.serialization.decoder.CallTraceDecoder.decodeCollectionSize"]},{"name":"open override fun decodeCollectionSize(descriptor: SerialDescriptor): Int","description":"dev.shibasis.flatinvoker.core.serialization.decoder.FlexDecoder.decodeCollectionSize","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.decoder/-flex-decoder/decode-collection-size.html","searchKeys":["decodeCollectionSize","open override fun decodeCollectionSize(descriptor: SerialDescriptor): Int","dev.shibasis.flatinvoker.core.serialization.decoder.FlexDecoder.decodeCollectionSize"]},{"name":"open override fun decodeDouble(): Double","description":"dev.shibasis.flatinvoker.core.serialization.decoder.BaseDecoder.decodeDouble","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.decoder/-base-decoder/decode-double.html","searchKeys":["decodeDouble","open override fun decodeDouble(): Double","dev.shibasis.flatinvoker.core.serialization.decoder.BaseDecoder.decodeDouble"]},{"name":"open override fun decodeDouble(): Double","description":"dev.shibasis.flatinvoker.core.serialization.decoder.CallTraceDecoder.decodeDouble","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.decoder/-call-trace-decoder/decode-double.html","searchKeys":["decodeDouble","open override fun decodeDouble(): Double","dev.shibasis.flatinvoker.core.serialization.decoder.CallTraceDecoder.decodeDouble"]},{"name":"open override fun decodeDouble(): Double","description":"dev.shibasis.flatinvoker.core.serialization.decoder.FlexDecoder.decodeDouble","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.decoder/-flex-decoder/decode-double.html","searchKeys":["decodeDouble","open override fun decodeDouble(): Double","dev.shibasis.flatinvoker.core.serialization.decoder.FlexDecoder.decodeDouble"]},{"name":"open override fun decodeDoubleElement(descriptor: SerialDescriptor, index: Int): Double","description":"dev.shibasis.flatinvoker.core.serialization.decoder.BaseDecoder.decodeDoubleElement","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.decoder/-base-decoder/decode-double-element.html","searchKeys":["decodeDoubleElement","open override fun decodeDoubleElement(descriptor: SerialDescriptor, index: Int): Double","dev.shibasis.flatinvoker.core.serialization.decoder.BaseDecoder.decodeDoubleElement"]},{"name":"open override fun decodeDoubleElement(descriptor: SerialDescriptor, index: Int): Double","description":"dev.shibasis.flatinvoker.core.serialization.decoder.CallTraceDecoder.decodeDoubleElement","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.decoder/-call-trace-decoder/decode-double-element.html","searchKeys":["decodeDoubleElement","open override fun decodeDoubleElement(descriptor: SerialDescriptor, index: Int): Double","dev.shibasis.flatinvoker.core.serialization.decoder.CallTraceDecoder.decodeDoubleElement"]},{"name":"open override fun decodeDoubleElement(descriptor: SerialDescriptor, index: Int): Double","description":"dev.shibasis.flatinvoker.core.serialization.decoder.FlexDecoder.decodeDoubleElement","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.decoder/-flex-decoder/decode-double-element.html","searchKeys":["decodeDoubleElement","open override fun decodeDoubleElement(descriptor: SerialDescriptor, index: Int): Double","dev.shibasis.flatinvoker.core.serialization.decoder.FlexDecoder.decodeDoubleElement"]},{"name":"open override fun decodeElementIndex(descriptor: SerialDescriptor): Int","description":"dev.shibasis.flatinvoker.core.serialization.decoder.BaseDecoder.decodeElementIndex","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.decoder/-base-decoder/decode-element-index.html","searchKeys":["decodeElementIndex","open override fun decodeElementIndex(descriptor: SerialDescriptor): Int","dev.shibasis.flatinvoker.core.serialization.decoder.BaseDecoder.decodeElementIndex"]},{"name":"open override fun decodeElementIndex(descriptor: SerialDescriptor): Int","description":"dev.shibasis.flatinvoker.core.serialization.decoder.CallTraceDecoder.decodeElementIndex","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.decoder/-call-trace-decoder/decode-element-index.html","searchKeys":["decodeElementIndex","open override fun decodeElementIndex(descriptor: SerialDescriptor): Int","dev.shibasis.flatinvoker.core.serialization.decoder.CallTraceDecoder.decodeElementIndex"]},{"name":"open override fun decodeElementIndex(descriptor: SerialDescriptor): Int","description":"dev.shibasis.flatinvoker.core.serialization.decoder.FlexDecoder.decodeElementIndex","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.decoder/-flex-decoder/decode-element-index.html","searchKeys":["decodeElementIndex","open override fun decodeElementIndex(descriptor: SerialDescriptor): Int","dev.shibasis.flatinvoker.core.serialization.decoder.FlexDecoder.decodeElementIndex"]},{"name":"open override fun decodeEnum(enumDescriptor: SerialDescriptor): Int","description":"dev.shibasis.flatinvoker.core.serialization.decoder.BaseDecoder.decodeEnum","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.decoder/-base-decoder/decode-enum.html","searchKeys":["decodeEnum","open override fun decodeEnum(enumDescriptor: SerialDescriptor): Int","dev.shibasis.flatinvoker.core.serialization.decoder.BaseDecoder.decodeEnum"]},{"name":"open override fun decodeEnum(enumDescriptor: SerialDescriptor): Int","description":"dev.shibasis.flatinvoker.core.serialization.decoder.CallTraceDecoder.decodeEnum","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.decoder/-call-trace-decoder/decode-enum.html","searchKeys":["decodeEnum","open override fun decodeEnum(enumDescriptor: SerialDescriptor): Int","dev.shibasis.flatinvoker.core.serialization.decoder.CallTraceDecoder.decodeEnum"]},{"name":"open override fun decodeEnum(enumDescriptor: SerialDescriptor): Int","description":"dev.shibasis.flatinvoker.core.serialization.decoder.FlexDecoder.decodeEnum","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.decoder/-flex-decoder/decode-enum.html","searchKeys":["decodeEnum","open override fun decodeEnum(enumDescriptor: SerialDescriptor): Int","dev.shibasis.flatinvoker.core.serialization.decoder.FlexDecoder.decodeEnum"]},{"name":"open override fun decodeFloat(): Float","description":"dev.shibasis.flatinvoker.core.serialization.decoder.BaseDecoder.decodeFloat","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.decoder/-base-decoder/decode-float.html","searchKeys":["decodeFloat","open override fun decodeFloat(): Float","dev.shibasis.flatinvoker.core.serialization.decoder.BaseDecoder.decodeFloat"]},{"name":"open override fun decodeFloat(): Float","description":"dev.shibasis.flatinvoker.core.serialization.decoder.CallTraceDecoder.decodeFloat","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.decoder/-call-trace-decoder/decode-float.html","searchKeys":["decodeFloat","open override fun decodeFloat(): Float","dev.shibasis.flatinvoker.core.serialization.decoder.CallTraceDecoder.decodeFloat"]},{"name":"open override fun decodeFloat(): Float","description":"dev.shibasis.flatinvoker.core.serialization.decoder.FlexDecoder.decodeFloat","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.decoder/-flex-decoder/decode-float.html","searchKeys":["decodeFloat","open override fun decodeFloat(): Float","dev.shibasis.flatinvoker.core.serialization.decoder.FlexDecoder.decodeFloat"]},{"name":"open override fun decodeFloatElement(descriptor: SerialDescriptor, index: Int): Float","description":"dev.shibasis.flatinvoker.core.serialization.decoder.BaseDecoder.decodeFloatElement","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.decoder/-base-decoder/decode-float-element.html","searchKeys":["decodeFloatElement","open override fun decodeFloatElement(descriptor: SerialDescriptor, index: Int): Float","dev.shibasis.flatinvoker.core.serialization.decoder.BaseDecoder.decodeFloatElement"]},{"name":"open override fun decodeFloatElement(descriptor: SerialDescriptor, index: Int): Float","description":"dev.shibasis.flatinvoker.core.serialization.decoder.CallTraceDecoder.decodeFloatElement","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.decoder/-call-trace-decoder/decode-float-element.html","searchKeys":["decodeFloatElement","open override fun decodeFloatElement(descriptor: SerialDescriptor, index: Int): Float","dev.shibasis.flatinvoker.core.serialization.decoder.CallTraceDecoder.decodeFloatElement"]},{"name":"open override fun decodeFloatElement(descriptor: SerialDescriptor, index: Int): Float","description":"dev.shibasis.flatinvoker.core.serialization.decoder.FlexDecoder.decodeFloatElement","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.decoder/-flex-decoder/decode-float-element.html","searchKeys":["decodeFloatElement","open override fun decodeFloatElement(descriptor: SerialDescriptor, index: Int): Float","dev.shibasis.flatinvoker.core.serialization.decoder.FlexDecoder.decodeFloatElement"]},{"name":"open override fun decodeInline(descriptor: SerialDescriptor): Decoder","description":"dev.shibasis.flatinvoker.core.serialization.decoder.BaseDecoder.decodeInline","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.decoder/-base-decoder/decode-inline.html","searchKeys":["decodeInline","open override fun decodeInline(descriptor: SerialDescriptor): Decoder","dev.shibasis.flatinvoker.core.serialization.decoder.BaseDecoder.decodeInline"]},{"name":"open override fun decodeInline(descriptor: SerialDescriptor): Decoder","description":"dev.shibasis.flatinvoker.core.serialization.decoder.CallTraceDecoder.decodeInline","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.decoder/-call-trace-decoder/decode-inline.html","searchKeys":["decodeInline","open override fun decodeInline(descriptor: SerialDescriptor): Decoder","dev.shibasis.flatinvoker.core.serialization.decoder.CallTraceDecoder.decodeInline"]},{"name":"open override fun decodeInline(descriptor: SerialDescriptor): Decoder","description":"dev.shibasis.flatinvoker.core.serialization.decoder.FlexDecoder.decodeInline","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.decoder/-flex-decoder/decode-inline.html","searchKeys":["decodeInline","open override fun decodeInline(descriptor: SerialDescriptor): Decoder","dev.shibasis.flatinvoker.core.serialization.decoder.FlexDecoder.decodeInline"]},{"name":"open override fun decodeInlineElement(descriptor: SerialDescriptor, index: Int): Decoder","description":"dev.shibasis.flatinvoker.core.serialization.decoder.BaseDecoder.decodeInlineElement","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.decoder/-base-decoder/decode-inline-element.html","searchKeys":["decodeInlineElement","open override fun decodeInlineElement(descriptor: SerialDescriptor, index: Int): Decoder","dev.shibasis.flatinvoker.core.serialization.decoder.BaseDecoder.decodeInlineElement"]},{"name":"open override fun decodeInlineElement(descriptor: SerialDescriptor, index: Int): Decoder","description":"dev.shibasis.flatinvoker.core.serialization.decoder.CallTraceDecoder.decodeInlineElement","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.decoder/-call-trace-decoder/decode-inline-element.html","searchKeys":["decodeInlineElement","open override fun decodeInlineElement(descriptor: SerialDescriptor, index: Int): Decoder","dev.shibasis.flatinvoker.core.serialization.decoder.CallTraceDecoder.decodeInlineElement"]},{"name":"open override fun decodeInlineElement(descriptor: SerialDescriptor, index: Int): Decoder","description":"dev.shibasis.flatinvoker.core.serialization.decoder.FlexDecoder.decodeInlineElement","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.decoder/-flex-decoder/decode-inline-element.html","searchKeys":["decodeInlineElement","open override fun decodeInlineElement(descriptor: SerialDescriptor, index: Int): Decoder","dev.shibasis.flatinvoker.core.serialization.decoder.FlexDecoder.decodeInlineElement"]},{"name":"open override fun decodeInt(): Int","description":"dev.shibasis.flatinvoker.core.serialization.decoder.BaseDecoder.decodeInt","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.decoder/-base-decoder/decode-int.html","searchKeys":["decodeInt","open override fun decodeInt(): Int","dev.shibasis.flatinvoker.core.serialization.decoder.BaseDecoder.decodeInt"]},{"name":"open override fun decodeInt(): Int","description":"dev.shibasis.flatinvoker.core.serialization.decoder.CallTraceDecoder.decodeInt","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.decoder/-call-trace-decoder/decode-int.html","searchKeys":["decodeInt","open override fun decodeInt(): Int","dev.shibasis.flatinvoker.core.serialization.decoder.CallTraceDecoder.decodeInt"]},{"name":"open override fun decodeInt(): Int","description":"dev.shibasis.flatinvoker.core.serialization.decoder.FlexDecoder.decodeInt","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.decoder/-flex-decoder/decode-int.html","searchKeys":["decodeInt","open override fun decodeInt(): Int","dev.shibasis.flatinvoker.core.serialization.decoder.FlexDecoder.decodeInt"]},{"name":"open override fun decodeIntElement(descriptor: SerialDescriptor, index: Int): Int","description":"dev.shibasis.flatinvoker.core.serialization.decoder.BaseDecoder.decodeIntElement","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.decoder/-base-decoder/decode-int-element.html","searchKeys":["decodeIntElement","open override fun decodeIntElement(descriptor: SerialDescriptor, index: Int): Int","dev.shibasis.flatinvoker.core.serialization.decoder.BaseDecoder.decodeIntElement"]},{"name":"open override fun decodeIntElement(descriptor: SerialDescriptor, index: Int): Int","description":"dev.shibasis.flatinvoker.core.serialization.decoder.CallTraceDecoder.decodeIntElement","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.decoder/-call-trace-decoder/decode-int-element.html","searchKeys":["decodeIntElement","open override fun decodeIntElement(descriptor: SerialDescriptor, index: Int): Int","dev.shibasis.flatinvoker.core.serialization.decoder.CallTraceDecoder.decodeIntElement"]},{"name":"open override fun decodeIntElement(descriptor: SerialDescriptor, index: Int): Int","description":"dev.shibasis.flatinvoker.core.serialization.decoder.FlexDecoder.decodeIntElement","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.decoder/-flex-decoder/decode-int-element.html","searchKeys":["decodeIntElement","open override fun decodeIntElement(descriptor: SerialDescriptor, index: Int): Int","dev.shibasis.flatinvoker.core.serialization.decoder.FlexDecoder.decodeIntElement"]},{"name":"open override fun decodeLong(): Long","description":"dev.shibasis.flatinvoker.core.serialization.decoder.BaseDecoder.decodeLong","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.decoder/-base-decoder/decode-long.html","searchKeys":["decodeLong","open override fun decodeLong(): Long","dev.shibasis.flatinvoker.core.serialization.decoder.BaseDecoder.decodeLong"]},{"name":"open override fun decodeLong(): Long","description":"dev.shibasis.flatinvoker.core.serialization.decoder.CallTraceDecoder.decodeLong","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.decoder/-call-trace-decoder/decode-long.html","searchKeys":["decodeLong","open override fun decodeLong(): Long","dev.shibasis.flatinvoker.core.serialization.decoder.CallTraceDecoder.decodeLong"]},{"name":"open override fun decodeLong(): Long","description":"dev.shibasis.flatinvoker.core.serialization.decoder.FlexDecoder.decodeLong","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.decoder/-flex-decoder/decode-long.html","searchKeys":["decodeLong","open override fun decodeLong(): Long","dev.shibasis.flatinvoker.core.serialization.decoder.FlexDecoder.decodeLong"]},{"name":"open override fun decodeLongElement(descriptor: SerialDescriptor, index: Int): Long","description":"dev.shibasis.flatinvoker.core.serialization.decoder.BaseDecoder.decodeLongElement","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.decoder/-base-decoder/decode-long-element.html","searchKeys":["decodeLongElement","open override fun decodeLongElement(descriptor: SerialDescriptor, index: Int): Long","dev.shibasis.flatinvoker.core.serialization.decoder.BaseDecoder.decodeLongElement"]},{"name":"open override fun decodeLongElement(descriptor: SerialDescriptor, index: Int): Long","description":"dev.shibasis.flatinvoker.core.serialization.decoder.CallTraceDecoder.decodeLongElement","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.decoder/-call-trace-decoder/decode-long-element.html","searchKeys":["decodeLongElement","open override fun decodeLongElement(descriptor: SerialDescriptor, index: Int): Long","dev.shibasis.flatinvoker.core.serialization.decoder.CallTraceDecoder.decodeLongElement"]},{"name":"open override fun decodeLongElement(descriptor: SerialDescriptor, index: Int): Long","description":"dev.shibasis.flatinvoker.core.serialization.decoder.FlexDecoder.decodeLongElement","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.decoder/-flex-decoder/decode-long-element.html","searchKeys":["decodeLongElement","open override fun decodeLongElement(descriptor: SerialDescriptor, index: Int): Long","dev.shibasis.flatinvoker.core.serialization.decoder.FlexDecoder.decodeLongElement"]},{"name":"open override fun decodeNotNullMark(): Boolean","description":"dev.shibasis.flatinvoker.core.serialization.decoder.BaseDecoder.decodeNotNullMark","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.decoder/-base-decoder/decode-not-null-mark.html","searchKeys":["decodeNotNullMark","open override fun decodeNotNullMark(): Boolean","dev.shibasis.flatinvoker.core.serialization.decoder.BaseDecoder.decodeNotNullMark"]},{"name":"open override fun decodeNotNullMark(): Boolean","description":"dev.shibasis.flatinvoker.core.serialization.decoder.CallTraceDecoder.decodeNotNullMark","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.decoder/-call-trace-decoder/decode-not-null-mark.html","searchKeys":["decodeNotNullMark","open override fun decodeNotNullMark(): Boolean","dev.shibasis.flatinvoker.core.serialization.decoder.CallTraceDecoder.decodeNotNullMark"]},{"name":"open override fun decodeNotNullMark(): Boolean","description":"dev.shibasis.flatinvoker.core.serialization.decoder.FlexDecoder.decodeNotNullMark","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.decoder/-flex-decoder/decode-not-null-mark.html","searchKeys":["decodeNotNullMark","open override fun decodeNotNullMark(): Boolean","dev.shibasis.flatinvoker.core.serialization.decoder.FlexDecoder.decodeNotNullMark"]},{"name":"open override fun decodeNull(): Nothing?","description":"dev.shibasis.flatinvoker.core.serialization.decoder.BaseDecoder.decodeNull","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.decoder/-base-decoder/decode-null.html","searchKeys":["decodeNull","open override fun decodeNull(): Nothing?","dev.shibasis.flatinvoker.core.serialization.decoder.BaseDecoder.decodeNull"]},{"name":"open override fun decodeNull(): Nothing?","description":"dev.shibasis.flatinvoker.core.serialization.decoder.CallTraceDecoder.decodeNull","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.decoder/-call-trace-decoder/decode-null.html","searchKeys":["decodeNull","open override fun decodeNull(): Nothing?","dev.shibasis.flatinvoker.core.serialization.decoder.CallTraceDecoder.decodeNull"]},{"name":"open override fun decodeNull(): Nothing?","description":"dev.shibasis.flatinvoker.core.serialization.decoder.FlexDecoder.decodeNull","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.decoder/-flex-decoder/decode-null.html","searchKeys":["decodeNull","open override fun decodeNull(): Nothing?","dev.shibasis.flatinvoker.core.serialization.decoder.FlexDecoder.decodeNull"]},{"name":"open override fun decodeSequentially(): Boolean","description":"dev.shibasis.flatinvoker.core.serialization.decoder.CallTraceDecoder.decodeSequentially","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.decoder/-call-trace-decoder/decode-sequentially.html","searchKeys":["decodeSequentially","open override fun decodeSequentially(): Boolean","dev.shibasis.flatinvoker.core.serialization.decoder.CallTraceDecoder.decodeSequentially"]},{"name":"open override fun decodeSequentially(): Boolean","description":"dev.shibasis.flatinvoker.core.serialization.decoder.FlexDecoder.decodeSequentially","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.decoder/-flex-decoder/decode-sequentially.html","searchKeys":["decodeSequentially","open override fun decodeSequentially(): Boolean","dev.shibasis.flatinvoker.core.serialization.decoder.FlexDecoder.decodeSequentially"]},{"name":"open override fun decodeShort(): Short","description":"dev.shibasis.flatinvoker.core.serialization.decoder.BaseDecoder.decodeShort","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.decoder/-base-decoder/decode-short.html","searchKeys":["decodeShort","open override fun decodeShort(): Short","dev.shibasis.flatinvoker.core.serialization.decoder.BaseDecoder.decodeShort"]},{"name":"open override fun decodeShort(): Short","description":"dev.shibasis.flatinvoker.core.serialization.decoder.CallTraceDecoder.decodeShort","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.decoder/-call-trace-decoder/decode-short.html","searchKeys":["decodeShort","open override fun decodeShort(): Short","dev.shibasis.flatinvoker.core.serialization.decoder.CallTraceDecoder.decodeShort"]},{"name":"open override fun decodeShort(): Short","description":"dev.shibasis.flatinvoker.core.serialization.decoder.FlexDecoder.decodeShort","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.decoder/-flex-decoder/decode-short.html","searchKeys":["decodeShort","open override fun decodeShort(): Short","dev.shibasis.flatinvoker.core.serialization.decoder.FlexDecoder.decodeShort"]},{"name":"open override fun decodeShortElement(descriptor: SerialDescriptor, index: Int): Short","description":"dev.shibasis.flatinvoker.core.serialization.decoder.BaseDecoder.decodeShortElement","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.decoder/-base-decoder/decode-short-element.html","searchKeys":["decodeShortElement","open override fun decodeShortElement(descriptor: SerialDescriptor, index: Int): Short","dev.shibasis.flatinvoker.core.serialization.decoder.BaseDecoder.decodeShortElement"]},{"name":"open override fun decodeShortElement(descriptor: SerialDescriptor, index: Int): Short","description":"dev.shibasis.flatinvoker.core.serialization.decoder.CallTraceDecoder.decodeShortElement","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.decoder/-call-trace-decoder/decode-short-element.html","searchKeys":["decodeShortElement","open override fun decodeShortElement(descriptor: SerialDescriptor, index: Int): Short","dev.shibasis.flatinvoker.core.serialization.decoder.CallTraceDecoder.decodeShortElement"]},{"name":"open override fun decodeShortElement(descriptor: SerialDescriptor, index: Int): Short","description":"dev.shibasis.flatinvoker.core.serialization.decoder.FlexDecoder.decodeShortElement","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.decoder/-flex-decoder/decode-short-element.html","searchKeys":["decodeShortElement","open override fun decodeShortElement(descriptor: SerialDescriptor, index: Int): Short","dev.shibasis.flatinvoker.core.serialization.decoder.FlexDecoder.decodeShortElement"]},{"name":"open override fun decodeString(): String","description":"dev.shibasis.flatinvoker.core.serialization.decoder.BaseDecoder.decodeString","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.decoder/-base-decoder/decode-string.html","searchKeys":["decodeString","open override fun decodeString(): String","dev.shibasis.flatinvoker.core.serialization.decoder.BaseDecoder.decodeString"]},{"name":"open override fun decodeString(): String","description":"dev.shibasis.flatinvoker.core.serialization.decoder.CallTraceDecoder.decodeString","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.decoder/-call-trace-decoder/decode-string.html","searchKeys":["decodeString","open override fun decodeString(): String","dev.shibasis.flatinvoker.core.serialization.decoder.CallTraceDecoder.decodeString"]},{"name":"open override fun decodeString(): String","description":"dev.shibasis.flatinvoker.core.serialization.decoder.FlexDecoder.decodeString","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.decoder/-flex-decoder/decode-string.html","searchKeys":["decodeString","open override fun decodeString(): String","dev.shibasis.flatinvoker.core.serialization.decoder.FlexDecoder.decodeString"]},{"name":"open override fun decodeStringElement(descriptor: SerialDescriptor, index: Int): String","description":"dev.shibasis.flatinvoker.core.serialization.decoder.BaseDecoder.decodeStringElement","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.decoder/-base-decoder/decode-string-element.html","searchKeys":["decodeStringElement","open override fun decodeStringElement(descriptor: SerialDescriptor, index: Int): String","dev.shibasis.flatinvoker.core.serialization.decoder.BaseDecoder.decodeStringElement"]},{"name":"open override fun decodeStringElement(descriptor: SerialDescriptor, index: Int): String","description":"dev.shibasis.flatinvoker.core.serialization.decoder.CallTraceDecoder.decodeStringElement","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.decoder/-call-trace-decoder/decode-string-element.html","searchKeys":["decodeStringElement","open override fun decodeStringElement(descriptor: SerialDescriptor, index: Int): String","dev.shibasis.flatinvoker.core.serialization.decoder.CallTraceDecoder.decodeStringElement"]},{"name":"open override fun decodeStringElement(descriptor: SerialDescriptor, index: Int): String","description":"dev.shibasis.flatinvoker.core.serialization.decoder.FlexDecoder.decodeStringElement","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.decoder/-flex-decoder/decode-string-element.html","searchKeys":["decodeStringElement","open override fun decodeStringElement(descriptor: SerialDescriptor, index: Int): String","dev.shibasis.flatinvoker.core.serialization.decoder.FlexDecoder.decodeStringElement"]},{"name":"open override fun encodeBoolean(value: Boolean)","description":"dev.shibasis.flatinvoker.core.serialization.encoder.FlexEncoderHalfMigrated.encodeBoolean","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.encoder/-flex-encoder-half-migrated/encode-boolean.html","searchKeys":["encodeBoolean","open override fun encodeBoolean(value: Boolean)","dev.shibasis.flatinvoker.core.serialization.encoder.FlexEncoderHalfMigrated.encodeBoolean"]},{"name":"open override fun encodeBooleanElement(descriptor: SerialDescriptor, index: Int, value: Boolean)","description":"dev.shibasis.flatinvoker.core.serialization.encoder.FlexEncoderHalfMigrated.encodeBooleanElement","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.encoder/-flex-encoder-half-migrated/encode-boolean-element.html","searchKeys":["encodeBooleanElement","open override fun encodeBooleanElement(descriptor: SerialDescriptor, index: Int, value: Boolean)","dev.shibasis.flatinvoker.core.serialization.encoder.FlexEncoderHalfMigrated.encodeBooleanElement"]},{"name":"open override fun encodeByte(value: Byte)","description":"dev.shibasis.flatinvoker.core.serialization.encoder.FlexEncoderHalfMigrated.encodeByte","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.encoder/-flex-encoder-half-migrated/encode-byte.html","searchKeys":["encodeByte","open override fun encodeByte(value: Byte)","dev.shibasis.flatinvoker.core.serialization.encoder.FlexEncoderHalfMigrated.encodeByte"]},{"name":"open override fun encodeByteElement(descriptor: SerialDescriptor, index: Int, value: Byte)","description":"dev.shibasis.flatinvoker.core.serialization.encoder.FlexEncoderHalfMigrated.encodeByteElement","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.encoder/-flex-encoder-half-migrated/encode-byte-element.html","searchKeys":["encodeByteElement","open override fun encodeByteElement(descriptor: SerialDescriptor, index: Int, value: Byte)","dev.shibasis.flatinvoker.core.serialization.encoder.FlexEncoderHalfMigrated.encodeByteElement"]},{"name":"open override fun encodeChar(value: Char)","description":"dev.shibasis.flatinvoker.core.serialization.encoder.FlexEncoderHalfMigrated.encodeChar","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.encoder/-flex-encoder-half-migrated/encode-char.html","searchKeys":["encodeChar","open override fun encodeChar(value: Char)","dev.shibasis.flatinvoker.core.serialization.encoder.FlexEncoderHalfMigrated.encodeChar"]},{"name":"open override fun encodeCharElement(descriptor: SerialDescriptor, index: Int, value: Char)","description":"dev.shibasis.flatinvoker.core.serialization.encoder.FlexEncoderHalfMigrated.encodeCharElement","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.encoder/-flex-encoder-half-migrated/encode-char-element.html","searchKeys":["encodeCharElement","open override fun encodeCharElement(descriptor: SerialDescriptor, index: Int, value: Char)","dev.shibasis.flatinvoker.core.serialization.encoder.FlexEncoderHalfMigrated.encodeCharElement"]},{"name":"open override fun encodeDouble(value: Double)","description":"dev.shibasis.flatinvoker.core.serialization.encoder.FlexEncoderHalfMigrated.encodeDouble","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.encoder/-flex-encoder-half-migrated/encode-double.html","searchKeys":["encodeDouble","open override fun encodeDouble(value: Double)","dev.shibasis.flatinvoker.core.serialization.encoder.FlexEncoderHalfMigrated.encodeDouble"]},{"name":"open override fun encodeDoubleElement(descriptor: SerialDescriptor, index: Int, value: Double)","description":"dev.shibasis.flatinvoker.core.serialization.encoder.FlexEncoderHalfMigrated.encodeDoubleElement","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.encoder/-flex-encoder-half-migrated/encode-double-element.html","searchKeys":["encodeDoubleElement","open override fun encodeDoubleElement(descriptor: SerialDescriptor, index: Int, value: Double)","dev.shibasis.flatinvoker.core.serialization.encoder.FlexEncoderHalfMigrated.encodeDoubleElement"]},{"name":"open override fun encodeElement(descriptor: SerialDescriptor, index: Int): Boolean","description":"dev.shibasis.flatinvoker.core.serialization.encoder.FlexEncoder.encodeElement","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.encoder/-flex-encoder/encode-element.html","searchKeys":["encodeElement","open override fun encodeElement(descriptor: SerialDescriptor, index: Int): Boolean","dev.shibasis.flatinvoker.core.serialization.encoder.FlexEncoder.encodeElement"]},{"name":"open override fun encodeEnum(enumDescriptor: SerialDescriptor, index: Int)","description":"dev.shibasis.flatinvoker.core.serialization.encoder.FlexEncoderHalfMigrated.encodeEnum","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.encoder/-flex-encoder-half-migrated/encode-enum.html","searchKeys":["encodeEnum","open override fun encodeEnum(enumDescriptor: SerialDescriptor, index: Int)","dev.shibasis.flatinvoker.core.serialization.encoder.FlexEncoderHalfMigrated.encodeEnum"]},{"name":"open override fun encodeFloat(value: Float)","description":"dev.shibasis.flatinvoker.core.serialization.encoder.FlexEncoderHalfMigrated.encodeFloat","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.encoder/-flex-encoder-half-migrated/encode-float.html","searchKeys":["encodeFloat","open override fun encodeFloat(value: Float)","dev.shibasis.flatinvoker.core.serialization.encoder.FlexEncoderHalfMigrated.encodeFloat"]},{"name":"open override fun encodeFloatElement(descriptor: SerialDescriptor, index: Int, value: Float)","description":"dev.shibasis.flatinvoker.core.serialization.encoder.FlexEncoderHalfMigrated.encodeFloatElement","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.encoder/-flex-encoder-half-migrated/encode-float-element.html","searchKeys":["encodeFloatElement","open override fun encodeFloatElement(descriptor: SerialDescriptor, index: Int, value: Float)","dev.shibasis.flatinvoker.core.serialization.encoder.FlexEncoderHalfMigrated.encodeFloatElement"]},{"name":"open override fun encodeInline(descriptor: SerialDescriptor): Encoder","description":"dev.shibasis.flatinvoker.core.serialization.encoder.FlexEncoderHalfMigrated.encodeInline","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.encoder/-flex-encoder-half-migrated/encode-inline.html","searchKeys":["encodeInline","open override fun encodeInline(descriptor: SerialDescriptor): Encoder","dev.shibasis.flatinvoker.core.serialization.encoder.FlexEncoderHalfMigrated.encodeInline"]},{"name":"open override fun encodeInlineElement(descriptor: SerialDescriptor, index: Int): Encoder","description":"dev.shibasis.flatinvoker.core.serialization.encoder.FlexEncoderHalfMigrated.encodeInlineElement","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.encoder/-flex-encoder-half-migrated/encode-inline-element.html","searchKeys":["encodeInlineElement","open override fun encodeInlineElement(descriptor: SerialDescriptor, index: Int): Encoder","dev.shibasis.flatinvoker.core.serialization.encoder.FlexEncoderHalfMigrated.encodeInlineElement"]},{"name":"open override fun encodeInt(value: Int)","description":"dev.shibasis.flatinvoker.core.serialization.encoder.FlexEncoderHalfMigrated.encodeInt","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.encoder/-flex-encoder-half-migrated/encode-int.html","searchKeys":["encodeInt","open override fun encodeInt(value: Int)","dev.shibasis.flatinvoker.core.serialization.encoder.FlexEncoderHalfMigrated.encodeInt"]},{"name":"open override fun encodeIntElement(descriptor: SerialDescriptor, index: Int, value: Int)","description":"dev.shibasis.flatinvoker.core.serialization.encoder.FlexEncoderHalfMigrated.encodeIntElement","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.encoder/-flex-encoder-half-migrated/encode-int-element.html","searchKeys":["encodeIntElement","open override fun encodeIntElement(descriptor: SerialDescriptor, index: Int, value: Int)","dev.shibasis.flatinvoker.core.serialization.encoder.FlexEncoderHalfMigrated.encodeIntElement"]},{"name":"open override fun encodeLong(value: Long)","description":"dev.shibasis.flatinvoker.core.serialization.encoder.FlexEncoderHalfMigrated.encodeLong","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.encoder/-flex-encoder-half-migrated/encode-long.html","searchKeys":["encodeLong","open override fun encodeLong(value: Long)","dev.shibasis.flatinvoker.core.serialization.encoder.FlexEncoderHalfMigrated.encodeLong"]},{"name":"open override fun encodeLongElement(descriptor: SerialDescriptor, index: Int, value: Long)","description":"dev.shibasis.flatinvoker.core.serialization.encoder.FlexEncoderHalfMigrated.encodeLongElement","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.encoder/-flex-encoder-half-migrated/encode-long-element.html","searchKeys":["encodeLongElement","open override fun encodeLongElement(descriptor: SerialDescriptor, index: Int, value: Long)","dev.shibasis.flatinvoker.core.serialization.encoder.FlexEncoderHalfMigrated.encodeLongElement"]},{"name":"open override fun encodeNull()","description":"dev.shibasis.flatinvoker.core.serialization.encoder.FlexEncoder.encodeNull","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.encoder/-flex-encoder/encode-null.html","searchKeys":["encodeNull","open override fun encodeNull()","dev.shibasis.flatinvoker.core.serialization.encoder.FlexEncoder.encodeNull"]},{"name":"open override fun encodeNull()","description":"dev.shibasis.flatinvoker.core.serialization.encoder.FlexEncoderHalfMigrated.encodeNull","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.encoder/-flex-encoder-half-migrated/encode-null.html","searchKeys":["encodeNull","open override fun encodeNull()","dev.shibasis.flatinvoker.core.serialization.encoder.FlexEncoderHalfMigrated.encodeNull"]},{"name":"open override fun encodeShort(value: Short)","description":"dev.shibasis.flatinvoker.core.serialization.encoder.FlexEncoderHalfMigrated.encodeShort","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.encoder/-flex-encoder-half-migrated/encode-short.html","searchKeys":["encodeShort","open override fun encodeShort(value: Short)","dev.shibasis.flatinvoker.core.serialization.encoder.FlexEncoderHalfMigrated.encodeShort"]},{"name":"open override fun encodeShortElement(descriptor: SerialDescriptor, index: Int, value: Short)","description":"dev.shibasis.flatinvoker.core.serialization.encoder.FlexEncoderHalfMigrated.encodeShortElement","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.encoder/-flex-encoder-half-migrated/encode-short-element.html","searchKeys":["encodeShortElement","open override fun encodeShortElement(descriptor: SerialDescriptor, index: Int, value: Short)","dev.shibasis.flatinvoker.core.serialization.encoder.FlexEncoderHalfMigrated.encodeShortElement"]},{"name":"open override fun encodeString(value: String)","description":"dev.shibasis.flatinvoker.core.serialization.encoder.FlexEncoderHalfMigrated.encodeString","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.encoder/-flex-encoder-half-migrated/encode-string.html","searchKeys":["encodeString","open override fun encodeString(value: String)","dev.shibasis.flatinvoker.core.serialization.encoder.FlexEncoderHalfMigrated.encodeString"]},{"name":"open override fun encodeStringElement(descriptor: SerialDescriptor, index: Int, value: String)","description":"dev.shibasis.flatinvoker.core.serialization.encoder.FlexEncoderHalfMigrated.encodeStringElement","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.encoder/-flex-encoder-half-migrated/encode-string-element.html","searchKeys":["encodeStringElement","open override fun encodeStringElement(descriptor: SerialDescriptor, index: Int, value: String)","dev.shibasis.flatinvoker.core.serialization.encoder.FlexEncoderHalfMigrated.encodeStringElement"]},{"name":"open override fun encodeValue(value: Any)","description":"dev.shibasis.flatinvoker.core.serialization.encoder.FlexEncoder.encodeValue","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.encoder/-flex-encoder/encode-value.html","searchKeys":["encodeValue","open override fun encodeValue(value: Any)","dev.shibasis.flatinvoker.core.serialization.encoder.FlexEncoder.encodeValue"]},{"name":"open override fun endStructure(descriptor: SerialDescriptor)","description":"dev.shibasis.flatinvoker.core.serialization.decoder.BaseDecoder.endStructure","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.decoder/-base-decoder/end-structure.html","searchKeys":["endStructure","open override fun endStructure(descriptor: SerialDescriptor)","dev.shibasis.flatinvoker.core.serialization.decoder.BaseDecoder.endStructure"]},{"name":"open override fun endStructure(descriptor: SerialDescriptor)","description":"dev.shibasis.flatinvoker.core.serialization.decoder.CallTraceDecoder.endStructure","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.decoder/-call-trace-decoder/end-structure.html","searchKeys":["endStructure","open override fun endStructure(descriptor: SerialDescriptor)","dev.shibasis.flatinvoker.core.serialization.decoder.CallTraceDecoder.endStructure"]},{"name":"open override fun endStructure(descriptor: SerialDescriptor)","description":"dev.shibasis.flatinvoker.core.serialization.decoder.FlexDecoder.endStructure","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.decoder/-flex-decoder/end-structure.html","searchKeys":["endStructure","open override fun endStructure(descriptor: SerialDescriptor)","dev.shibasis.flatinvoker.core.serialization.decoder.FlexDecoder.endStructure"]},{"name":"open override fun endStructure(descriptor: SerialDescriptor)","description":"dev.shibasis.flatinvoker.core.serialization.encoder.FlexEncoder.endStructure","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.encoder/-flex-encoder/end-structure.html","searchKeys":["endStructure","open override fun endStructure(descriptor: SerialDescriptor)","dev.shibasis.flatinvoker.core.serialization.encoder.FlexEncoder.endStructure"]},{"name":"open override fun endStructure(descriptor: SerialDescriptor)","description":"dev.shibasis.flatinvoker.core.serialization.encoder.FlexEncoderHalfMigrated.endStructure","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.encoder/-flex-encoder-half-migrated/end-structure.html","searchKeys":["endStructure","open override fun endStructure(descriptor: SerialDescriptor)","dev.shibasis.flatinvoker.core.serialization.encoder.FlexEncoderHalfMigrated.endStructure"]},{"name":"open override fun getCachedResponse(url: String): String","description":"dev.shibasis.flatinvoker.core.NetworkImpl.getCachedResponse","location":"flatinvoker-core/dev.shibasis.flatinvoker.core/-network-impl/get-cached-response.html","searchKeys":["getCachedResponse","open override fun getCachedResponse(url: String): String","dev.shibasis.flatinvoker.core.NetworkImpl.getCachedResponse"]},{"name":"open override fun getResponse(url: String): Flow<String>","description":"dev.shibasis.flatinvoker.core.NetworkImpl.getResponse","location":"flatinvoker-core/dev.shibasis.flatinvoker.core/-network-impl/get-response.html","searchKeys":["getResponse","open override fun getResponse(url: String): Flow<String>","dev.shibasis.flatinvoker.core.NetworkImpl.getResponse"]},{"name":"open override fun invokeAsync(methodName: String, arguments: Vector): Flow<Any>","description":"dev.shibasis.flatinvoker.core.NetworkImpl.invokeAsync","location":"flatinvoker-core/dev.shibasis.flatinvoker.core/-network-impl/invoke-async.html","searchKeys":["invokeAsync","open override fun invokeAsync(methodName: String, arguments: Vector): Flow<Any>","dev.shibasis.flatinvoker.core.NetworkImpl.invokeAsync"]},{"name":"open override val serializersModule: SerializersModule","description":"dev.shibasis.flatinvoker.core.serialization.decoder.BaseDecoder.serializersModule","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.decoder/-base-decoder/serializers-module.html","searchKeys":["serializersModule","open override val serializersModule: SerializersModule","dev.shibasis.flatinvoker.core.serialization.decoder.BaseDecoder.serializersModule"]},{"name":"open override val serializersModule: SerializersModule","description":"dev.shibasis.flatinvoker.core.serialization.decoder.CallTraceDecoder.serializersModule","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.decoder/-call-trace-decoder/serializers-module.html","searchKeys":["serializersModule","open override val serializersModule: SerializersModule","dev.shibasis.flatinvoker.core.serialization.decoder.CallTraceDecoder.serializersModule"]},{"name":"open override val serializersModule: SerializersModule","description":"dev.shibasis.flatinvoker.core.serialization.decoder.FlexDecoder.serializersModule","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.decoder/-flex-decoder/serializers-module.html","searchKeys":["serializersModule","open override val serializersModule: SerializersModule","dev.shibasis.flatinvoker.core.serialization.decoder.FlexDecoder.serializersModule"]},{"name":"open override val serializersModule: SerializersModule","description":"dev.shibasis.flatinvoker.core.serialization.encoder.FlexEncoder.serializersModule","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.encoder/-flex-encoder/serializers-module.html","searchKeys":["serializersModule","open override val serializersModule: SerializersModule","dev.shibasis.flatinvoker.core.serialization.encoder.FlexEncoder.serializersModule"]},{"name":"open override val serializersModule: SerializersModule","description":"dev.shibasis.flatinvoker.core.serialization.encoder.FlexEncoderHalfMigrated.serializersModule","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.encoder/-flex-encoder-half-migrated/serializers-module.html","searchKeys":["serializersModule","open override val serializersModule: SerializersModule","dev.shibasis.flatinvoker.core.serialization.encoder.FlexEncoderHalfMigrated.serializersModule"]},{"name":"val arrayOfComplex: Array<EncodingComplexCase>","description":"dev.shibasis.flatinvoker.core.EncodingSophisticatedCase.arrayOfComplex","location":"flatinvoker-core/dev.shibasis.flatinvoker.core/-encoding-sophisticated-case/array-of-complex.html","searchKeys":["arrayOfComplex","val arrayOfComplex: Array<EncodingComplexCase>","dev.shibasis.flatinvoker.core.EncodingSophisticatedCase.arrayOfComplex"]},{"name":"val arrayOfInt: ArrayList<Int>","description":"dev.shibasis.flatinvoker.core.EncodingSimpleCase.arrayOfInt","location":"flatinvoker-core/dev.shibasis.flatinvoker.core/-encoding-simple-case/array-of-int.html","searchKeys":["arrayOfInt","val arrayOfInt: ArrayList<Int>","dev.shibasis.flatinvoker.core.EncodingSimpleCase.arrayOfInt"]},{"name":"val booleanField: Boolean = true","description":"dev.shibasis.flatinvoker.core.EncodingComplexCase.booleanField","location":"flatinvoker-core/dev.shibasis.flatinvoker.core/-encoding-complex-case/boolean-field.html","searchKeys":["booleanField","val booleanField: Boolean = true","dev.shibasis.flatinvoker.core.EncodingComplexCase.booleanField"]},{"name":"val byteArrayField: ByteArray","description":"dev.shibasis.flatinvoker.core.EncodingComplexCase.byteArrayField","location":"flatinvoker-core/dev.shibasis.flatinvoker.core/-encoding-complex-case/byte-array-field.html","searchKeys":["byteArrayField","val byteArrayField: ByteArray","dev.shibasis.flatinvoker.core.EncodingComplexCase.byteArrayField"]},{"name":"val byteField: Byte = 1","description":"dev.shibasis.flatinvoker.core.EncodingComplexCase.byteField","location":"flatinvoker-core/dev.shibasis.flatinvoker.core/-encoding-complex-case/byte-field.html","searchKeys":["byteField","val byteField: Byte = 1","dev.shibasis.flatinvoker.core.EncodingComplexCase.byteField"]},{"name":"val charField: Char = 'A'","description":"dev.shibasis.flatinvoker.core.EncodingComplexCase.charField","location":"flatinvoker-core/dev.shibasis.flatinvoker.core/-encoding-complex-case/char-field.html","searchKeys":["charField","val charField: Char = 'A'","dev.shibasis.flatinvoker.core.EncodingComplexCase.charField"]},{"name":"val charListField: MutableList<Char>","description":"dev.shibasis.flatinvoker.core.EncodingComplexCase.charListField","location":"flatinvoker-core/dev.shibasis.flatinvoker.core/-encoding-complex-case/char-list-field.html","searchKeys":["charListField","val charListField: MutableList<Char>","dev.shibasis.flatinvoker.core.EncodingComplexCase.charListField"]},{"name":"val contextualCase: Map<Comparable<*>, Any>","description":"dev.shibasis.flatinvoker.core.contextualCase","location":"flatinvoker-core/dev.shibasis.flatinvoker.core/contextual-case.html","searchKeys":["contextualCase","val contextualCase: Map<Comparable<*>, Any>","dev.shibasis.flatinvoker.core.contextualCase"]},{"name":"val doubleField: Double = 6.0","description":"dev.shibasis.flatinvoker.core.EncodingComplexCase.doubleField","location":"flatinvoker-core/dev.shibasis.flatinvoker.core/-encoding-complex-case/double-field.html","searchKeys":["doubleField","val doubleField: Double = 6.0","dev.shibasis.flatinvoker.core.EncodingComplexCase.doubleField"]},{"name":"val doubleListField: List<Double>","description":"dev.shibasis.flatinvoker.core.EncodingComplexCase.doubleListField","location":"flatinvoker-core/dev.shibasis.flatinvoker.core/-encoding-complex-case/double-list-field.html","searchKeys":["doubleListField","val doubleListField: List<Double>","dev.shibasis.flatinvoker.core.EncodingComplexCase.doubleListField"]},{"name":"val entries: EnumEntries<TypeCategory>","description":"dev.shibasis.flatinvoker.core.serialization.util.TypeCategory.entries","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.util/-type-category/entries.html","searchKeys":["entries","val entries: EnumEntries<TypeCategory>","dev.shibasis.flatinvoker.core.serialization.util.TypeCategory.entries"]},{"name":"val field: EncodingComplexCase","description":"dev.shibasis.flatinvoker.core.EncodingSophisticatedCase.field","location":"flatinvoker-core/dev.shibasis.flatinvoker.core/-encoding-sophisticated-case/field.html","searchKeys":["field","val field: EncodingComplexCase","dev.shibasis.flatinvoker.core.EncodingSophisticatedCase.field"]},{"name":"val flexBuffer: Long","description":"dev.shibasis.flatinvoker.core.serialization.encoder.FlexEncoder.flexBuffer","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.encoder/-flex-encoder/flex-buffer.html","searchKeys":["flexBuffer","val flexBuffer: Long","dev.shibasis.flatinvoker.core.serialization.encoder.FlexEncoder.flexBuffer"]},{"name":"val flexBuffer: Long","description":"dev.shibasis.flatinvoker.core.serialization.encoder.FlexEncoderHalfMigrated.flexBuffer","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.encoder/-flex-encoder-half-migrated/flex-buffer.html","searchKeys":["flexBuffer","val flexBuffer: Long","dev.shibasis.flatinvoker.core.serialization.encoder.FlexEncoderHalfMigrated.flexBuffer"]},{"name":"val floatField: Float = 5.0f","description":"dev.shibasis.flatinvoker.core.EncodingComplexCase.floatField","location":"flatinvoker-core/dev.shibasis.flatinvoker.core/-encoding-complex-case/float-field.html","searchKeys":["floatField","val floatField: Float = 5.0f","dev.shibasis.flatinvoker.core.EncodingComplexCase.floatField"]},{"name":"val floatSetField: Set<Float>","description":"dev.shibasis.flatinvoker.core.EncodingComplexCase.floatSetField","location":"flatinvoker-core/dev.shibasis.flatinvoker.core/-encoding-complex-case/float-set-field.html","searchKeys":["floatSetField","val floatSetField: Set<Float>","dev.shibasis.flatinvoker.core.EncodingComplexCase.floatSetField"]},{"name":"val innerList: List<String>","description":"dev.shibasis.flatinvoker.core.InnerNestedData.innerList","location":"flatinvoker-core/dev.shibasis.flatinvoker.core/-inner-nested-data/inner-list.html","searchKeys":["innerList","val innerList: List<String>","dev.shibasis.flatinvoker.core.InnerNestedData.innerList"]},{"name":"val innerNestedData: List<InnerNestedData>","description":"dev.shibasis.flatinvoker.core.NestedData.innerNestedData","location":"flatinvoker-core/dev.shibasis.flatinvoker.core/-nested-data/inner-nested-data.html","searchKeys":["innerNestedData","val innerNestedData: List<InnerNestedData>","dev.shibasis.flatinvoker.core.NestedData.innerNestedData"]},{"name":"val innerValue: Double","description":"dev.shibasis.flatinvoker.core.InnerNestedData.innerValue","location":"flatinvoker-core/dev.shibasis.flatinvoker.core/-inner-nested-data/inner-value.html","searchKeys":["innerValue","val innerValue: Double","dev.shibasis.flatinvoker.core.InnerNestedData.innerValue"]},{"name":"val intField: Int = 3","description":"dev.shibasis.flatinvoker.core.EncodingComplexCase.intField","location":"flatinvoker-core/dev.shibasis.flatinvoker.core/-encoding-complex-case/int-field.html","searchKeys":["intField","val intField: Int = 3","dev.shibasis.flatinvoker.core.EncodingComplexCase.intField"]},{"name":"val intSetField: Set<Int>","description":"dev.shibasis.flatinvoker.core.EncodingComplexCase.intSetField","location":"flatinvoker-core/dev.shibasis.flatinvoker.core/-encoding-complex-case/int-set-field.html","searchKeys":["intSetField","val intSetField: Set<Int>","dev.shibasis.flatinvoker.core.EncodingComplexCase.intSetField"]},{"name":"val listComplex: List<EncodingComplexCase>","description":"dev.shibasis.flatinvoker.core.EncodingSophisticatedCase.listComplex","location":"flatinvoker-core/dev.shibasis.flatinvoker.core/-encoding-sophisticated-case/list-complex.html","searchKeys":["listComplex","val listComplex: List<EncodingComplexCase>","dev.shibasis.flatinvoker.core.EncodingSophisticatedCase.listComplex"]},{"name":"val listOfLists: List<List<Int>>","description":"dev.shibasis.flatinvoker.core.EncodingComplexCase.listOfLists","location":"flatinvoker-core/dev.shibasis.flatinvoker.core/-encoding-complex-case/list-of-lists.html","searchKeys":["listOfLists","val listOfLists: List<List<Int>>","dev.shibasis.flatinvoker.core.EncodingComplexCase.listOfLists"]},{"name":"val longField: Long = 4","description":"dev.shibasis.flatinvoker.core.EncodingComplexCase.longField","location":"flatinvoker-core/dev.shibasis.flatinvoker.core/-encoding-complex-case/long-field.html","searchKeys":["longField","val longField: Long = 4","dev.shibasis.flatinvoker.core.EncodingComplexCase.longField"]},{"name":"val longListField: MutableList<Long>","description":"dev.shibasis.flatinvoker.core.EncodingComplexCase.longListField","location":"flatinvoker-core/dev.shibasis.flatinvoker.core/-encoding-complex-case/long-list-field.html","searchKeys":["longListField","val longListField: MutableList<Long>","dev.shibasis.flatinvoker.core.EncodingComplexCase.longListField"]},{"name":"val mapComplex: Map<String, EncodingComplexCase>","description":"dev.shibasis.flatinvoker.core.EncodingSophisticatedCase.mapComplex","location":"flatinvoker-core/dev.shibasis.flatinvoker.core/-encoding-sophisticated-case/map-complex.html","searchKeys":["mapComplex","val mapComplex: Map<String, EncodingComplexCase>","dev.shibasis.flatinvoker.core.EncodingSophisticatedCase.mapComplex"]},{"name":"val mapOfIntToBoolean: Map<Int, Boolean>","description":"dev.shibasis.flatinvoker.core.EncodingComplexCase.mapOfIntToBoolean","location":"flatinvoker-core/dev.shibasis.flatinvoker.core/-encoding-complex-case/map-of-int-to-boolean.html","searchKeys":["mapOfIntToBoolean","val mapOfIntToBoolean: Map<Int, Boolean>","dev.shibasis.flatinvoker.core.EncodingComplexCase.mapOfIntToBoolean"]},{"name":"val mapOfListComplex: Map<String, List<EncodingComplexCase>>","description":"dev.shibasis.flatinvoker.core.EncodingSophisticatedCase.mapOfListComplex","location":"flatinvoker-core/dev.shibasis.flatinvoker.core/-encoding-sophisticated-case/map-of-list-complex.html","searchKeys":["mapOfListComplex","val mapOfListComplex: Map<String, List<EncodingComplexCase>>","dev.shibasis.flatinvoker.core.EncodingSophisticatedCase.mapOfListComplex"]},{"name":"val mapOfMapComplex: Map<String, Map<String, EncodingComplexCase>>","description":"dev.shibasis.flatinvoker.core.EncodingSophisticatedCase.mapOfMapComplex","location":"flatinvoker-core/dev.shibasis.flatinvoker.core/-encoding-sophisticated-case/map-of-map-complex.html","searchKeys":["mapOfMapComplex","val mapOfMapComplex: Map<String, Map<String, EncodingComplexCase>>","dev.shibasis.flatinvoker.core.EncodingSophisticatedCase.mapOfMapComplex"]},{"name":"val mapOfMapOfListComplex: Map<String, Map<String, List<EncodingComplexCase>>>","description":"dev.shibasis.flatinvoker.core.EncodingSophisticatedCase.mapOfMapOfListComplex","location":"flatinvoker-core/dev.shibasis.flatinvoker.core/-encoding-sophisticated-case/map-of-map-of-list-complex.html","searchKeys":["mapOfMapOfListComplex","val mapOfMapOfListComplex: Map<String, Map<String, List<EncodingComplexCase>>>","dev.shibasis.flatinvoker.core.EncodingSophisticatedCase.mapOfMapOfListComplex"]},{"name":"val mapOfStringToInt: Map<String, Int>","description":"dev.shibasis.flatinvoker.core.EncodingComplexCase.mapOfStringToInt","location":"flatinvoker-core/dev.shibasis.flatinvoker.core/-encoding-complex-case/map-of-string-to-int.html","searchKeys":["mapOfStringToInt","val mapOfStringToInt: Map<String, Int>","dev.shibasis.flatinvoker.core.EncodingComplexCase.mapOfStringToInt"]},{"name":"val mapOfStringToInt: Map<String, Int>","description":"dev.shibasis.flatinvoker.core.EncodingSimpleCase.mapOfStringToInt","location":"flatinvoker-core/dev.shibasis.flatinvoker.core/-encoding-simple-case/map-of-string-to-int.html","searchKeys":["mapOfStringToInt","val mapOfStringToInt: Map<String, Int>","dev.shibasis.flatinvoker.core.EncodingSimpleCase.mapOfStringToInt"]},{"name":"val mapOfStringToNestedData: Map<String, NestedData>","description":"dev.shibasis.flatinvoker.core.EncodingComplexCase.mapOfStringToNestedData","location":"flatinvoker-core/dev.shibasis.flatinvoker.core/-encoding-complex-case/map-of-string-to-nested-data.html","searchKeys":["mapOfStringToNestedData","val mapOfStringToNestedData: Map<String, NestedData>","dev.shibasis.flatinvoker.core.EncodingComplexCase.mapOfStringToNestedData"]},{"name":"val mutableMapOfStringToList: MutableMap<String, List<Double>>","description":"dev.shibasis.flatinvoker.core.EncodingComplexCase.mutableMapOfStringToList","location":"flatinvoker-core/dev.shibasis.flatinvoker.core/-encoding-complex-case/mutable-map-of-string-to-list.html","searchKeys":["mutableMapOfStringToList","val mutableMapOfStringToList: MutableMap<String, List<Double>>","dev.shibasis.flatinvoker.core.EncodingComplexCase.mutableMapOfStringToList"]},{"name":"val mutableMapOfStringToList: MutableMap<String, List<Double>>","description":"dev.shibasis.flatinvoker.core.EncodingSimpleCase.mutableMapOfStringToList","location":"flatinvoker-core/dev.shibasis.flatinvoker.core/-encoding-simple-case/mutable-map-of-string-to-list.html","searchKeys":["mutableMapOfStringToList","val mutableMapOfStringToList: MutableMap<String, List<Double>>","dev.shibasis.flatinvoker.core.EncodingSimpleCase.mutableMapOfStringToList"]},{"name":"val nestedData: NestedData","description":"dev.shibasis.flatinvoker.core.EncodingComplexCase.nestedData","location":"flatinvoker-core/dev.shibasis.flatinvoker.core/-encoding-complex-case/nested-data.html","searchKeys":["nestedData","val nestedData: NestedData","dev.shibasis.flatinvoker.core.EncodingComplexCase.nestedData"]},{"name":"val nestedInt: Int","description":"dev.shibasis.flatinvoker.core.NestedData.nestedInt","location":"flatinvoker-core/dev.shibasis.flatinvoker.core/-nested-data/nested-int.html","searchKeys":["nestedInt","val nestedInt: Int","dev.shibasis.flatinvoker.core.NestedData.nestedInt"]},{"name":"val nestedString: String","description":"dev.shibasis.flatinvoker.core.NestedData.nestedString","location":"flatinvoker-core/dev.shibasis.flatinvoker.core/-nested-data/nested-string.html","searchKeys":["nestedString","val nestedString: String","dev.shibasis.flatinvoker.core.NestedData.nestedString"]},{"name":"val prefix: String","description":"dev.shibasis.flatinvoker.core.serialization.decoder.CallTraceDecoder.prefix","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.decoder/-call-trace-decoder/prefix.html","searchKeys":["prefix","val prefix: String","dev.shibasis.flatinvoker.core.serialization.decoder.CallTraceDecoder.prefix"]},{"name":"val setComplex: Set<EncodingComplexCase>","description":"dev.shibasis.flatinvoker.core.EncodingSophisticatedCase.setComplex","location":"flatinvoker-core/dev.shibasis.flatinvoker.core/-encoding-sophisticated-case/set-complex.html","searchKeys":["setComplex","val setComplex: Set<EncodingComplexCase>","dev.shibasis.flatinvoker.core.EncodingSophisticatedCase.setComplex"]},{"name":"val setOfListComplex: Set<List<EncodingComplexCase>>","description":"dev.shibasis.flatinvoker.core.EncodingSophisticatedCase.setOfListComplex","location":"flatinvoker-core/dev.shibasis.flatinvoker.core/-encoding-sophisticated-case/set-of-list-complex.html","searchKeys":["setOfListComplex","val setOfListComplex: Set<List<EncodingComplexCase>>","dev.shibasis.flatinvoker.core.EncodingSophisticatedCase.setOfListComplex"]},{"name":"val setOfMapComplex: Set<Map<String, EncodingComplexCase>>","description":"dev.shibasis.flatinvoker.core.EncodingSophisticatedCase.setOfMapComplex","location":"flatinvoker-core/dev.shibasis.flatinvoker.core/-encoding-sophisticated-case/set-of-map-complex.html","searchKeys":["setOfMapComplex","val setOfMapComplex: Set<Map<String, EncodingComplexCase>>","dev.shibasis.flatinvoker.core.EncodingSophisticatedCase.setOfMapComplex"]},{"name":"val setOfSetComplex: Set<Set<EncodingComplexCase>>","description":"dev.shibasis.flatinvoker.core.EncodingSophisticatedCase.setOfSetComplex","location":"flatinvoker-core/dev.shibasis.flatinvoker.core/-encoding-sophisticated-case/set-of-set-complex.html","searchKeys":["setOfSetComplex","val setOfSetComplex: Set<Set<EncodingComplexCase>>","dev.shibasis.flatinvoker.core.EncodingSophisticatedCase.setOfSetComplex"]},{"name":"val setOfSets: Set<Set<Float>>","description":"dev.shibasis.flatinvoker.core.EncodingComplexCase.setOfSets","location":"flatinvoker-core/dev.shibasis.flatinvoker.core/-encoding-complex-case/set-of-sets.html","searchKeys":["setOfSets","val setOfSets: Set<Set<Float>>","dev.shibasis.flatinvoker.core.EncodingComplexCase.setOfSets"]},{"name":"val shortField: Short = 2","description":"dev.shibasis.flatinvoker.core.EncodingComplexCase.shortField","location":"flatinvoker-core/dev.shibasis.flatinvoker.core/-encoding-complex-case/short-field.html","searchKeys":["shortField","val shortField: Short = 2","dev.shibasis.flatinvoker.core.EncodingComplexCase.shortField"]},{"name":"val shortListField: List<Short>","description":"dev.shibasis.flatinvoker.core.EncodingComplexCase.shortListField","location":"flatinvoker-core/dev.shibasis.flatinvoker.core/-encoding-complex-case/short-list-field.html","searchKeys":["shortListField","val shortListField: List<Short>","dev.shibasis.flatinvoker.core.EncodingComplexCase.shortListField"]},{"name":"val stack: CompositePositionStack","description":"dev.shibasis.flatinvoker.core.serialization.util.EncodingStack.stack","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.util/-encoding-stack/stack.html","searchKeys":["stack","val stack: CompositePositionStack","dev.shibasis.flatinvoker.core.serialization.util.EncodingStack.stack"]},{"name":"val stack: EncodingStack","description":"dev.shibasis.flatinvoker.core.serialization.encoder.FlexEncoder.stack","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.encoder/-flex-encoder/stack.html","searchKeys":["stack","val stack: EncodingStack","dev.shibasis.flatinvoker.core.serialization.encoder.FlexEncoder.stack"]},{"name":"val stack: EncodingStack","description":"dev.shibasis.flatinvoker.core.serialization.encoder.FlexEncoderHalfMigrated.stack","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.encoder/-flex-encoder-half-migrated/stack.html","searchKeys":["stack","val stack: EncodingStack","dev.shibasis.flatinvoker.core.serialization.encoder.FlexEncoderHalfMigrated.stack"]},{"name":"val stringField: String","description":"dev.shibasis.flatinvoker.core.EncodingComplexCase.stringField","location":"flatinvoker-core/dev.shibasis.flatinvoker.core/-encoding-complex-case/string-field.html","searchKeys":["stringField","val stringField: String","dev.shibasis.flatinvoker.core.EncodingComplexCase.stringField"]},{"name":"val stringSetField: Set<String>","description":"dev.shibasis.flatinvoker.core.EncodingComplexCase.stringSetField","location":"flatinvoker-core/dev.shibasis.flatinvoker.core/-encoding-complex-case/string-set-field.html","searchKeys":["stringSetField","val stringSetField: Set<String>","dev.shibasis.flatinvoker.core.EncodingComplexCase.stringSetField"]},{"name":"var Naa: String","description":"dev.shibasis.flatinvoker.core.serialization.decoder.CallTraceDecoder.Naa","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.decoder/-call-trace-decoder/-naa.html","searchKeys":["Naa","var Naa: String","dev.shibasis.flatinvoker.core.serialization.decoder.CallTraceDecoder.Naa"]},{"name":"var Naa: String","description":"dev.shibasis.flatinvoker.core.serialization.decoder.FlexDecoder.Naa","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.decoder/-flex-decoder/-naa.html","searchKeys":["Naa","var Naa: String","dev.shibasis.flatinvoker.core.serialization.decoder.FlexDecoder.Naa"]},{"name":"var capacity: Int","description":"dev.shibasis.flatinvoker.core.serialization.util.CompositePositionStack.capacity","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.util/-composite-position-stack/capacity.html","searchKeys":["capacity","var capacity: Int","dev.shibasis.flatinvoker.core.serialization.util.CompositePositionStack.capacity"]},{"name":"var current: CompositePosition?","description":"dev.shibasis.flatinvoker.core.serialization.util.EncodingStack.current","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.util/-encoding-stack/current.html","searchKeys":["current","var current: CompositePosition?","dev.shibasis.flatinvoker.core.serialization.util.EncodingStack.current"]},{"name":"var fieldName: String?","description":"dev.shibasis.flatinvoker.core.serialization.util.CompositePosition.fieldName","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.util/-composite-position/field-name.html","searchKeys":["fieldName","var fieldName: String?","dev.shibasis.flatinvoker.core.serialization.util.CompositePosition.fieldName"]},{"name":"var idx: Int","description":"dev.shibasis.flatinvoker.core.serialization.util.CompositePosition.idx","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.util/-composite-position/idx.html","searchKeys":["idx","var idx: Int","dev.shibasis.flatinvoker.core.serialization.util.CompositePosition.idx"]},{"name":"var index: Int","description":"dev.shibasis.flatinvoker.core.serialization.decoder.CallTraceDecoder.index","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.decoder/-call-trace-decoder/--index--.html","searchKeys":["index","var index: Int","dev.shibasis.flatinvoker.core.serialization.decoder.CallTraceDecoder.index"]},{"name":"var index: Int","description":"dev.shibasis.flatinvoker.core.serialization.decoder.FlexDecoder.index","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.decoder/-flex-decoder/--index--.html","searchKeys":["index","var index: Int","dev.shibasis.flatinvoker.core.serialization.decoder.FlexDecoder.index"]},{"name":"var name: String?","description":"dev.shibasis.flatinvoker.core.serialization.decoder.CallTraceDecoder.name","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.decoder/-call-trace-decoder/name.html","searchKeys":["name","var name: String?","dev.shibasis.flatinvoker.core.serialization.decoder.CallTraceDecoder.name"]},{"name":"var position: Long","description":"dev.shibasis.flatinvoker.core.serialization.util.CompositePosition.position","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.util/-composite-position/position.html","searchKeys":["position","var position: Long","dev.shibasis.flatinvoker.core.serialization.util.CompositePosition.position"]},{"name":"var size: Int","description":"dev.shibasis.flatinvoker.core.serialization.util.CompositePositionStack.size","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.util/-composite-position-stack/size.html","searchKeys":["size","var size: Int","dev.shibasis.flatinvoker.core.serialization.util.CompositePositionStack.size"]},{"name":"var stack: ArrayList<CompositePosition>","description":"dev.shibasis.flatinvoker.core.serialization.util.CompositePositionStack.stack","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.util/-composite-position-stack/stack.html","searchKeys":["stack","var stack: ArrayList<CompositePosition>","dev.shibasis.flatinvoker.core.serialization.util.CompositePositionStack.stack"]},{"name":"var type: Int","description":"dev.shibasis.flatinvoker.core.serialization.util.CompositePosition.type","location":"flatinvoker-core/dev.shibasis.flatinvoker.core.serialization.util/-composite-position/type.html","searchKeys":["type","var type: Int","dev.shibasis.flatinvoker.core.serialization.util.CompositePosition.type"]},{"name":"abstract class CompressionAdapter<Controller>(controller: Controller) : Adapter<Controller> ","description":"dev.shibasis.reaktor.io.adapters.CompressionAdapter","location":"reaktor-io/dev.shibasis.reaktor.io.adapters/-compression-adapter/index.html","searchKeys":["CompressionAdapter","abstract class CompressionAdapter<Controller>(controller: Controller) : Adapter<Controller> ","dev.shibasis.reaktor.io.adapters.CompressionAdapter"]},{"name":"abstract class FileAdapter<Controller>(controller: Controller) : Adapter<Controller> ","description":"dev.shibasis.reaktor.io.adapters.FileAdapter","location":"reaktor-io/dev.shibasis.reaktor.io.adapters/-file-adapter/index.html","searchKeys":["FileAdapter","abstract class FileAdapter<Controller>(controller: Controller) : Adapter<Controller> ","dev.shibasis.reaktor.io.adapters.FileAdapter"]},{"name":"abstract fun compress(request: CompressionRequest): CompressionResponse?","description":"dev.shibasis.reaktor.io.adapters.CompressionAdapter.compress","location":"reaktor-io/dev.shibasis.reaktor.io.adapters/-compression-adapter/compress.html","searchKeys":["compress","abstract fun compress(request: CompressionRequest): CompressionResponse?","dev.shibasis.reaktor.io.adapters.CompressionAdapter.compress"]},{"name":"abstract fun decompress(request: DecompressionRequest): DecompressionResponse?","description":"dev.shibasis.reaktor.io.adapters.CompressionAdapter.decompress","location":"reaktor-io/dev.shibasis.reaktor.io.adapters/-compression-adapter/decompress.html","searchKeys":["decompress","abstract fun decompress(request: DecompressionRequest): DecompressionResponse?","dev.shibasis.reaktor.io.adapters.CompressionAdapter.decompress"]},{"name":"abstract val cacheDirectory: String","description":"dev.shibasis.reaktor.io.adapters.FileAdapter.cacheDirectory","location":"reaktor-io/dev.shibasis.reaktor.io.adapters/-file-adapter/cache-directory.html","searchKeys":["cacheDirectory","abstract val cacheDirectory: String","dev.shibasis.reaktor.io.adapters.FileAdapter.cacheDirectory"]},{"name":"abstract val documentDirectory: String","description":"dev.shibasis.reaktor.io.adapters.FileAdapter.documentDirectory","location":"reaktor-io/dev.shibasis.reaktor.io.adapters/-file-adapter/document-directory.html","searchKeys":["documentDirectory","abstract val documentDirectory: String","dev.shibasis.reaktor.io.adapters.FileAdapter.documentDirectory"]},{"name":"class AndroidCompressionAdapter : CompressionAdapter<Unit> ","description":"dev.shibasis.reaktor.io.adapters.AndroidCompressionAdapter","location":"reaktor-io/dev.shibasis.reaktor.io.adapters/-android-compression-adapter/index.html","searchKeys":["AndroidCompressionAdapter","class AndroidCompressionAdapter : CompressionAdapter<Unit> ","dev.shibasis.reaktor.io.adapters.AndroidCompressionAdapter"]},{"name":"class AndroidFileAdapter(activity: Activity) : FileAdapter<Activity> ","description":"dev.shibasis.reaktor.io.adapters.AndroidFileAdapter","location":"reaktor-io/dev.shibasis.reaktor.io.adapters/-android-file-adapter/index.html","searchKeys":["AndroidFileAdapter","class AndroidFileAdapter(activity: Activity) : FileAdapter<Activity> ","dev.shibasis.reaktor.io.adapters.AndroidFileAdapter"]},{"name":"class DarwinCompressionAdapter : CompressionAdapter<Unit> ","description":"dev.shibasis.reaktor.io.adapters.DarwinCompressionAdapter","location":"reaktor-io/dev.shibasis.reaktor.io.adapters/-darwin-compression-adapter/index.html","searchKeys":["DarwinCompressionAdapter","class DarwinCompressionAdapter : CompressionAdapter<Unit> ","dev.shibasis.reaktor.io.adapters.DarwinCompressionAdapter"]},{"name":"class DarwinFileAdapter : FileAdapter<Unit> ","description":"dev.shibasis.reaktor.io.adapters.DarwinFileAdapter","location":"reaktor-io/dev.shibasis.reaktor.io.adapters/-darwin-file-adapter/index.html","searchKeys":["DarwinFileAdapter","class DarwinFileAdapter : FileAdapter<Unit> ","dev.shibasis.reaktor.io.adapters.DarwinFileAdapter"]},{"name":"constructor()","description":"dev.shibasis.reaktor.io.adapters.AndroidCompressionAdapter.AndroidCompressionAdapter","location":"reaktor-io/dev.shibasis.reaktor.io.adapters/-android-compression-adapter/-android-compression-adapter.html","searchKeys":["AndroidCompressionAdapter","constructor()","dev.shibasis.reaktor.io.adapters.AndroidCompressionAdapter.AndroidCompressionAdapter"]},{"name":"constructor()","description":"dev.shibasis.reaktor.io.adapters.DarwinCompressionAdapter.DarwinCompressionAdapter","location":"reaktor-io/dev.shibasis.reaktor.io.adapters/-darwin-compression-adapter/-darwin-compression-adapter.html","searchKeys":["DarwinCompressionAdapter","constructor()","dev.shibasis.reaktor.io.adapters.DarwinCompressionAdapter.DarwinCompressionAdapter"]},{"name":"constructor()","description":"dev.shibasis.reaktor.io.adapters.DarwinFileAdapter.DarwinFileAdapter","location":"reaktor-io/dev.shibasis.reaktor.io.adapters/-darwin-file-adapter/-darwin-file-adapter.html","searchKeys":["DarwinFileAdapter","constructor()","dev.shibasis.reaktor.io.adapters.DarwinFileAdapter.DarwinFileAdapter"]},{"name":"constructor(active: Boolean)","description":"dev.shibasis.reaktor.io.network.HealthCheck.Response.Response","location":"reaktor-io/dev.shibasis.reaktor.io.network/-health-check/-response/-response.html","searchKeys":["Response","constructor(active: Boolean)","dev.shibasis.reaktor.io.network.HealthCheck.Response.Response"]},{"name":"constructor(activity: Activity)","description":"dev.shibasis.reaktor.io.adapters.AndroidFileAdapter.AndroidFileAdapter","location":"reaktor-io/dev.shibasis.reaktor.io.adapters/-android-file-adapter/-android-file-adapter.html","searchKeys":["AndroidFileAdapter","constructor(activity: Activity)","dev.shibasis.reaktor.io.adapters.AndroidFileAdapter.AndroidFileAdapter"]},{"name":"constructor(base64EncodedString: String)","description":"dev.shibasis.reaktor.io.adapters.CompressionResponse.CompressionResponse","location":"reaktor-io/dev.shibasis.reaktor.io.adapters/-compression-response/-compression-response.html","searchKeys":["CompressionResponse","constructor(base64EncodedString: String)","dev.shibasis.reaktor.io.adapters.CompressionResponse.CompressionResponse"]},{"name":"constructor(base64EncodedString: String)","description":"dev.shibasis.reaktor.io.adapters.DecompressionRequest.DecompressionRequest","location":"reaktor-io/dev.shibasis.reaktor.io.adapters/-decompression-request/-decompression-request.html","searchKeys":["DecompressionRequest","constructor(base64EncodedString: String)","dev.shibasis.reaktor.io.adapters.DecompressionRequest.DecompressionRequest"]},{"name":"constructor(controller: Controller)","description":"dev.shibasis.reaktor.io.adapters.CompressionAdapter.CompressionAdapter","location":"reaktor-io/dev.shibasis.reaktor.io.adapters/-compression-adapter/-compression-adapter.html","searchKeys":["CompressionAdapter","constructor(controller: Controller)","dev.shibasis.reaktor.io.adapters.CompressionAdapter.CompressionAdapter"]},{"name":"constructor(controller: Controller)","description":"dev.shibasis.reaktor.io.adapters.FileAdapter.FileAdapter","location":"reaktor-io/dev.shibasis.reaktor.io.adapters/-file-adapter/-file-adapter.html","searchKeys":["FileAdapter","constructor(controller: Controller)","dev.shibasis.reaktor.io.adapters.FileAdapter.FileAdapter"]},{"name":"constructor(data: String)","description":"dev.shibasis.reaktor.io.adapters.CompressionRequest.CompressionRequest","location":"reaktor-io/dev.shibasis.reaktor.io.adapters/-compression-request/-compression-request.html","searchKeys":["CompressionRequest","constructor(data: String)","dev.shibasis.reaktor.io.adapters.CompressionRequest.CompressionRequest"]},{"name":"constructor(data: String)","description":"dev.shibasis.reaktor.io.adapters.DecompressionResponse.DecompressionResponse","location":"reaktor-io/dev.shibasis.reaktor.io.adapters/-decompression-response/-decompression-response.html","searchKeys":["DecompressionResponse","constructor(data: String)","dev.shibasis.reaktor.io.adapters.DecompressionResponse.DecompressionResponse"]},{"name":"data class CompressionRequest(val data: String)","description":"dev.shibasis.reaktor.io.adapters.CompressionRequest","location":"reaktor-io/dev.shibasis.reaktor.io.adapters/-compression-request/index.html","searchKeys":["CompressionRequest","data class CompressionRequest(val data: String)","dev.shibasis.reaktor.io.adapters.CompressionRequest"]},{"name":"data class CompressionResponse(val base64EncodedString: String)","description":"dev.shibasis.reaktor.io.adapters.CompressionResponse","location":"reaktor-io/dev.shibasis.reaktor.io.adapters/-compression-response/index.html","searchKeys":["CompressionResponse","data class CompressionResponse(val base64EncodedString: String)","dev.shibasis.reaktor.io.adapters.CompressionResponse"]},{"name":"data class DecompressionRequest(val base64EncodedString: String)","description":"dev.shibasis.reaktor.io.adapters.DecompressionRequest","location":"reaktor-io/dev.shibasis.reaktor.io.adapters/-decompression-request/index.html","searchKeys":["DecompressionRequest","data class DecompressionRequest(val base64EncodedString: String)","dev.shibasis.reaktor.io.adapters.DecompressionRequest"]},{"name":"data class DecompressionResponse(val data: String)","description":"dev.shibasis.reaktor.io.adapters.DecompressionResponse","location":"reaktor-io/dev.shibasis.reaktor.io.adapters/-decompression-response/index.html","searchKeys":["DecompressionResponse","data class DecompressionResponse(val data: String)","dev.shibasis.reaktor.io.adapters.DecompressionResponse"]},{"name":"data class Response(val active: Boolean)","description":"dev.shibasis.reaktor.io.network.HealthCheck.Response","location":"reaktor-io/dev.shibasis.reaktor.io.network/-health-check/-response/index.html","searchKeys":["Response","data class Response(val active: Boolean)","dev.shibasis.reaktor.io.network.HealthCheck.Response"]},{"name":"expect val httpClient: HttpClient","description":"dev.shibasis.reaktor.io.network.httpClient","location":"reaktor-io/dev.shibasis.reaktor.io.network/http-client.html","searchKeys":["httpClient","expect val httpClient: HttpClient","dev.shibasis.reaktor.io.network.httpClient"]},{"name":"fun <T : HttpClientEngineConfig> HttpClientConfig<T>.middleware()","description":"dev.shibasis.reaktor.io.network.middleware","location":"reaktor-io/dev.shibasis.reaktor.io.network/middleware.html","searchKeys":["middleware","fun <T : HttpClientEngineConfig> HttpClientConfig<T>.middleware()","dev.shibasis.reaktor.io.network.middleware"]},{"name":"fun HeadersBuilder.replace(key: String, value: String)","description":"dev.shibasis.reaktor.io.network.replace","location":"reaktor-io/dev.shibasis.reaktor.io.network/replace.html","searchKeys":["replace","fun HeadersBuilder.replace(key: String, value: String)","dev.shibasis.reaktor.io.network.replace"]},{"name":"fun Uri.toFileFromContent(activity: Activity): File?","description":"dev.shibasis.reaktor.io.adapters.toFileFromContent","location":"reaktor-io/dev.shibasis.reaktor.io.adapters/to-file-from-content.html","searchKeys":["toFileFromContent","fun Uri.toFileFromContent(activity: Activity): File?","dev.shibasis.reaktor.io.adapters.toFileFromContent"]},{"name":"fun bufferedSink(path: String, actions: Sink.() -> Unit)","description":"dev.shibasis.reaktor.io.adapters.bufferedSink","location":"reaktor-io/dev.shibasis.reaktor.io.adapters/buffered-sink.html","searchKeys":["bufferedSink","fun bufferedSink(path: String, actions: Sink.() -> Unit)","dev.shibasis.reaktor.io.adapters.bufferedSink"]},{"name":"fun bufferedSource(path: String, actions: (source: Source) -> Unit)","description":"dev.shibasis.reaktor.io.adapters.bufferedSource","location":"reaktor-io/dev.shibasis.reaktor.io.adapters/buffered-source.html","searchKeys":["bufferedSource","fun bufferedSource(path: String, actions: (source: Source) -> Unit)","dev.shibasis.reaktor.io.adapters.bufferedSource"]},{"name":"fun bufferedWriteBinaryFile(source: Source, outputPath: String)","description":"dev.shibasis.reaktor.io.adapters.FileAdapter.bufferedWriteBinaryFile","location":"reaktor-io/dev.shibasis.reaktor.io.adapters/-file-adapter/buffered-write-binary-file.html","searchKeys":["bufferedWriteBinaryFile","fun bufferedWriteBinaryFile(source: Source, outputPath: String)","dev.shibasis.reaktor.io.adapters.FileAdapter.bufferedWriteBinaryFile"]},{"name":"fun readBinaryFile(path: String): ByteArray?","description":"dev.shibasis.reaktor.io.adapters.FileAdapter.readBinaryFile","location":"reaktor-io/dev.shibasis.reaktor.io.adapters/-file-adapter/read-binary-file.html","searchKeys":["readBinaryFile","fun readBinaryFile(path: String): ByteArray?","dev.shibasis.reaktor.io.adapters.FileAdapter.readBinaryFile"]},{"name":"fun readTextFile(path: String): String?","description":"dev.shibasis.reaktor.io.adapters.FileAdapter.readTextFile","location":"reaktor-io/dev.shibasis.reaktor.io.adapters/-file-adapter/read-text-file.html","searchKeys":["readTextFile","fun readTextFile(path: String): String?","dev.shibasis.reaktor.io.adapters.FileAdapter.readTextFile"]},{"name":"fun writeBinaryFile(path: String, data: ByteArray)","description":"dev.shibasis.reaktor.io.adapters.FileAdapter.writeBinaryFile","location":"reaktor-io/dev.shibasis.reaktor.io.adapters/-file-adapter/write-binary-file.html","searchKeys":["writeBinaryFile","fun writeBinaryFile(path: String, data: ByteArray)","dev.shibasis.reaktor.io.adapters.FileAdapter.writeBinaryFile"]},{"name":"fun writeTextFile(path: String, data: String)","description":"dev.shibasis.reaktor.io.adapters.FileAdapter.writeTextFile","location":"reaktor-io/dev.shibasis.reaktor.io.adapters/-file-adapter/write-text-file.html","searchKeys":["writeTextFile","fun writeTextFile(path: String, data: String)","dev.shibasis.reaktor.io.adapters.FileAdapter.writeTextFile"]},{"name":"inline suspend fun <I, O> HttpClient.postJson(url: String, body: I): Result<O>","description":"dev.shibasis.reaktor.io.network.postJson","location":"reaktor-io/dev.shibasis.reaktor.io.network/post-json.html","searchKeys":["postJson","inline suspend fun <I, O> HttpClient.postJson(url: String, body: I): Result<O>","dev.shibasis.reaktor.io.network.postJson"]},{"name":"inline suspend fun <O> HttpClient.getJson(url: String): Result<O>","description":"dev.shibasis.reaktor.io.network.getJson","location":"reaktor-io/dev.shibasis.reaktor.io.network/get-json.html","searchKeys":["getJson","inline suspend fun <O> HttpClient.getJson(url: String): Result<O>","dev.shibasis.reaktor.io.network.getJson"]},{"name":"inline suspend fun <T> HttpResponse.toResult(): Result<T>","description":"dev.shibasis.reaktor.io.network.toResult","location":"reaktor-io/dev.shibasis.reaktor.io.network/to-result.html","searchKeys":["toResult","inline suspend fun <T> HttpResponse.toResult(): Result<T>","dev.shibasis.reaktor.io.network.toResult"]},{"name":"inline suspend fun HttpResponse.toJsonElementResult(): Result<JsonElement>","description":"dev.shibasis.reaktor.io.network.toJsonElementResult","location":"reaktor-io/dev.shibasis.reaktor.io.network/to-json-element-result.html","searchKeys":["toJsonElementResult","inline suspend fun HttpResponse.toJsonElementResult(): Result<JsonElement>","dev.shibasis.reaktor.io.network.toJsonElementResult"]},{"name":"object HealthCheck","description":"dev.shibasis.reaktor.io.network.HealthCheck","location":"reaktor-io/dev.shibasis.reaktor.io.network/-health-check/index.html","searchKeys":["HealthCheck","object HealthCheck","dev.shibasis.reaktor.io.network.HealthCheck"]},{"name":"open override fun compress(request: CompressionRequest): CompressionResponse?","description":"dev.shibasis.reaktor.io.adapters.AndroidCompressionAdapter.compress","location":"reaktor-io/dev.shibasis.reaktor.io.adapters/-android-compression-adapter/compress.html","searchKeys":["compress","open override fun compress(request: CompressionRequest): CompressionResponse?","dev.shibasis.reaktor.io.adapters.AndroidCompressionAdapter.compress"]},{"name":"open override fun compress(request: CompressionRequest): CompressionResponse?","description":"dev.shibasis.reaktor.io.adapters.DarwinCompressionAdapter.compress","location":"reaktor-io/dev.shibasis.reaktor.io.adapters/-darwin-compression-adapter/compress.html","searchKeys":["compress","open override fun compress(request: CompressionRequest): CompressionResponse?","dev.shibasis.reaktor.io.adapters.DarwinCompressionAdapter.compress"]},{"name":"open override fun decompress(request: DecompressionRequest): DecompressionResponse?","description":"dev.shibasis.reaktor.io.adapters.AndroidCompressionAdapter.decompress","location":"reaktor-io/dev.shibasis.reaktor.io.adapters/-android-compression-adapter/decompress.html","searchKeys":["decompress","open override fun decompress(request: DecompressionRequest): DecompressionResponse?","dev.shibasis.reaktor.io.adapters.AndroidCompressionAdapter.decompress"]},{"name":"open override fun decompress(request: DecompressionRequest): DecompressionResponse?","description":"dev.shibasis.reaktor.io.adapters.DarwinCompressionAdapter.decompress","location":"reaktor-io/dev.shibasis.reaktor.io.adapters/-darwin-compression-adapter/decompress.html","searchKeys":["decompress","open override fun decompress(request: DecompressionRequest): DecompressionResponse?","dev.shibasis.reaktor.io.adapters.DarwinCompressionAdapter.decompress"]},{"name":"open override val cacheDirectory: String","description":"dev.shibasis.reaktor.io.adapters.AndroidFileAdapter.cacheDirectory","location":"reaktor-io/dev.shibasis.reaktor.io.adapters/-android-file-adapter/cache-directory.html","searchKeys":["cacheDirectory","open override val cacheDirectory: String","dev.shibasis.reaktor.io.adapters.AndroidFileAdapter.cacheDirectory"]},{"name":"open override val cacheDirectory: String","description":"dev.shibasis.reaktor.io.adapters.DarwinFileAdapter.cacheDirectory","location":"reaktor-io/dev.shibasis.reaktor.io.adapters/-darwin-file-adapter/cache-directory.html","searchKeys":["cacheDirectory","open override val cacheDirectory: String","dev.shibasis.reaktor.io.adapters.DarwinFileAdapter.cacheDirectory"]},{"name":"open override val documentDirectory: String","description":"dev.shibasis.reaktor.io.adapters.AndroidFileAdapter.documentDirectory","location":"reaktor-io/dev.shibasis.reaktor.io.adapters/-android-file-adapter/document-directory.html","searchKeys":["documentDirectory","open override val documentDirectory: String","dev.shibasis.reaktor.io.adapters.AndroidFileAdapter.documentDirectory"]},{"name":"open override val documentDirectory: String","description":"dev.shibasis.reaktor.io.adapters.DarwinFileAdapter.documentDirectory","location":"reaktor-io/dev.shibasis.reaktor.io.adapters/-darwin-file-adapter/document-directory.html","searchKeys":["documentDirectory","open override val documentDirectory: String","dev.shibasis.reaktor.io.adapters.DarwinFileAdapter.documentDirectory"]},{"name":"suspend fun getServerIP(): Result<String>","description":"dev.shibasis.reaktor.io.network.getServerIP","location":"reaktor-io/dev.shibasis.reaktor.io.network/get-server-i-p.html","searchKeys":["getServerIP","suspend fun getServerIP(): Result<String>","dev.shibasis.reaktor.io.network.getServerIP"]},{"name":"val HttpResponse.ok: Boolean","description":"dev.shibasis.reaktor.io.network.ok","location":"reaktor-io/dev.shibasis.reaktor.io.network/ok.html","searchKeys":["ok","val HttpResponse.ok: Boolean","dev.shibasis.reaktor.io.network.ok"]},{"name":"val PATH: String","description":"dev.shibasis.reaktor.io.network.HealthCheck.PATH","location":"reaktor-io/dev.shibasis.reaktor.io.network/-health-check/-p-a-t-h.html","searchKeys":["PATH","val PATH: String","dev.shibasis.reaktor.io.network.HealthCheck.PATH"]},{"name":"val active: Boolean","description":"dev.shibasis.reaktor.io.network.HealthCheck.Response.active","location":"reaktor-io/dev.shibasis.reaktor.io.network/-health-check/-response/active.html","searchKeys":["active","val active: Boolean","dev.shibasis.reaktor.io.network.HealthCheck.Response.active"]},{"name":"val base64EncodedString: String","description":"dev.shibasis.reaktor.io.adapters.CompressionResponse.base64EncodedString","location":"reaktor-io/dev.shibasis.reaktor.io.adapters/-compression-response/base64-encoded-string.html","searchKeys":["base64EncodedString","val base64EncodedString: String","dev.shibasis.reaktor.io.adapters.CompressionResponse.base64EncodedString"]},{"name":"val base64EncodedString: String","description":"dev.shibasis.reaktor.io.adapters.DecompressionRequest.base64EncodedString","location":"reaktor-io/dev.shibasis.reaktor.io.adapters/-decompression-request/base64-encoded-string.html","searchKeys":["base64EncodedString","val base64EncodedString: String","dev.shibasis.reaktor.io.adapters.DecompressionRequest.base64EncodedString"]},{"name":"val data: String","description":"dev.shibasis.reaktor.io.adapters.CompressionRequest.data","location":"reaktor-io/dev.shibasis.reaktor.io.adapters/-compression-request/data.html","searchKeys":["data","val data: String","dev.shibasis.reaktor.io.adapters.CompressionRequest.data"]},{"name":"val data: String","description":"dev.shibasis.reaktor.io.adapters.DecompressionResponse.data","location":"reaktor-io/dev.shibasis.reaktor.io.adapters/-decompression-response/data.html","searchKeys":["data","val data: String","dev.shibasis.reaktor.io.adapters.DecompressionResponse.data"]},{"name":"var Feature.Compression: CompressionAdapter<*>?","description":"dev.shibasis.reaktor.io.adapters.Compression","location":"reaktor-io/dev.shibasis.reaktor.io.adapters/-compression.html","searchKeys":["Compression","var Feature.Compression: CompressionAdapter<*>?","dev.shibasis.reaktor.io.adapters.Compression"]},{"name":"var Feature.File: FileAdapter<*>?","description":"dev.shibasis.reaktor.io.adapters.File","location":"reaktor-io/dev.shibasis.reaktor.io.adapters/-file.html","searchKeys":["File","var Feature.File: FileAdapter<*>?","dev.shibasis.reaktor.io.adapters.File"]},{"name":"var serverIp: String?","description":"dev.shibasis.reaktor.io.network.serverIp","location":"reaktor-io/dev.shibasis.reaktor.io.network/server-ip.html","searchKeys":["serverIp","var serverIp: String?","dev.shibasis.reaktor.io.network.serverIp"]},{"name":"abstract class AuthAdapter<Controller>(controller: Controller) : Adapter<Controller> ","description":"dev.shibasis.reaktor.auth.AuthAdapter","location":"reaktor-auth/dev.shibasis.reaktor.auth/-auth-adapter/index.html","searchKeys":["AuthAdapter","abstract class AuthAdapter<Controller>(controller: Controller) : Adapter<Controller> ","dev.shibasis.reaktor.auth.AuthAdapter"]},{"name":"abstract fun toDto(result: ResultRow): T","description":"dev.shibasis.reaktor.auth.Data.toDto","location":"reaktor-auth/dev.shibasis.reaktor.auth/-data/to-dto.html","searchKeys":["toDto","abstract fun toDto(result: ResultRow): T","dev.shibasis.reaktor.auth.Data.toDto"]},{"name":"abstract suspend fun getGoogleUser(): GoogleUser?","description":"dev.shibasis.reaktor.auth.AuthAdapter.getGoogleUser","location":"reaktor-auth/dev.shibasis.reaktor.auth/-auth-adapter/get-google-user.html","searchKeys":["getGoogleUser","abstract suspend fun getGoogleUser(): GoogleUser?","dev.shibasis.reaktor.auth.AuthAdapter.getGoogleUser"]},{"name":"abstract suspend fun googleLogin(): Result<GoogleUser>","description":"dev.shibasis.reaktor.auth.AuthAdapter.googleLogin","location":"reaktor-auth/dev.shibasis.reaktor.auth/-auth-adapter/google-login.html","searchKeys":["googleLogin","abstract suspend fun googleLogin(): Result<GoogleUser>","dev.shibasis.reaktor.auth.AuthAdapter.googleLogin"]},{"name":"abstract suspend fun signOut(): Result<Unit>","description":"dev.shibasis.reaktor.auth.AuthAdapter.signOut","location":"reaktor-auth/dev.shibasis.reaktor.auth/-auth-adapter/sign-out.html","searchKeys":["signOut","abstract suspend fun signOut(): Result<Unit>","dev.shibasis.reaktor.auth.AuthAdapter.signOut"]},{"name":"class AndroidAuthAdapter(activity: ComponentActivity, clientId: String) : AuthAdapter<ComponentActivity> ","description":"dev.shibasis.reaktor.auth.AndroidAuthAdapter","location":"reaktor-auth/dev.shibasis.reaktor.auth/-android-auth-adapter/index.html","searchKeys":["AndroidAuthAdapter","class AndroidAuthAdapter(activity: ComponentActivity, clientId: String) : AuthAdapter<ComponentActivity> ","dev.shibasis.reaktor.auth.AndroidAuthAdapter"]},{"name":"class AppRepository(database: Database) : ExposedAdapter","description":"dev.shibasis.reaktor.auth.repositories.AppRepository","location":"reaktor-auth/dev.shibasis.reaktor.auth.repositories/-app-repository/index.html","searchKeys":["AppRepository","class AppRepository(database: Database) : ExposedAdapter","dev.shibasis.reaktor.auth.repositories.AppRepository"]},{"name":"class DarwinAuthAdapter(controller: UIViewController) : AuthAdapter<UIViewController> ","description":"dev.shibasis.reaktor.auth.DarwinAuthAdapter","location":"reaktor-auth/dev.shibasis.reaktor.auth/-darwin-auth-adapter/index.html","searchKeys":["DarwinAuthAdapter","class DarwinAuthAdapter(controller: UIViewController) : AuthAdapter<UIViewController> ","dev.shibasis.reaktor.auth.DarwinAuthAdapter"]},{"name":"class EntityRepository(database: Database) : ExposedAdapter","description":"dev.shibasis.reaktor.auth.repositories.EntityRepository","location":"reaktor-auth/dev.shibasis.reaktor.auth.repositories/-entity-repository/index.html","searchKeys":["EntityRepository","class EntityRepository(database: Database) : ExposedAdapter","dev.shibasis.reaktor.auth.repositories.EntityRepository"]},{"name":"class JwtAdapter(accessTokenSecret: String = \"AT_SECRET\", accessTokenExpiryInSeconds: Long = 3600, refreshTokenSecret: String = \"RT_SECRET\", refreshTokenExpiryInSeconds: Long = 30 * 24 * 3600, refreshTokenService: RefreshTokenService)","description":"dev.shibasis.reaktor.auth.jwt.JwtAdapter","location":"reaktor-auth/dev.shibasis.reaktor.auth.jwt/-jwt-adapter/index.html","searchKeys":["JwtAdapter","class JwtAdapter(accessTokenSecret: String = \"AT_SECRET\", accessTokenExpiryInSeconds: Long = 3600, refreshTokenSecret: String = \"RT_SECRET\", refreshTokenExpiryInSeconds: Long = 30 * 24 * 3600, refreshTokenService: RefreshTokenService)","dev.shibasis.reaktor.auth.jwt.JwtAdapter"]},{"name":"class LoginService(database: Database, clientId: String)","description":"dev.shibasis.reaktor.auth.services.LoginService","location":"reaktor-auth/dev.shibasis.reaktor.auth.services/-login-service/index.html","searchKeys":["LoginService","class LoginService(database: Database, clientId: String)","dev.shibasis.reaktor.auth.services.LoginService"]},{"name":"class PermissionRepository(database: Database) : ExposedAdapter","description":"dev.shibasis.reaktor.auth.repositories.PermissionRepository","location":"reaktor-auth/dev.shibasis.reaktor.auth.repositories/-permission-repository/index.html","searchKeys":["PermissionRepository","class PermissionRepository(database: Database) : ExposedAdapter","dev.shibasis.reaktor.auth.repositories.PermissionRepository"]},{"name":"class RefreshTokenService(sessionRepository: SessionRepository, maxSessions: Int = 5)","description":"dev.shibasis.reaktor.auth.jwt.RefreshTokenService","location":"reaktor-auth/dev.shibasis.reaktor.auth.jwt/-refresh-token-service/index.html","searchKeys":["RefreshTokenService","class RefreshTokenService(sessionRepository: SessionRepository, maxSessions: Int = 5)","dev.shibasis.reaktor.auth.jwt.RefreshTokenService"]},{"name":"class RolePermissionRepository(database: Database) : ExposedAdapter","description":"dev.shibasis.reaktor.auth.repositories.RolePermissionRepository","location":"reaktor-auth/dev.shibasis.reaktor.auth.repositories/-role-permission-repository/index.html","searchKeys":["RolePermissionRepository","class RolePermissionRepository(database: Database) : ExposedAdapter","dev.shibasis.reaktor.auth.repositories.RolePermissionRepository"]},{"name":"class RoleRepository(database: Database) : ExposedAdapter","description":"dev.shibasis.reaktor.auth.repositories.RoleRepository","location":"reaktor-auth/dev.shibasis.reaktor.auth.repositories/-role-repository/index.html","searchKeys":["RoleRepository","class RoleRepository(database: Database) : ExposedAdapter","dev.shibasis.reaktor.auth.repositories.RoleRepository"]},{"name":"class ServerError(val message: String) : SignInResponse.Failure","description":"dev.shibasis.reaktor.auth.api.SignInResponse.Failure.ServerError","location":"reaktor-auth/dev.shibasis.reaktor.auth.api/-sign-in-response/-failure/-server-error/index.html","searchKeys":["ServerError","class ServerError(val message: String) : SignInResponse.Failure","dev.shibasis.reaktor.auth.api.SignInResponse.Failure.ServerError"]},{"name":"class SessionRepository(database: Database) : ExposedAdapter","description":"dev.shibasis.reaktor.auth.repositories.SessionRepository","location":"reaktor-auth/dev.shibasis.reaktor.auth.repositories/-session-repository/index.html","searchKeys":["SessionRepository","class SessionRepository(database: Database) : ExposedAdapter","dev.shibasis.reaktor.auth.repositories.SessionRepository"]},{"name":"class TokenUtil(secret: String = \"SECRET\", expiresInSeconds: Long)","description":"dev.shibasis.reaktor.auth.jwt.TokenUtil","location":"reaktor-auth/dev.shibasis.reaktor.auth.jwt/-token-util/index.html","searchKeys":["TokenUtil","class TokenUtil(secret: String = \"SECRET\", expiresInSeconds: Long)","dev.shibasis.reaktor.auth.jwt.TokenUtil"]},{"name":"class TokenVerifierService(clientId: String) : Adapter<Unit> ","description":"dev.shibasis.reaktor.auth.jwt.TokenVerifierService","location":"reaktor-auth/dev.shibasis.reaktor.auth.jwt/-token-verifier-service/index.html","searchKeys":["TokenVerifierService","class TokenVerifierService(clientId: String) : Adapter<Unit> ","dev.shibasis.reaktor.auth.jwt.TokenVerifierService"]},{"name":"class UserRepository(database: Database) : ExposedAdapter","description":"dev.shibasis.reaktor.auth.repositories.UserRepository","location":"reaktor-auth/dev.shibasis.reaktor.auth.repositories/-user-repository/index.html","searchKeys":["UserRepository","class UserRepository(database: Database) : ExposedAdapter","dev.shibasis.reaktor.auth.repositories.UserRepository"]},{"name":"class UserRoleRepository(database: Database) : ExposedAdapter","description":"dev.shibasis.reaktor.auth.repositories.UserRoleRepository","location":"reaktor-auth/dev.shibasis.reaktor.auth.repositories/-user-role-repository/index.html","searchKeys":["UserRoleRepository","class UserRoleRepository(database: Database) : ExposedAdapter","dev.shibasis.reaktor.auth.repositories.UserRoleRepository"]},{"name":"constructor(accessTokenSecret: String = \"AT_SECRET\", accessTokenExpiryInSeconds: Long = 3600, refreshTokenSecret: String = \"RT_SECRET\", refreshTokenExpiryInSeconds: Long = 30 * 24 * 3600, refreshTokenService: RefreshTokenService)","description":"dev.shibasis.reaktor.auth.jwt.JwtAdapter.JwtAdapter","location":"reaktor-auth/dev.shibasis.reaktor.auth.jwt/-jwt-adapter/-jwt-adapter.html","searchKeys":["JwtAdapter","constructor(accessTokenSecret: String = \"AT_SECRET\", accessTokenExpiryInSeconds: Long = 3600, refreshTokenSecret: String = \"RT_SECRET\", refreshTokenExpiryInSeconds: Long = 30 * 24 * 3600, refreshTokenService: RefreshTokenService)","dev.shibasis.reaktor.auth.jwt.JwtAdapter.JwtAdapter"]},{"name":"constructor(activity: ComponentActivity, clientId: String)","description":"dev.shibasis.reaktor.auth.AndroidAuthAdapter.AndroidAuthAdapter","location":"reaktor-auth/dev.shibasis.reaktor.auth/-android-auth-adapter/-android-auth-adapter.html","searchKeys":["AndroidAuthAdapter","constructor(activity: ComponentActivity, clientId: String)","dev.shibasis.reaktor.auth.AndroidAuthAdapter.AndroidAuthAdapter"]},{"name":"constructor(clientId: String)","description":"dev.shibasis.reaktor.auth.jwt.TokenVerifierService.TokenVerifierService","location":"reaktor-auth/dev.shibasis.reaktor.auth.jwt/-token-verifier-service/-token-verifier-service.html","searchKeys":["TokenVerifierService","constructor(clientId: String)","dev.shibasis.reaktor.auth.jwt.TokenVerifierService.TokenVerifierService"]},{"name":"constructor(controller: Controller)","description":"dev.shibasis.reaktor.auth.AuthAdapter.AuthAdapter","location":"reaktor-auth/dev.shibasis.reaktor.auth/-auth-adapter/-auth-adapter.html","searchKeys":["AuthAdapter","constructor(controller: Controller)","dev.shibasis.reaktor.auth.AuthAdapter.AuthAdapter"]},{"name":"constructor(controller: UIViewController)","description":"dev.shibasis.reaktor.auth.DarwinAuthAdapter.DarwinAuthAdapter","location":"reaktor-auth/dev.shibasis.reaktor.auth/-darwin-auth-adapter/-darwin-auth-adapter.html","searchKeys":["DarwinAuthAdapter","constructor(controller: UIViewController)","dev.shibasis.reaktor.auth.DarwinAuthAdapter.DarwinAuthAdapter"]},{"name":"constructor(database: Database)","description":"dev.shibasis.reaktor.auth.repositories.AppRepository.AppRepository","location":"reaktor-auth/dev.shibasis.reaktor.auth.repositories/-app-repository/-app-repository.html","searchKeys":["AppRepository","constructor(database: Database)","dev.shibasis.reaktor.auth.repositories.AppRepository.AppRepository"]},{"name":"constructor(database: Database)","description":"dev.shibasis.reaktor.auth.repositories.EntityRepository.EntityRepository","location":"reaktor-auth/dev.shibasis.reaktor.auth.repositories/-entity-repository/-entity-repository.html","searchKeys":["EntityRepository","constructor(database: Database)","dev.shibasis.reaktor.auth.repositories.EntityRepository.EntityRepository"]},{"name":"constructor(database: Database)","description":"dev.shibasis.reaktor.auth.repositories.PermissionRepository.PermissionRepository","location":"reaktor-auth/dev.shibasis.reaktor.auth.repositories/-permission-repository/-permission-repository.html","searchKeys":["PermissionRepository","constructor(database: Database)","dev.shibasis.reaktor.auth.repositories.PermissionRepository.PermissionRepository"]},{"name":"constructor(database: Database)","description":"dev.shibasis.reaktor.auth.repositories.RolePermissionRepository.RolePermissionRepository","location":"reaktor-auth/dev.shibasis.reaktor.auth.repositories/-role-permission-repository/-role-permission-repository.html","searchKeys":["RolePermissionRepository","constructor(database: Database)","dev.shibasis.reaktor.auth.repositories.RolePermissionRepository.RolePermissionRepository"]},{"name":"constructor(database: Database)","description":"dev.shibasis.reaktor.auth.repositories.RoleRepository.RoleRepository","location":"reaktor-auth/dev.shibasis.reaktor.auth.repositories/-role-repository/-role-repository.html","searchKeys":["RoleRepository","constructor(database: Database)","dev.shibasis.reaktor.auth.repositories.RoleRepository.RoleRepository"]},{"name":"constructor(database: Database)","description":"dev.shibasis.reaktor.auth.repositories.SessionRepository.SessionRepository","location":"reaktor-auth/dev.shibasis.reaktor.auth.repositories/-session-repository/-session-repository.html","searchKeys":["SessionRepository","constructor(database: Database)","dev.shibasis.reaktor.auth.repositories.SessionRepository.SessionRepository"]},{"name":"constructor(database: Database)","description":"dev.shibasis.reaktor.auth.repositories.UserRepository.UserRepository","location":"reaktor-auth/dev.shibasis.reaktor.auth.repositories/-user-repository/-user-repository.html","searchKeys":["UserRepository","constructor(database: Database)","dev.shibasis.reaktor.auth.repositories.UserRepository.UserRepository"]},{"name":"constructor(database: Database)","description":"dev.shibasis.reaktor.auth.repositories.UserRoleRepository.UserRoleRepository","location":"reaktor-auth/dev.shibasis.reaktor.auth.repositories/-user-role-repository/-user-role-repository.html","searchKeys":["UserRoleRepository","constructor(database: Database)","dev.shibasis.reaktor.auth.repositories.UserRoleRepository.UserRoleRepository"]},{"name":"constructor(database: Database)","description":"dev.shibasis.reaktor.auth.utils.ExposedAdapter.ExposedAdapter","location":"reaktor-auth/dev.shibasis.reaktor.auth.utils/-exposed-adapter/-exposed-adapter.html","searchKeys":["ExposedAdapter","constructor(database: Database)","dev.shibasis.reaktor.auth.utils.ExposedAdapter.ExposedAdapter"]},{"name":"constructor(database: Database, clientId: String)","description":"dev.shibasis.reaktor.auth.services.LoginService.LoginService","location":"reaktor-auth/dev.shibasis.reaktor.auth.services/-login-service/-login-service.html","searchKeys":["LoginService","constructor(database: Database, clientId: String)","dev.shibasis.reaktor.auth.services.LoginService.LoginService"]},{"name":"constructor(id: Long, name: String, appId: Long, createdAt: LocalDateTime, updatedAt: LocalDateTime)","description":"dev.shibasis.reaktor.auth.Permission.Permission","location":"reaktor-auth/dev.shibasis.reaktor.auth/-permission/-permission.html","searchKeys":["Permission","constructor(id: Long, name: String, appId: Long, createdAt: LocalDateTime, updatedAt: LocalDateTime)","dev.shibasis.reaktor.auth.Permission.Permission"]},{"name":"constructor(id: Long, name: String, appId: Long, createdAt: LocalDateTime, updatedAt: LocalDateTime)","description":"dev.shibasis.reaktor.auth.Role.Role","location":"reaktor-auth/dev.shibasis.reaktor.auth/-role/-role.html","searchKeys":["Role","constructor(id: Long, name: String, appId: Long, createdAt: LocalDateTime, updatedAt: LocalDateTime)","dev.shibasis.reaktor.auth.Role.Role"]},{"name":"constructor(id: Long, name: String, data: JsonElement, appId: Long, createdAt: LocalDateTime, updatedAt: LocalDateTime)","description":"dev.shibasis.reaktor.auth.Entity.Entity","location":"reaktor-auth/dev.shibasis.reaktor.auth/-entity/-entity.html","searchKeys":["Entity","constructor(id: Long, name: String, data: JsonElement, appId: Long, createdAt: LocalDateTime, updatedAt: LocalDateTime)","dev.shibasis.reaktor.auth.Entity.Entity"]},{"name":"constructor(id: Long, name: String, data: JsonElement, createdAt: LocalDateTime, updatedAt: LocalDateTime)","description":"dev.shibasis.reaktor.auth.App.App","location":"reaktor-auth/dev.shibasis.reaktor.auth/-app/-app.html","searchKeys":["App","constructor(id: Long, name: String, data: JsonElement, createdAt: LocalDateTime, updatedAt: LocalDateTime)","dev.shibasis.reaktor.auth.App.App"]},{"name":"constructor(id: Long, name: String, socialId: String, appId: Long, data: JsonElement, createdAt: LocalDateTime, updatedAt: LocalDateTime)","description":"dev.shibasis.reaktor.auth.User.User","location":"reaktor-auth/dev.shibasis.reaktor.auth/-user/-user.html","searchKeys":["User","constructor(id: Long, name: String, socialId: String, appId: Long, data: JsonElement, createdAt: LocalDateTime, updatedAt: LocalDateTime)","dev.shibasis.reaktor.auth.User.User"]},{"name":"constructor(id: Uuid, userId: Long, appId: Long, expiresAt: LocalDateTime, createdAt: LocalDateTime)","description":"dev.shibasis.reaktor.auth.Session.Session","location":"reaktor-auth/dev.shibasis.reaktor.auth/-session/-session.html","searchKeys":["Session","constructor(id: Uuid, userId: Long, appId: Long, expiresAt: LocalDateTime, createdAt: LocalDateTime)","dev.shibasis.reaktor.auth.Session.Session"]},{"name":"constructor(idToken: String, appId: Long, providerId: String = \"Google\")","description":"dev.shibasis.reaktor.auth.api.SignInRequest.SignInRequest","location":"reaktor-auth/dev.shibasis.reaktor.auth.api/-sign-in-request/-sign-in-request.html","searchKeys":["SignInRequest","constructor(idToken: String, appId: Long, providerId: String = \"Google\")","dev.shibasis.reaktor.auth.api.SignInRequest.SignInRequest"]},{"name":"constructor(idToken: String, name: String, emailId: String, imageUrl: String)","description":"dev.shibasis.reaktor.auth.GoogleUser.GoogleUser","location":"reaktor-auth/dev.shibasis.reaktor.auth/-google-user/-google-user.html","searchKeys":["GoogleUser","constructor(idToken: String, name: String, emailId: String, imageUrl: String)","dev.shibasis.reaktor.auth.GoogleUser.GoogleUser"]},{"name":"constructor(message: String)","description":"dev.shibasis.reaktor.auth.api.SignInResponse.Failure.ServerError.ServerError","location":"reaktor-auth/dev.shibasis.reaktor.auth.api/-sign-in-response/-failure/-server-error/-server-error.html","searchKeys":["ServerError","constructor(message: String)","dev.shibasis.reaktor.auth.api.SignInResponse.Failure.ServerError.ServerError"]},{"name":"constructor(secret: String = \"SECRET\", expiresInSeconds: Long)","description":"dev.shibasis.reaktor.auth.jwt.TokenUtil.TokenUtil","location":"reaktor-auth/dev.shibasis.reaktor.auth.jwt/-token-util/-token-util.html","searchKeys":["TokenUtil","constructor(secret: String = \"SECRET\", expiresInSeconds: Long)","dev.shibasis.reaktor.auth.jwt.TokenUtil.TokenUtil"]},{"name":"constructor(sessionRepository: SessionRepository, maxSessions: Int = 5)","description":"dev.shibasis.reaktor.auth.jwt.RefreshTokenService.RefreshTokenService","location":"reaktor-auth/dev.shibasis.reaktor.auth.jwt/-refresh-token-service/-refresh-token-service.html","searchKeys":["RefreshTokenService","constructor(sessionRepository: SessionRepository, maxSessions: Int = 5)","dev.shibasis.reaktor.auth.jwt.RefreshTokenService.RefreshTokenService"]},{"name":"constructor(socialId: String)","description":"dev.shibasis.reaktor.auth.api.SignInResponse.Failure.RequiresSignUp.RequiresSignUp","location":"reaktor-auth/dev.shibasis.reaktor.auth.api/-sign-in-response/-failure/-requires-sign-up/-requires-sign-up.html","searchKeys":["RequiresSignUp","constructor(socialId: String)","dev.shibasis.reaktor.auth.api.SignInResponse.Failure.RequiresSignUp.RequiresSignUp"]},{"name":"constructor(socialId: String)","description":"dev.shibasis.reaktor.auth.api.SignInResponse.Success.Success","location":"reaktor-auth/dev.shibasis.reaktor.auth.api/-sign-in-response/-success/-success.html","searchKeys":["Success","constructor(socialId: String)","dev.shibasis.reaktor.auth.api.SignInResponse.Success.Success"]},{"name":"data class App(val id: Long, val name: String, val data: JsonElement, val createdAt: LocalDateTime, val updatedAt: LocalDateTime)","description":"dev.shibasis.reaktor.auth.App","location":"reaktor-auth/dev.shibasis.reaktor.auth/-app/index.html","searchKeys":["App","data class App(val id: Long, val name: String, val data: JsonElement, val createdAt: LocalDateTime, val updatedAt: LocalDateTime)","dev.shibasis.reaktor.auth.App"]},{"name":"data class Entity(val id: Long, val name: String, val data: JsonElement, val appId: Long, val createdAt: LocalDateTime, val updatedAt: LocalDateTime)","description":"dev.shibasis.reaktor.auth.Entity","location":"reaktor-auth/dev.shibasis.reaktor.auth/-entity/index.html","searchKeys":["Entity","data class Entity(val id: Long, val name: String, val data: JsonElement, val appId: Long, val createdAt: LocalDateTime, val updatedAt: LocalDateTime)","dev.shibasis.reaktor.auth.Entity"]},{"name":"data class GoogleUser(val idToken: String, val name: String, val emailId: String, val imageUrl: String)","description":"dev.shibasis.reaktor.auth.GoogleUser","location":"reaktor-auth/dev.shibasis.reaktor.auth/-google-user/index.html","searchKeys":["GoogleUser","data class GoogleUser(val idToken: String, val name: String, val emailId: String, val imageUrl: String)","dev.shibasis.reaktor.auth.GoogleUser"]},{"name":"data class Permission(val id: Long, val name: String, val appId: Long, val createdAt: LocalDateTime, val updatedAt: LocalDateTime)","description":"dev.shibasis.reaktor.auth.Permission","location":"reaktor-auth/dev.shibasis.reaktor.auth/-permission/index.html","searchKeys":["Permission","data class Permission(val id: Long, val name: String, val appId: Long, val createdAt: LocalDateTime, val updatedAt: LocalDateTime)","dev.shibasis.reaktor.auth.Permission"]},{"name":"data class RequiresSignUp(val socialId: String) : SignInResponse.Failure","description":"dev.shibasis.reaktor.auth.api.SignInResponse.Failure.RequiresSignUp","location":"reaktor-auth/dev.shibasis.reaktor.auth.api/-sign-in-response/-failure/-requires-sign-up/index.html","searchKeys":["RequiresSignUp","data class RequiresSignUp(val socialId: String) : SignInResponse.Failure","dev.shibasis.reaktor.auth.api.SignInResponse.Failure.RequiresSignUp"]},{"name":"data class Role(val id: Long, val name: String, val appId: Long, val createdAt: LocalDateTime, val updatedAt: LocalDateTime)","description":"dev.shibasis.reaktor.auth.Role","location":"reaktor-auth/dev.shibasis.reaktor.auth/-role/index.html","searchKeys":["Role","data class Role(val id: Long, val name: String, val appId: Long, val createdAt: LocalDateTime, val updatedAt: LocalDateTime)","dev.shibasis.reaktor.auth.Role"]},{"name":"data class Session constructor(val id: Uuid, val userId: Long, val appId: Long, val expiresAt: LocalDateTime, val createdAt: LocalDateTime)","description":"dev.shibasis.reaktor.auth.Session","location":"reaktor-auth/dev.shibasis.reaktor.auth/-session/index.html","searchKeys":["Session","data class Session constructor(val id: Uuid, val userId: Long, val appId: Long, val expiresAt: LocalDateTime, val createdAt: LocalDateTime)","dev.shibasis.reaktor.auth.Session"]},{"name":"data class SignInRequest(val idToken: String, val appId: Long, val providerId: String = \"Google\")","description":"dev.shibasis.reaktor.auth.api.SignInRequest","location":"reaktor-auth/dev.shibasis.reaktor.auth.api/-sign-in-request/index.html","searchKeys":["SignInRequest","data class SignInRequest(val idToken: String, val appId: Long, val providerId: String = \"Google\")","dev.shibasis.reaktor.auth.api.SignInRequest"]},{"name":"data class Success(val socialId: String) : SignInResponse","description":"dev.shibasis.reaktor.auth.api.SignInResponse.Success","location":"reaktor-auth/dev.shibasis.reaktor.auth.api/-sign-in-response/-success/index.html","searchKeys":["Success","data class Success(val socialId: String) : SignInResponse","dev.shibasis.reaktor.auth.api.SignInResponse.Success"]},{"name":"data class User(val id: Long, val name: String, val socialId: String, val appId: Long, val data: JsonElement, val createdAt: LocalDateTime, val updatedAt: LocalDateTime)","description":"dev.shibasis.reaktor.auth.User","location":"reaktor-auth/dev.shibasis.reaktor.auth/-user/index.html","searchKeys":["User","data class User(val id: Long, val name: String, val socialId: String, val appId: Long, val data: JsonElement, val createdAt: LocalDateTime, val updatedAt: LocalDateTime)","dev.shibasis.reaktor.auth.User"]},{"name":"data object InvalidAppId : SignInResponse.Failure","description":"dev.shibasis.reaktor.auth.api.SignInResponse.Failure.InvalidAppId","location":"reaktor-auth/dev.shibasis.reaktor.auth.api/-sign-in-response/-failure/-invalid-app-id/index.html","searchKeys":["InvalidAppId","data object InvalidAppId : SignInResponse.Failure","dev.shibasis.reaktor.auth.api.SignInResponse.Failure.InvalidAppId"]},{"name":"data object InvalidGoogleIdToken : SignInResponse.Failure","description":"dev.shibasis.reaktor.auth.api.SignInResponse.Failure.InvalidGoogleIdToken","location":"reaktor-auth/dev.shibasis.reaktor.auth.api/-sign-in-response/-failure/-invalid-google-id-token/index.html","searchKeys":["InvalidGoogleIdToken","data object InvalidGoogleIdToken : SignInResponse.Failure","dev.shibasis.reaktor.auth.api.SignInResponse.Failure.InvalidGoogleIdToken"]},{"name":"fun <T> fail(message: String): Result<T>","description":"dev.shibasis.reaktor.auth.utils.fail","location":"reaktor-auth/dev.shibasis.reaktor.auth.utils/fail.html","searchKeys":["fail","fun <T> fail(message: String): Result<T>","dev.shibasis.reaktor.auth.utils.fail"]},{"name":"fun <T> succeed(value: T): Result<T>","description":"dev.shibasis.reaktor.auth.utils.succeed","location":"reaktor-auth/dev.shibasis.reaktor.auth.utils/succeed.html","searchKeys":["succeed","fun <T> succeed(value: T): Result<T>","dev.shibasis.reaktor.auth.utils.succeed"]},{"name":"fun Date.toKotlinDateTime(): LocalDateTime","description":"dev.shibasis.reaktor.auth.toKotlinDateTime","location":"reaktor-auth/dev.shibasis.reaktor.auth/to-kotlin-date-time.html","searchKeys":["toKotlinDateTime","fun Date.toKotlinDateTime(): LocalDateTime","dev.shibasis.reaktor.auth.toKotlinDateTime"]},{"name":"fun GIDGoogleUser.toGoogleUser(): GoogleUser","description":"dev.shibasis.reaktor.auth.toGoogleUser","location":"reaktor-auth/dev.shibasis.reaktor.auth/to-google-user.html","searchKeys":["toGoogleUser","fun GIDGoogleUser.toGoogleUser(): GoogleUser","dev.shibasis.reaktor.auth.toGoogleUser"]},{"name":"fun GoogleIdTokenCredential.toGoogleUser(): GoogleUser","description":"dev.shibasis.reaktor.auth.toGoogleUser","location":"reaktor-auth/dev.shibasis.reaktor.auth/to-google-user.html","searchKeys":["toGoogleUser","fun GoogleIdTokenCredential.toGoogleUser(): GoogleUser","dev.shibasis.reaktor.auth.toGoogleUser"]},{"name":"fun Theme.AuthButton(authAdapter: AuthAdapter<*>, modifier: Modifier = Modifier, onClick: () -> Unit = {})","description":"dev.shibasis.reaktor.auth.ui.AuthButton","location":"reaktor-auth/dev.shibasis.reaktor.auth.ui/-auth-button.html","searchKeys":["AuthButton","fun Theme.AuthButton(authAdapter: AuthAdapter<*>, modifier: Modifier = Modifier, onClick: () -> Unit = {})","dev.shibasis.reaktor.auth.ui.AuthButton"]},{"name":"fun appRouter(): RouterFunction<ServerResponse>","description":"dev.shibasis.reaktor.auth.apps.appRouter","location":"reaktor-auth/dev.shibasis.reaktor.auth.apps/app-router.html","searchKeys":["appRouter","fun appRouter(): RouterFunction<ServerResponse>","dev.shibasis.reaktor.auth.apps.appRouter"]},{"name":"fun authRouter(database: Database, clientId: String): RouterFunction<ServerResponse>","description":"dev.shibasis.reaktor.auth.authRouter","location":"reaktor-auth/dev.shibasis.reaktor.auth/auth-router.html","searchKeys":["authRouter","fun authRouter(database: Database, clientId: String): RouterFunction<ServerResponse>","dev.shibasis.reaktor.auth.authRouter"]},{"name":"fun calculateExpiry(): Date","description":"dev.shibasis.reaktor.auth.jwt.TokenUtil.calculateExpiry","location":"reaktor-auth/dev.shibasis.reaktor.auth.jwt/-token-util/calculate-expiry.html","searchKeys":["calculateExpiry","fun calculateExpiry(): Date","dev.shibasis.reaktor.auth.jwt.TokenUtil.calculateExpiry"]},{"name":"fun createApp(name: String, data: JsonElement): Result<Long>","description":"dev.shibasis.reaktor.auth.repositories.AppRepository.createApp","location":"reaktor-auth/dev.shibasis.reaktor.auth.repositories/-app-repository/create-app.html","searchKeys":["createApp","fun createApp(name: String, data: JsonElement): Result<Long>","dev.shibasis.reaktor.auth.repositories.AppRepository.createApp"]},{"name":"fun createEntity(name: String, data: JsonElement, appId: Long): Result<Long>","description":"dev.shibasis.reaktor.auth.repositories.EntityRepository.createEntity","location":"reaktor-auth/dev.shibasis.reaktor.auth.repositories/-entity-repository/create-entity.html","searchKeys":["createEntity","fun createEntity(name: String, data: JsonElement, appId: Long): Result<Long>","dev.shibasis.reaktor.auth.repositories.EntityRepository.createEntity"]},{"name":"fun createPermission(name: String, appId: Long): Result<Long>","description":"dev.shibasis.reaktor.auth.repositories.PermissionRepository.createPermission","location":"reaktor-auth/dev.shibasis.reaktor.auth.repositories/-permission-repository/create-permission.html","searchKeys":["createPermission","fun createPermission(name: String, appId: Long): Result<Long>","dev.shibasis.reaktor.auth.repositories.PermissionRepository.createPermission"]},{"name":"fun createRole(name: String, appId: Long): Result<Long>","description":"dev.shibasis.reaktor.auth.repositories.RoleRepository.createRole","location":"reaktor-auth/dev.shibasis.reaktor.auth.repositories/-role-repository/create-role.html","searchKeys":["createRole","fun createRole(name: String, appId: Long): Result<Long>","dev.shibasis.reaktor.auth.repositories.RoleRepository.createRole"]},{"name":"fun createRolePermission(roleId: Long, permissionId: Long): Result<Long>","description":"dev.shibasis.reaktor.auth.repositories.RolePermissionRepository.createRolePermission","location":"reaktor-auth/dev.shibasis.reaktor.auth.repositories/-role-permission-repository/create-role-permission.html","searchKeys":["createRolePermission","fun createRolePermission(roleId: Long, permissionId: Long): Result<Long>","dev.shibasis.reaktor.auth.repositories.RolePermissionRepository.createRolePermission"]},{"name":"fun createSession(userId: Long, appId: Long, expiresAt: LocalDateTime): Result<UUID>","description":"dev.shibasis.reaktor.auth.repositories.SessionRepository.createSession","location":"reaktor-auth/dev.shibasis.reaktor.auth.repositories/-session-repository/create-session.html","searchKeys":["createSession","fun createSession(userId: Long, appId: Long, expiresAt: LocalDateTime): Result<UUID>","dev.shibasis.reaktor.auth.repositories.SessionRepository.createSession"]},{"name":"fun createUser(name: String, socialId: String, appId: Long, data: JsonElement): Result<Long>","description":"dev.shibasis.reaktor.auth.repositories.UserRepository.createUser","location":"reaktor-auth/dev.shibasis.reaktor.auth.repositories/-user-repository/create-user.html","searchKeys":["createUser","fun createUser(name: String, socialId: String, appId: Long, data: JsonElement): Result<Long>","dev.shibasis.reaktor.auth.repositories.UserRepository.createUser"]},{"name":"fun createUserRole(userId: Long, roleId: Long, entityId: Long): Result<Long>","description":"dev.shibasis.reaktor.auth.repositories.UserRoleRepository.createUserRole","location":"reaktor-auth/dev.shibasis.reaktor.auth.repositories/-user-role-repository/create-user-role.html","searchKeys":["createUserRole","fun createUserRole(userId: Long, roleId: Long, entityId: Long): Result<Long>","dev.shibasis.reaktor.auth.repositories.UserRoleRepository.createUserRole"]},{"name":"fun deleteApp(id: Long): Result<Int>","description":"dev.shibasis.reaktor.auth.repositories.AppRepository.deleteApp","location":"reaktor-auth/dev.shibasis.reaktor.auth.repositories/-app-repository/delete-app.html","searchKeys":["deleteApp","fun deleteApp(id: Long): Result<Int>","dev.shibasis.reaktor.auth.repositories.AppRepository.deleteApp"]},{"name":"fun deleteEntity(id: Long): Result<Int>","description":"dev.shibasis.reaktor.auth.repositories.EntityRepository.deleteEntity","location":"reaktor-auth/dev.shibasis.reaktor.auth.repositories/-entity-repository/delete-entity.html","searchKeys":["deleteEntity","fun deleteEntity(id: Long): Result<Int>","dev.shibasis.reaktor.auth.repositories.EntityRepository.deleteEntity"]},{"name":"fun deletePermission(id: Long): Result<Int>","description":"dev.shibasis.reaktor.auth.repositories.PermissionRepository.deletePermission","location":"reaktor-auth/dev.shibasis.reaktor.auth.repositories/-permission-repository/delete-permission.html","searchKeys":["deletePermission","fun deletePermission(id: Long): Result<Int>","dev.shibasis.reaktor.auth.repositories.PermissionRepository.deletePermission"]},{"name":"fun deleteRole(id: Long): Result<Int>","description":"dev.shibasis.reaktor.auth.repositories.RoleRepository.deleteRole","location":"reaktor-auth/dev.shibasis.reaktor.auth.repositories/-role-repository/delete-role.html","searchKeys":["deleteRole","fun deleteRole(id: Long): Result<Int>","dev.shibasis.reaktor.auth.repositories.RoleRepository.deleteRole"]},{"name":"fun deleteRolePermission(roleId: Long, permissionId: Long): Result<Int>","description":"dev.shibasis.reaktor.auth.repositories.RolePermissionRepository.deleteRolePermission","location":"reaktor-auth/dev.shibasis.reaktor.auth.repositories/-role-permission-repository/delete-role-permission.html","searchKeys":["deleteRolePermission","fun deleteRolePermission(roleId: Long, permissionId: Long): Result<Int>","dev.shibasis.reaktor.auth.repositories.RolePermissionRepository.deleteRolePermission"]},{"name":"fun deleteRolePermissionsByRoleId(roleId: Long): Result<Int>","description":"dev.shibasis.reaktor.auth.repositories.RolePermissionRepository.deleteRolePermissionsByRoleId","location":"reaktor-auth/dev.shibasis.reaktor.auth.repositories/-role-permission-repository/delete-role-permissions-by-role-id.html","searchKeys":["deleteRolePermissionsByRoleId","fun deleteRolePermissionsByRoleId(roleId: Long): Result<Int>","dev.shibasis.reaktor.auth.repositories.RolePermissionRepository.deleteRolePermissionsByRoleId"]},{"name":"fun deleteSession(id: UUID): Result<Int>","description":"dev.shibasis.reaktor.auth.repositories.SessionRepository.deleteSession","location":"reaktor-auth/dev.shibasis.reaktor.auth.repositories/-session-repository/delete-session.html","searchKeys":["deleteSession","fun deleteSession(id: UUID): Result<Int>","dev.shibasis.reaktor.auth.repositories.SessionRepository.deleteSession"]},{"name":"fun deleteUser(id: Long): Result<Int>","description":"dev.shibasis.reaktor.auth.repositories.UserRepository.deleteUser","location":"reaktor-auth/dev.shibasis.reaktor.auth.repositories/-user-repository/delete-user.html","searchKeys":["deleteUser","fun deleteUser(id: Long): Result<Int>","dev.shibasis.reaktor.auth.repositories.UserRepository.deleteUser"]},{"name":"fun deleteUserRole(userId: Long, roleId: Long, entityId: Long): Result<Int>","description":"dev.shibasis.reaktor.auth.repositories.UserRoleRepository.deleteUserRole","location":"reaktor-auth/dev.shibasis.reaktor.auth.repositories/-user-role-repository/delete-user-role.html","searchKeys":["deleteUserRole","fun deleteUserRole(userId: Long, roleId: Long, entityId: Long): Result<Int>","dev.shibasis.reaktor.auth.repositories.UserRoleRepository.deleteUserRole"]},{"name":"fun deleteUserRolesByEntityId(entityId: Long): Result<Int>","description":"dev.shibasis.reaktor.auth.repositories.UserRoleRepository.deleteUserRolesByEntityId","location":"reaktor-auth/dev.shibasis.reaktor.auth.repositories/-user-role-repository/delete-user-roles-by-entity-id.html","searchKeys":["deleteUserRolesByEntityId","fun deleteUserRolesByEntityId(entityId: Long): Result<Int>","dev.shibasis.reaktor.auth.repositories.UserRoleRepository.deleteUserRolesByEntityId"]},{"name":"fun deleteUserRolesByRoleId(roleId: Long): Result<Int>","description":"dev.shibasis.reaktor.auth.repositories.UserRoleRepository.deleteUserRolesByRoleId","location":"reaktor-auth/dev.shibasis.reaktor.auth.repositories/-user-role-repository/delete-user-roles-by-role-id.html","searchKeys":["deleteUserRolesByRoleId","fun deleteUserRolesByRoleId(roleId: Long): Result<Int>","dev.shibasis.reaktor.auth.repositories.UserRoleRepository.deleteUserRolesByRoleId"]},{"name":"fun deleteUserRolesByUserId(userId: Long): Result<Int>","description":"dev.shibasis.reaktor.auth.repositories.UserRoleRepository.deleteUserRolesByUserId","location":"reaktor-auth/dev.shibasis.reaktor.auth.repositories/-user-role-repository/delete-user-roles-by-user-id.html","searchKeys":["deleteUserRolesByUserId","fun deleteUserRolesByUserId(userId: Long): Result<Int>","dev.shibasis.reaktor.auth.repositories.UserRoleRepository.deleteUserRolesByUserId"]},{"name":"fun fetchSession(refreshTokenUtil: TokenUtil, refreshToken: String, appId: Long): Result<Session>","description":"dev.shibasis.reaktor.auth.jwt.RefreshTokenService.fetchSession","location":"reaktor-auth/dev.shibasis.reaktor.auth.jwt/-refresh-token-service/fetch-session.html","searchKeys":["fetchSession","fun fetchSession(refreshTokenUtil: TokenUtil, refreshToken: String, appId: Long): Result<Session>","dev.shibasis.reaktor.auth.jwt.RefreshTokenService.fetchSession"]},{"name":"fun generateAccessToken(refreshToken: String, userId: Long, appId: Long): Result<String>","description":"dev.shibasis.reaktor.auth.jwt.JwtAdapter.generateAccessToken","location":"reaktor-auth/dev.shibasis.reaktor.auth.jwt/-jwt-adapter/generate-access-token.html","searchKeys":["generateAccessToken","fun generateAccessToken(refreshToken: String, userId: Long, appId: Long): Result<String>","dev.shibasis.reaktor.auth.jwt.JwtAdapter.generateAccessToken"]},{"name":"fun generateJwt(expiresAt: Date = calculateExpiry(), claimBuilder: JWTCreator.Builder.() -> Unit): String","description":"dev.shibasis.reaktor.auth.jwt.TokenUtil.generateJwt","location":"reaktor-auth/dev.shibasis.reaktor.auth.jwt/-token-util/generate-jwt.html","searchKeys":["generateJwt","fun generateJwt(expiresAt: Date = calculateExpiry(), claimBuilder: JWTCreator.Builder.() -> Unit): String","dev.shibasis.reaktor.auth.jwt.TokenUtil.generateJwt"]},{"name":"fun generateRefreshToken(userId: Long, appId: Long): Result<String>","description":"dev.shibasis.reaktor.auth.jwt.JwtAdapter.generateRefreshToken","location":"reaktor-auth/dev.shibasis.reaktor.auth.jwt/-jwt-adapter/generate-refresh-token.html","searchKeys":["generateRefreshToken","fun generateRefreshToken(userId: Long, appId: Long): Result<String>","dev.shibasis.reaktor.auth.jwt.JwtAdapter.generateRefreshToken"]},{"name":"fun getApp(id: Long): Result<ResultRow>","description":"dev.shibasis.reaktor.auth.repositories.AppRepository.getApp","location":"reaktor-auth/dev.shibasis.reaktor.auth.repositories/-app-repository/get-app.html","searchKeys":["getApp","fun getApp(id: Long): Result<ResultRow>","dev.shibasis.reaktor.auth.repositories.AppRepository.getApp"]},{"name":"fun getApps(): Result<List<App>>","description":"dev.shibasis.reaktor.auth.repositories.AppRepository.getApps","location":"reaktor-auth/dev.shibasis.reaktor.auth.repositories/-app-repository/get-apps.html","searchKeys":["getApps","fun getApps(): Result<List<App>>","dev.shibasis.reaktor.auth.repositories.AppRepository.getApps"]},{"name":"fun getEntities(appId: Long): Result<List<Entity>>","description":"dev.shibasis.reaktor.auth.repositories.EntityRepository.getEntities","location":"reaktor-auth/dev.shibasis.reaktor.auth.repositories/-entity-repository/get-entities.html","searchKeys":["getEntities","fun getEntities(appId: Long): Result<List<Entity>>","dev.shibasis.reaktor.auth.repositories.EntityRepository.getEntities"]},{"name":"fun getEntity(id: Long): Result<ResultRow>","description":"dev.shibasis.reaktor.auth.repositories.EntityRepository.getEntity","location":"reaktor-auth/dev.shibasis.reaktor.auth.repositories/-entity-repository/get-entity.html","searchKeys":["getEntity","fun getEntity(id: Long): Result<ResultRow>","dev.shibasis.reaktor.auth.repositories.EntityRepository.getEntity"]},{"name":"fun getPermission(id: Long): Result<ResultRow>","description":"dev.shibasis.reaktor.auth.repositories.PermissionRepository.getPermission","location":"reaktor-auth/dev.shibasis.reaktor.auth.repositories/-permission-repository/get-permission.html","searchKeys":["getPermission","fun getPermission(id: Long): Result<ResultRow>","dev.shibasis.reaktor.auth.repositories.PermissionRepository.getPermission"]},{"name":"fun getPermissions(appId: Long): Result<List<Permission>>","description":"dev.shibasis.reaktor.auth.repositories.PermissionRepository.getPermissions","location":"reaktor-auth/dev.shibasis.reaktor.auth.repositories/-permission-repository/get-permissions.html","searchKeys":["getPermissions","fun getPermissions(appId: Long): Result<List<Permission>>","dev.shibasis.reaktor.auth.repositories.PermissionRepository.getPermissions"]},{"name":"fun getPermissionsByRoleId(roleId: Long): Result<List<Permission>>","description":"dev.shibasis.reaktor.auth.repositories.RolePermissionRepository.getPermissionsByRoleId","location":"reaktor-auth/dev.shibasis.reaktor.auth.repositories/-role-permission-repository/get-permissions-by-role-id.html","searchKeys":["getPermissionsByRoleId","fun getPermissionsByRoleId(roleId: Long): Result<List<Permission>>","dev.shibasis.reaktor.auth.repositories.RolePermissionRepository.getPermissionsByRoleId"]},{"name":"fun getRole(id: Long): Result<ResultRow>","description":"dev.shibasis.reaktor.auth.repositories.RoleRepository.getRole","location":"reaktor-auth/dev.shibasis.reaktor.auth.repositories/-role-repository/get-role.html","searchKeys":["getRole","fun getRole(id: Long): Result<ResultRow>","dev.shibasis.reaktor.auth.repositories.RoleRepository.getRole"]},{"name":"fun getRolePermissions(roleId: Long): Result<List<Permission>>","description":"dev.shibasis.reaktor.auth.repositories.RolePermissionRepository.getRolePermissions","location":"reaktor-auth/dev.shibasis.reaktor.auth.repositories/-role-permission-repository/get-role-permissions.html","searchKeys":["getRolePermissions","fun getRolePermissions(roleId: Long): Result<List<Permission>>","dev.shibasis.reaktor.auth.repositories.RolePermissionRepository.getRolePermissions"]},{"name":"fun getRoles(appId: Long): Result<List<Role>>","description":"dev.shibasis.reaktor.auth.repositories.RoleRepository.getRoles","location":"reaktor-auth/dev.shibasis.reaktor.auth.repositories/-role-repository/get-roles.html","searchKeys":["getRoles","fun getRoles(appId: Long): Result<List<Role>>","dev.shibasis.reaktor.auth.repositories.RoleRepository.getRoles"]},{"name":"fun getRolesByUserId(userId: Long): Result<List<Role>>","description":"dev.shibasis.reaktor.auth.repositories.UserRoleRepository.getRolesByUserId","location":"reaktor-auth/dev.shibasis.reaktor.auth.repositories/-user-role-repository/get-roles-by-user-id.html","searchKeys":["getRolesByUserId","fun getRolesByUserId(userId: Long): Result<List<Role>>","dev.shibasis.reaktor.auth.repositories.UserRoleRepository.getRolesByUserId"]},{"name":"fun getSession(id: UUID): Result<Session>","description":"dev.shibasis.reaktor.auth.repositories.SessionRepository.getSession","location":"reaktor-auth/dev.shibasis.reaktor.auth.repositories/-session-repository/get-session.html","searchKeys":["getSession","fun getSession(id: UUID): Result<Session>","dev.shibasis.reaktor.auth.repositories.SessionRepository.getSession"]},{"name":"fun getSessionCount(userId: Long, appId: Long): Result<Long>","description":"dev.shibasis.reaktor.auth.repositories.SessionRepository.getSessionCount","location":"reaktor-auth/dev.shibasis.reaktor.auth.repositories/-session-repository/get-session-count.html","searchKeys":["getSessionCount","fun getSessionCount(userId: Long, appId: Long): Result<Long>","dev.shibasis.reaktor.auth.repositories.SessionRepository.getSessionCount"]},{"name":"fun getUser(appId: Long, socialId: String): Result<User>","description":"dev.shibasis.reaktor.auth.repositories.UserRepository.getUser","location":"reaktor-auth/dev.shibasis.reaktor.auth.repositories/-user-repository/get-user.html","searchKeys":["getUser","fun getUser(appId: Long, socialId: String): Result<User>","dev.shibasis.reaktor.auth.repositories.UserRepository.getUser"]},{"name":"fun getUser(id: Long): Result<User>","description":"dev.shibasis.reaktor.auth.repositories.UserRepository.getUser","location":"reaktor-auth/dev.shibasis.reaktor.auth.repositories/-user-repository/get-user.html","searchKeys":["getUser","fun getUser(id: Long): Result<User>","dev.shibasis.reaktor.auth.repositories.UserRepository.getUser"]},{"name":"fun getUserRoles(userId: Long): Result<List<Role>>","description":"dev.shibasis.reaktor.auth.repositories.UserRoleRepository.getUserRoles","location":"reaktor-auth/dev.shibasis.reaktor.auth.repositories/-user-role-repository/get-user-roles.html","searchKeys":["getUserRoles","fun getUserRoles(userId: Long): Result<List<Role>>","dev.shibasis.reaktor.auth.repositories.UserRoleRepository.getUserRoles"]},{"name":"fun getUsers(appId: Long): Result<List<User>>","description":"dev.shibasis.reaktor.auth.repositories.UserRepository.getUsers","location":"reaktor-auth/dev.shibasis.reaktor.auth.repositories/-user-repository/get-users.html","searchKeys":["getUsers","fun getUsers(appId: Long): Result<List<User>>","dev.shibasis.reaktor.auth.repositories.UserRepository.getUsers"]},{"name":"fun initialize(url: String, user: String, password: String): Result<Database>","description":"dev.shibasis.reaktor.auth.RoleBasedAuth.initialize","location":"reaktor-auth/dev.shibasis.reaktor.auth/-role-based-auth/initialize.html","searchKeys":["initialize","fun initialize(url: String, user: String, password: String): Result<Database>","dev.shibasis.reaktor.auth.RoleBasedAuth.initialize"]},{"name":"fun login(request: SignInRequest): SignInResponse","description":"dev.shibasis.reaktor.auth.services.LoginService.login","location":"reaktor-auth/dev.shibasis.reaktor.auth.services/-login-service/login.html","searchKeys":["login","fun login(request: SignInRequest): SignInResponse","dev.shibasis.reaktor.auth.services.LoginService.login"]},{"name":"fun newSession(tokenUtil: TokenUtil, userId: Long, appId: Long): Result<String>","description":"dev.shibasis.reaktor.auth.jwt.RefreshTokenService.newSession","location":"reaktor-auth/dev.shibasis.reaktor.auth.jwt/-refresh-token-service/new-session.html","searchKeys":["newSession","fun newSession(tokenUtil: TokenUtil, userId: Long, appId: Long): Result<String>","dev.shibasis.reaktor.auth.jwt.RefreshTokenService.newSession"]},{"name":"fun updateApp(id: Long, name: String, data: String): Result<Int>","description":"dev.shibasis.reaktor.auth.repositories.AppRepository.updateApp","location":"reaktor-auth/dev.shibasis.reaktor.auth.repositories/-app-repository/update-app.html","searchKeys":["updateApp","fun updateApp(id: Long, name: String, data: String): Result<Int>","dev.shibasis.reaktor.auth.repositories.AppRepository.updateApp"]},{"name":"fun updateEntity(id: Long, name: String, data: String): Result<Int>","description":"dev.shibasis.reaktor.auth.repositories.EntityRepository.updateEntity","location":"reaktor-auth/dev.shibasis.reaktor.auth.repositories/-entity-repository/update-entity.html","searchKeys":["updateEntity","fun updateEntity(id: Long, name: String, data: String): Result<Int>","dev.shibasis.reaktor.auth.repositories.EntityRepository.updateEntity"]},{"name":"fun updatePermission(id: Long, name: String): Result<Int>","description":"dev.shibasis.reaktor.auth.repositories.PermissionRepository.updatePermission","location":"reaktor-auth/dev.shibasis.reaktor.auth.repositories/-permission-repository/update-permission.html","searchKeys":["updatePermission","fun updatePermission(id: Long, name: String): Result<Int>","dev.shibasis.reaktor.auth.repositories.PermissionRepository.updatePermission"]},{"name":"fun updateRole(id: Long, name: String): Result<Int>","description":"dev.shibasis.reaktor.auth.repositories.RoleRepository.updateRole","location":"reaktor-auth/dev.shibasis.reaktor.auth.repositories/-role-repository/update-role.html","searchKeys":["updateRole","fun updateRole(id: Long, name: String): Result<Int>","dev.shibasis.reaktor.auth.repositories.RoleRepository.updateRole"]},{"name":"fun updateUser(id: Long, name: String, data: String): Result<Int>","description":"dev.shibasis.reaktor.auth.repositories.UserRepository.updateUser","location":"reaktor-auth/dev.shibasis.reaktor.auth.repositories/-user-repository/update-user.html","searchKeys":["updateUser","fun updateUser(id: Long, name: String, data: String): Result<Int>","dev.shibasis.reaktor.auth.repositories.UserRepository.updateUser"]},{"name":"fun validateAccessToken(token: String): DecodedJWT?","description":"dev.shibasis.reaktor.auth.jwt.JwtAdapter.validateAccessToken","location":"reaktor-auth/dev.shibasis.reaktor.auth.jwt/-jwt-adapter/validate-access-token.html","searchKeys":["validateAccessToken","fun validateAccessToken(token: String): DecodedJWT?","dev.shibasis.reaktor.auth.jwt.JwtAdapter.validateAccessToken"]},{"name":"fun validateToken(token: String): DecodedJWT?","description":"dev.shibasis.reaktor.auth.jwt.TokenUtil.validateToken","location":"reaktor-auth/dev.shibasis.reaktor.auth.jwt/-token-util/validate-token.html","searchKeys":["validateToken","fun validateToken(token: String): DecodedJWT?","dev.shibasis.reaktor.auth.jwt.TokenUtil.validateToken"]},{"name":"fun verify(idToken: String): GoogleIdToken.Payload?","description":"dev.shibasis.reaktor.auth.jwt.TokenVerifierService.verify","location":"reaktor-auth/dev.shibasis.reaktor.auth.jwt/-token-verifier-service/verify.html","searchKeys":["verify","fun verify(idToken: String): GoogleIdToken.Payload?","dev.shibasis.reaktor.auth.jwt.TokenVerifierService.verify"]},{"name":"inline fun <T : Any> Table.jsonb(name: String): Column<T>","description":"dev.shibasis.reaktor.auth.jsonb","location":"reaktor-auth/dev.shibasis.reaktor.auth/jsonb.html","searchKeys":["jsonb","inline fun <T : Any> Table.jsonb(name: String): Column<T>","dev.shibasis.reaktor.auth.jsonb"]},{"name":"inline fun LocalDateTime.Companion.now(): LocalDateTime","description":"dev.shibasis.reaktor.auth.now","location":"reaktor-auth/dev.shibasis.reaktor.auth/now.html","searchKeys":["now","inline fun LocalDateTime.Companion.now(): LocalDateTime","dev.shibasis.reaktor.auth.now"]},{"name":"inline suspend fun <T> jsonResponse(data: T, status: HttpStatus = HttpStatus.OK): ServerResponse","description":"dev.shibasis.reaktor.auth.apps.jsonResponse","location":"reaktor-auth/dev.shibasis.reaktor.auth.apps/json-response.html","searchKeys":["jsonResponse","inline suspend fun <T> jsonResponse(data: T, status: HttpStatus = HttpStatus.OK): ServerResponse","dev.shibasis.reaktor.auth.apps.jsonResponse"]},{"name":"interface Data<T>","description":"dev.shibasis.reaktor.auth.Data","location":"reaktor-auth/dev.shibasis.reaktor.auth/-data/index.html","searchKeys":["Data","interface Data<T>","dev.shibasis.reaktor.auth.Data"]},{"name":"object Apps : LongIdTable, Data<App> ","description":"dev.shibasis.reaktor.auth.Apps","location":"reaktor-auth/dev.shibasis.reaktor.auth/-apps/index.html","searchKeys":["Apps","object Apps : LongIdTable, Data<App> ","dev.shibasis.reaktor.auth.Apps"]},{"name":"object Entities : LongIdTable, Data<Entity> ","description":"dev.shibasis.reaktor.auth.Entities","location":"reaktor-auth/dev.shibasis.reaktor.auth/-entities/index.html","searchKeys":["Entities","object Entities : LongIdTable, Data<Entity> ","dev.shibasis.reaktor.auth.Entities"]},{"name":"object Permissions : LongIdTable, Data<Permission> ","description":"dev.shibasis.reaktor.auth.Permissions","location":"reaktor-auth/dev.shibasis.reaktor.auth/-permissions/index.html","searchKeys":["Permissions","object Permissions : LongIdTable, Data<Permission> ","dev.shibasis.reaktor.auth.Permissions"]},{"name":"object RoleBasedAuth","description":"dev.shibasis.reaktor.auth.RoleBasedAuth","location":"reaktor-auth/dev.shibasis.reaktor.auth/-role-based-auth/index.html","searchKeys":["RoleBasedAuth","object RoleBasedAuth","dev.shibasis.reaktor.auth.RoleBasedAuth"]},{"name":"object RolePermissions : LongIdTable","description":"dev.shibasis.reaktor.auth.RolePermissions","location":"reaktor-auth/dev.shibasis.reaktor.auth/-role-permissions/index.html","searchKeys":["RolePermissions","object RolePermissions : LongIdTable","dev.shibasis.reaktor.auth.RolePermissions"]},{"name":"object Roles : LongIdTable, Data<Role> ","description":"dev.shibasis.reaktor.auth.Roles","location":"reaktor-auth/dev.shibasis.reaktor.auth/-roles/index.html","searchKeys":["Roles","object Roles : LongIdTable, Data<Role> ","dev.shibasis.reaktor.auth.Roles"]},{"name":"object Sessions : UUIDTable, Data<Session> ","description":"dev.shibasis.reaktor.auth.Sessions","location":"reaktor-auth/dev.shibasis.reaktor.auth/-sessions/index.html","searchKeys":["Sessions","object Sessions : UUIDTable, Data<Session> ","dev.shibasis.reaktor.auth.Sessions"]},{"name":"object UserRoles : LongIdTable","description":"dev.shibasis.reaktor.auth.UserRoles","location":"reaktor-auth/dev.shibasis.reaktor.auth/-user-roles/index.html","searchKeys":["UserRoles","object UserRoles : LongIdTable","dev.shibasis.reaktor.auth.UserRoles"]},{"name":"object Users : LongIdTable, Data<User> ","description":"dev.shibasis.reaktor.auth.Users","location":"reaktor-auth/dev.shibasis.reaktor.auth/-users/index.html","searchKeys":["Users","object Users : LongIdTable, Data<User> ","dev.shibasis.reaktor.auth.Users"]},{"name":"open class ExposedAdapter(database: Database) : Adapter<Database> ","description":"dev.shibasis.reaktor.auth.utils.ExposedAdapter","location":"reaktor-auth/dev.shibasis.reaktor.auth.utils/-exposed-adapter/index.html","searchKeys":["ExposedAdapter","open class ExposedAdapter(database: Database) : Adapter<Database> ","dev.shibasis.reaktor.auth.utils.ExposedAdapter"]},{"name":"open override fun toDto(result: ResultRow): App","description":"dev.shibasis.reaktor.auth.Apps.toDto","location":"reaktor-auth/dev.shibasis.reaktor.auth/-apps/to-dto.html","searchKeys":["toDto","open override fun toDto(result: ResultRow): App","dev.shibasis.reaktor.auth.Apps.toDto"]},{"name":"open override fun toDto(result: ResultRow): Entity","description":"dev.shibasis.reaktor.auth.Entities.toDto","location":"reaktor-auth/dev.shibasis.reaktor.auth/-entities/to-dto.html","searchKeys":["toDto","open override fun toDto(result: ResultRow): Entity","dev.shibasis.reaktor.auth.Entities.toDto"]},{"name":"open override fun toDto(result: ResultRow): Permission","description":"dev.shibasis.reaktor.auth.Permissions.toDto","location":"reaktor-auth/dev.shibasis.reaktor.auth/-permissions/to-dto.html","searchKeys":["toDto","open override fun toDto(result: ResultRow): Permission","dev.shibasis.reaktor.auth.Permissions.toDto"]},{"name":"open override fun toDto(result: ResultRow): Role","description":"dev.shibasis.reaktor.auth.Roles.toDto","location":"reaktor-auth/dev.shibasis.reaktor.auth/-roles/to-dto.html","searchKeys":["toDto","open override fun toDto(result: ResultRow): Role","dev.shibasis.reaktor.auth.Roles.toDto"]},{"name":"open override fun toDto(result: ResultRow): Session","description":"dev.shibasis.reaktor.auth.Sessions.toDto","location":"reaktor-auth/dev.shibasis.reaktor.auth/-sessions/to-dto.html","searchKeys":["toDto","open override fun toDto(result: ResultRow): Session","dev.shibasis.reaktor.auth.Sessions.toDto"]},{"name":"open override fun toDto(result: ResultRow): User","description":"dev.shibasis.reaktor.auth.Users.toDto","location":"reaktor-auth/dev.shibasis.reaktor.auth/-users/to-dto.html","searchKeys":["toDto","open override fun toDto(result: ResultRow): User","dev.shibasis.reaktor.auth.Users.toDto"]},{"name":"open suspend override fun getGoogleUser(): GoogleUser?","description":"dev.shibasis.reaktor.auth.AndroidAuthAdapter.getGoogleUser","location":"reaktor-auth/dev.shibasis.reaktor.auth/-android-auth-adapter/get-google-user.html","searchKeys":["getGoogleUser","open suspend override fun getGoogleUser(): GoogleUser?","dev.shibasis.reaktor.auth.AndroidAuthAdapter.getGoogleUser"]},{"name":"open suspend override fun getGoogleUser(): GoogleUser?","description":"dev.shibasis.reaktor.auth.DarwinAuthAdapter.getGoogleUser","location":"reaktor-auth/dev.shibasis.reaktor.auth/-darwin-auth-adapter/get-google-user.html","searchKeys":["getGoogleUser","open suspend override fun getGoogleUser(): GoogleUser?","dev.shibasis.reaktor.auth.DarwinAuthAdapter.getGoogleUser"]},{"name":"open suspend override fun googleLogin(): Result<GoogleUser>","description":"dev.shibasis.reaktor.auth.AndroidAuthAdapter.googleLogin","location":"reaktor-auth/dev.shibasis.reaktor.auth/-android-auth-adapter/google-login.html","searchKeys":["googleLogin","open suspend override fun googleLogin(): Result<GoogleUser>","dev.shibasis.reaktor.auth.AndroidAuthAdapter.googleLogin"]},{"name":"open suspend override fun googleLogin(): Result<GoogleUser>","description":"dev.shibasis.reaktor.auth.DarwinAuthAdapter.googleLogin","location":"reaktor-auth/dev.shibasis.reaktor.auth/-darwin-auth-adapter/google-login.html","searchKeys":["googleLogin","open suspend override fun googleLogin(): Result<GoogleUser>","dev.shibasis.reaktor.auth.DarwinAuthAdapter.googleLogin"]},{"name":"open suspend override fun signOut(): Result<Unit>","description":"dev.shibasis.reaktor.auth.AndroidAuthAdapter.signOut","location":"reaktor-auth/dev.shibasis.reaktor.auth/-android-auth-adapter/sign-out.html","searchKeys":["signOut","open suspend override fun signOut(): Result<Unit>","dev.shibasis.reaktor.auth.AndroidAuthAdapter.signOut"]},{"name":"open suspend override fun signOut(): Result<Unit>","description":"dev.shibasis.reaktor.auth.DarwinAuthAdapter.signOut","location":"reaktor-auth/dev.shibasis.reaktor.auth/-darwin-auth-adapter/sign-out.html","searchKeys":["signOut","open suspend override fun signOut(): Result<Unit>","dev.shibasis.reaktor.auth.DarwinAuthAdapter.signOut"]},{"name":"sealed class Failure : SignInResponse","description":"dev.shibasis.reaktor.auth.api.SignInResponse.Failure","location":"reaktor-auth/dev.shibasis.reaktor.auth.api/-sign-in-response/-failure/index.html","searchKeys":["Failure","sealed class Failure : SignInResponse","dev.shibasis.reaktor.auth.api.SignInResponse.Failure"]},{"name":"sealed class SignInResponse","description":"dev.shibasis.reaktor.auth.api.SignInResponse","location":"reaktor-auth/dev.shibasis.reaktor.auth.api/-sign-in-response/index.html","searchKeys":["SignInResponse","sealed class SignInResponse","dev.shibasis.reaktor.auth.api.SignInResponse"]},{"name":"suspend fun login(appId: Int = 1): SignInResponse","description":"dev.shibasis.reaktor.auth.AuthAdapter.login","location":"reaktor-auth/dev.shibasis.reaktor.auth/-auth-adapter/login.html","searchKeys":["login","suspend fun login(appId: Int = 1): SignInResponse","dev.shibasis.reaktor.auth.AuthAdapter.login"]},{"name":"val appId: Column<EntityID<Long>>","description":"dev.shibasis.reaktor.auth.Entities.appId","location":"reaktor-auth/dev.shibasis.reaktor.auth/-entities/app-id.html","searchKeys":["appId","val appId: Column<EntityID<Long>>","dev.shibasis.reaktor.auth.Entities.appId"]},{"name":"val appId: Column<EntityID<Long>>","description":"dev.shibasis.reaktor.auth.Permissions.appId","location":"reaktor-auth/dev.shibasis.reaktor.auth/-permissions/app-id.html","searchKeys":["appId","val appId: Column<EntityID<Long>>","dev.shibasis.reaktor.auth.Permissions.appId"]},{"name":"val appId: Column<EntityID<Long>>","description":"dev.shibasis.reaktor.auth.Roles.appId","location":"reaktor-auth/dev.shibasis.reaktor.auth/-roles/app-id.html","searchKeys":["appId","val appId: Column<EntityID<Long>>","dev.shibasis.reaktor.auth.Roles.appId"]},{"name":"val appId: Column<EntityID<Long>>","description":"dev.shibasis.reaktor.auth.Sessions.appId","location":"reaktor-auth/dev.shibasis.reaktor.auth/-sessions/app-id.html","searchKeys":["appId","val appId: Column<EntityID<Long>>","dev.shibasis.reaktor.auth.Sessions.appId"]},{"name":"val appId: Column<EntityID<Long>>","description":"dev.shibasis.reaktor.auth.Users.appId","location":"reaktor-auth/dev.shibasis.reaktor.auth/-users/app-id.html","searchKeys":["appId","val appId: Column<EntityID<Long>>","dev.shibasis.reaktor.auth.Users.appId"]},{"name":"val appId: Long","description":"dev.shibasis.reaktor.auth.Entity.appId","location":"reaktor-auth/dev.shibasis.reaktor.auth/-entity/app-id.html","searchKeys":["appId","val appId: Long","dev.shibasis.reaktor.auth.Entity.appId"]},{"name":"val appId: Long","description":"dev.shibasis.reaktor.auth.Permission.appId","location":"reaktor-auth/dev.shibasis.reaktor.auth/-permission/app-id.html","searchKeys":["appId","val appId: Long","dev.shibasis.reaktor.auth.Permission.appId"]},{"name":"val appId: Long","description":"dev.shibasis.reaktor.auth.Role.appId","location":"reaktor-auth/dev.shibasis.reaktor.auth/-role/app-id.html","searchKeys":["appId","val appId: Long","dev.shibasis.reaktor.auth.Role.appId"]},{"name":"val appId: Long","description":"dev.shibasis.reaktor.auth.Session.appId","location":"reaktor-auth/dev.shibasis.reaktor.auth/-session/app-id.html","searchKeys":["appId","val appId: Long","dev.shibasis.reaktor.auth.Session.appId"]},{"name":"val appId: Long","description":"dev.shibasis.reaktor.auth.User.appId","location":"reaktor-auth/dev.shibasis.reaktor.auth/-user/app-id.html","searchKeys":["appId","val appId: Long","dev.shibasis.reaktor.auth.User.appId"]},{"name":"val appId: Long","description":"dev.shibasis.reaktor.auth.api.SignInRequest.appId","location":"reaktor-auth/dev.shibasis.reaktor.auth.api/-sign-in-request/app-id.html","searchKeys":["appId","val appId: Long","dev.shibasis.reaktor.auth.api.SignInRequest.appId"]},{"name":"val createdAt: Column<LocalDateTime>","description":"dev.shibasis.reaktor.auth.Apps.createdAt","location":"reaktor-auth/dev.shibasis.reaktor.auth/-apps/created-at.html","searchKeys":["createdAt","val createdAt: Column<LocalDateTime>","dev.shibasis.reaktor.auth.Apps.createdAt"]},{"name":"val createdAt: Column<LocalDateTime>","description":"dev.shibasis.reaktor.auth.Entities.createdAt","location":"reaktor-auth/dev.shibasis.reaktor.auth/-entities/created-at.html","searchKeys":["createdAt","val createdAt: Column<LocalDateTime>","dev.shibasis.reaktor.auth.Entities.createdAt"]},{"name":"val createdAt: Column<LocalDateTime>","description":"dev.shibasis.reaktor.auth.Permissions.createdAt","location":"reaktor-auth/dev.shibasis.reaktor.auth/-permissions/created-at.html","searchKeys":["createdAt","val createdAt: Column<LocalDateTime>","dev.shibasis.reaktor.auth.Permissions.createdAt"]},{"name":"val createdAt: Column<LocalDateTime>","description":"dev.shibasis.reaktor.auth.RolePermissions.createdAt","location":"reaktor-auth/dev.shibasis.reaktor.auth/-role-permissions/created-at.html","searchKeys":["createdAt","val createdAt: Column<LocalDateTime>","dev.shibasis.reaktor.auth.RolePermissions.createdAt"]},{"name":"val createdAt: Column<LocalDateTime>","description":"dev.shibasis.reaktor.auth.Roles.createdAt","location":"reaktor-auth/dev.shibasis.reaktor.auth/-roles/created-at.html","searchKeys":["createdAt","val createdAt: Column<LocalDateTime>","dev.shibasis.reaktor.auth.Roles.createdAt"]},{"name":"val createdAt: Column<LocalDateTime>","description":"dev.shibasis.reaktor.auth.Sessions.createdAt","location":"reaktor-auth/dev.shibasis.reaktor.auth/-sessions/created-at.html","searchKeys":["createdAt","val createdAt: Column<LocalDateTime>","dev.shibasis.reaktor.auth.Sessions.createdAt"]},{"name":"val createdAt: Column<LocalDateTime>","description":"dev.shibasis.reaktor.auth.UserRoles.createdAt","location":"reaktor-auth/dev.shibasis.reaktor.auth/-user-roles/created-at.html","searchKeys":["createdAt","val createdAt: Column<LocalDateTime>","dev.shibasis.reaktor.auth.UserRoles.createdAt"]},{"name":"val createdAt: Column<LocalDateTime>","description":"dev.shibasis.reaktor.auth.Users.createdAt","location":"reaktor-auth/dev.shibasis.reaktor.auth/-users/created-at.html","searchKeys":["createdAt","val createdAt: Column<LocalDateTime>","dev.shibasis.reaktor.auth.Users.createdAt"]},{"name":"val createdAt: LocalDateTime","description":"dev.shibasis.reaktor.auth.App.createdAt","location":"reaktor-auth/dev.shibasis.reaktor.auth/-app/created-at.html","searchKeys":["createdAt","val createdAt: LocalDateTime","dev.shibasis.reaktor.auth.App.createdAt"]},{"name":"val createdAt: LocalDateTime","description":"dev.shibasis.reaktor.auth.Entity.createdAt","location":"reaktor-auth/dev.shibasis.reaktor.auth/-entity/created-at.html","searchKeys":["createdAt","val createdAt: LocalDateTime","dev.shibasis.reaktor.auth.Entity.createdAt"]},{"name":"val createdAt: LocalDateTime","description":"dev.shibasis.reaktor.auth.Permission.createdAt","location":"reaktor-auth/dev.shibasis.reaktor.auth/-permission/created-at.html","searchKeys":["createdAt","val createdAt: LocalDateTime","dev.shibasis.reaktor.auth.Permission.createdAt"]},{"name":"val createdAt: LocalDateTime","description":"dev.shibasis.reaktor.auth.Role.createdAt","location":"reaktor-auth/dev.shibasis.reaktor.auth/-role/created-at.html","searchKeys":["createdAt","val createdAt: LocalDateTime","dev.shibasis.reaktor.auth.Role.createdAt"]},{"name":"val createdAt: LocalDateTime","description":"dev.shibasis.reaktor.auth.Session.createdAt","location":"reaktor-auth/dev.shibasis.reaktor.auth/-session/created-at.html","searchKeys":["createdAt","val createdAt: LocalDateTime","dev.shibasis.reaktor.auth.Session.createdAt"]},{"name":"val createdAt: LocalDateTime","description":"dev.shibasis.reaktor.auth.User.createdAt","location":"reaktor-auth/dev.shibasis.reaktor.auth/-user/created-at.html","searchKeys":["createdAt","val createdAt: LocalDateTime","dev.shibasis.reaktor.auth.User.createdAt"]},{"name":"val data: Column<JsonElement>","description":"dev.shibasis.reaktor.auth.Apps.data","location":"reaktor-auth/dev.shibasis.reaktor.auth/-apps/data.html","searchKeys":["data","val data: Column<JsonElement>","dev.shibasis.reaktor.auth.Apps.data"]},{"name":"val data: Column<JsonElement>","description":"dev.shibasis.reaktor.auth.Entities.data","location":"reaktor-auth/dev.shibasis.reaktor.auth/-entities/data.html","searchKeys":["data","val data: Column<JsonElement>","dev.shibasis.reaktor.auth.Entities.data"]},{"name":"val data: Column<JsonElement>","description":"dev.shibasis.reaktor.auth.Users.data","location":"reaktor-auth/dev.shibasis.reaktor.auth/-users/data.html","searchKeys":["data","val data: Column<JsonElement>","dev.shibasis.reaktor.auth.Users.data"]},{"name":"val data: JsonElement","description":"dev.shibasis.reaktor.auth.App.data","location":"reaktor-auth/dev.shibasis.reaktor.auth/-app/data.html","searchKeys":["data","val data: JsonElement","dev.shibasis.reaktor.auth.App.data"]},{"name":"val data: JsonElement","description":"dev.shibasis.reaktor.auth.Entity.data","location":"reaktor-auth/dev.shibasis.reaktor.auth/-entity/data.html","searchKeys":["data","val data: JsonElement","dev.shibasis.reaktor.auth.Entity.data"]},{"name":"val data: JsonElement","description":"dev.shibasis.reaktor.auth.User.data","location":"reaktor-auth/dev.shibasis.reaktor.auth/-user/data.html","searchKeys":["data","val data: JsonElement","dev.shibasis.reaktor.auth.User.data"]},{"name":"val emailId: String","description":"dev.shibasis.reaktor.auth.GoogleUser.emailId","location":"reaktor-auth/dev.shibasis.reaktor.auth/-google-user/email-id.html","searchKeys":["emailId","val emailId: String","dev.shibasis.reaktor.auth.GoogleUser.emailId"]},{"name":"val entityId: Column<EntityID<Long>>","description":"dev.shibasis.reaktor.auth.UserRoles.entityId","location":"reaktor-auth/dev.shibasis.reaktor.auth/-user-roles/entity-id.html","searchKeys":["entityId","val entityId: Column<EntityID<Long>>","dev.shibasis.reaktor.auth.UserRoles.entityId"]},{"name":"val expiresAt: Column<LocalDateTime>","description":"dev.shibasis.reaktor.auth.Sessions.expiresAt","location":"reaktor-auth/dev.shibasis.reaktor.auth/-sessions/expires-at.html","searchKeys":["expiresAt","val expiresAt: Column<LocalDateTime>","dev.shibasis.reaktor.auth.Sessions.expiresAt"]},{"name":"val expiresAt: LocalDateTime","description":"dev.shibasis.reaktor.auth.Session.expiresAt","location":"reaktor-auth/dev.shibasis.reaktor.auth/-session/expires-at.html","searchKeys":["expiresAt","val expiresAt: LocalDateTime","dev.shibasis.reaktor.auth.Session.expiresAt"]},{"name":"val id: Long","description":"dev.shibasis.reaktor.auth.App.id","location":"reaktor-auth/dev.shibasis.reaktor.auth/-app/id.html","searchKeys":["id","val id: Long","dev.shibasis.reaktor.auth.App.id"]},{"name":"val id: Long","description":"dev.shibasis.reaktor.auth.Entity.id","location":"reaktor-auth/dev.shibasis.reaktor.auth/-entity/id.html","searchKeys":["id","val id: Long","dev.shibasis.reaktor.auth.Entity.id"]},{"name":"val id: Long","description":"dev.shibasis.reaktor.auth.Permission.id","location":"reaktor-auth/dev.shibasis.reaktor.auth/-permission/id.html","searchKeys":["id","val id: Long","dev.shibasis.reaktor.auth.Permission.id"]},{"name":"val id: Long","description":"dev.shibasis.reaktor.auth.Role.id","location":"reaktor-auth/dev.shibasis.reaktor.auth/-role/id.html","searchKeys":["id","val id: Long","dev.shibasis.reaktor.auth.Role.id"]},{"name":"val id: Long","description":"dev.shibasis.reaktor.auth.User.id","location":"reaktor-auth/dev.shibasis.reaktor.auth/-user/id.html","searchKeys":["id","val id: Long","dev.shibasis.reaktor.auth.User.id"]},{"name":"val id: Uuid","description":"dev.shibasis.reaktor.auth.Session.id","location":"reaktor-auth/dev.shibasis.reaktor.auth/-session/id.html","searchKeys":["id","val id: Uuid","dev.shibasis.reaktor.auth.Session.id"]},{"name":"val idToken: String","description":"dev.shibasis.reaktor.auth.GoogleUser.idToken","location":"reaktor-auth/dev.shibasis.reaktor.auth/-google-user/id-token.html","searchKeys":["idToken","val idToken: String","dev.shibasis.reaktor.auth.GoogleUser.idToken"]},{"name":"val idToken: String","description":"dev.shibasis.reaktor.auth.api.SignInRequest.idToken","location":"reaktor-auth/dev.shibasis.reaktor.auth.api/-sign-in-request/id-token.html","searchKeys":["idToken","val idToken: String","dev.shibasis.reaktor.auth.api.SignInRequest.idToken"]},{"name":"val imageUrl: String","description":"dev.shibasis.reaktor.auth.GoogleUser.imageUrl","location":"reaktor-auth/dev.shibasis.reaktor.auth/-google-user/image-url.html","searchKeys":["imageUrl","val imageUrl: String","dev.shibasis.reaktor.auth.GoogleUser.imageUrl"]},{"name":"val json: Json","description":"dev.shibasis.reaktor.auth.apps.json","location":"reaktor-auth/dev.shibasis.reaktor.auth.apps/json.html","searchKeys":["json","val json: Json","dev.shibasis.reaktor.auth.apps.json"]},{"name":"val message: String","description":"dev.shibasis.reaktor.auth.api.SignInResponse.Failure.ServerError.message","location":"reaktor-auth/dev.shibasis.reaktor.auth.api/-sign-in-response/-failure/-server-error/message.html","searchKeys":["message","val message: String","dev.shibasis.reaktor.auth.api.SignInResponse.Failure.ServerError.message"]},{"name":"val name: Column<String>","description":"dev.shibasis.reaktor.auth.Apps.name","location":"reaktor-auth/dev.shibasis.reaktor.auth/-apps/name.html","searchKeys":["name","val name: Column<String>","dev.shibasis.reaktor.auth.Apps.name"]},{"name":"val name: Column<String>","description":"dev.shibasis.reaktor.auth.Entities.name","location":"reaktor-auth/dev.shibasis.reaktor.auth/-entities/name.html","searchKeys":["name","val name: Column<String>","dev.shibasis.reaktor.auth.Entities.name"]},{"name":"val name: Column<String>","description":"dev.shibasis.reaktor.auth.Permissions.name","location":"reaktor-auth/dev.shibasis.reaktor.auth/-permissions/name.html","searchKeys":["name","val name: Column<String>","dev.shibasis.reaktor.auth.Permissions.name"]},{"name":"val name: Column<String>","description":"dev.shibasis.reaktor.auth.Roles.name","location":"reaktor-auth/dev.shibasis.reaktor.auth/-roles/name.html","searchKeys":["name","val name: Column<String>","dev.shibasis.reaktor.auth.Roles.name"]},{"name":"val name: Column<String>","description":"dev.shibasis.reaktor.auth.Users.name","location":"reaktor-auth/dev.shibasis.reaktor.auth/-users/name.html","searchKeys":["name","val name: Column<String>","dev.shibasis.reaktor.auth.Users.name"]},{"name":"val name: String","description":"dev.shibasis.reaktor.auth.App.name","location":"reaktor-auth/dev.shibasis.reaktor.auth/-app/name.html","searchKeys":["name","val name: String","dev.shibasis.reaktor.auth.App.name"]},{"name":"val name: String","description":"dev.shibasis.reaktor.auth.Entity.name","location":"reaktor-auth/dev.shibasis.reaktor.auth/-entity/name.html","searchKeys":["name","val name: String","dev.shibasis.reaktor.auth.Entity.name"]},{"name":"val name: String","description":"dev.shibasis.reaktor.auth.GoogleUser.name","location":"reaktor-auth/dev.shibasis.reaktor.auth/-google-user/name.html","searchKeys":["name","val name: String","dev.shibasis.reaktor.auth.GoogleUser.name"]},{"name":"val name: String","description":"dev.shibasis.reaktor.auth.Permission.name","location":"reaktor-auth/dev.shibasis.reaktor.auth/-permission/name.html","searchKeys":["name","val name: String","dev.shibasis.reaktor.auth.Permission.name"]},{"name":"val name: String","description":"dev.shibasis.reaktor.auth.Role.name","location":"reaktor-auth/dev.shibasis.reaktor.auth/-role/name.html","searchKeys":["name","val name: String","dev.shibasis.reaktor.auth.Role.name"]},{"name":"val name: String","description":"dev.shibasis.reaktor.auth.User.name","location":"reaktor-auth/dev.shibasis.reaktor.auth/-user/name.html","searchKeys":["name","val name: String","dev.shibasis.reaktor.auth.User.name"]},{"name":"val permissionId: Column<EntityID<Long>>","description":"dev.shibasis.reaktor.auth.RolePermissions.permissionId","location":"reaktor-auth/dev.shibasis.reaktor.auth/-role-permissions/permission-id.html","searchKeys":["permissionId","val permissionId: Column<EntityID<Long>>","dev.shibasis.reaktor.auth.RolePermissions.permissionId"]},{"name":"val providerId: String","description":"dev.shibasis.reaktor.auth.api.SignInRequest.providerId","location":"reaktor-auth/dev.shibasis.reaktor.auth.api/-sign-in-request/provider-id.html","searchKeys":["providerId","val providerId: String","dev.shibasis.reaktor.auth.api.SignInRequest.providerId"]},{"name":"val roleId: Column<EntityID<Long>>","description":"dev.shibasis.reaktor.auth.RolePermissions.roleId","location":"reaktor-auth/dev.shibasis.reaktor.auth/-role-permissions/role-id.html","searchKeys":["roleId","val roleId: Column<EntityID<Long>>","dev.shibasis.reaktor.auth.RolePermissions.roleId"]},{"name":"val roleId: Column<EntityID<Long>>","description":"dev.shibasis.reaktor.auth.UserRoles.roleId","location":"reaktor-auth/dev.shibasis.reaktor.auth/-user-roles/role-id.html","searchKeys":["roleId","val roleId: Column<EntityID<Long>>","dev.shibasis.reaktor.auth.UserRoles.roleId"]},{"name":"val socialId: Column<String>","description":"dev.shibasis.reaktor.auth.Users.socialId","location":"reaktor-auth/dev.shibasis.reaktor.auth/-users/social-id.html","searchKeys":["socialId","val socialId: Column<String>","dev.shibasis.reaktor.auth.Users.socialId"]},{"name":"val socialId: String","description":"dev.shibasis.reaktor.auth.User.socialId","location":"reaktor-auth/dev.shibasis.reaktor.auth/-user/social-id.html","searchKeys":["socialId","val socialId: String","dev.shibasis.reaktor.auth.User.socialId"]},{"name":"val socialId: String","description":"dev.shibasis.reaktor.auth.api.SignInResponse.Failure.RequiresSignUp.socialId","location":"reaktor-auth/dev.shibasis.reaktor.auth.api/-sign-in-response/-failure/-requires-sign-up/social-id.html","searchKeys":["socialId","val socialId: String","dev.shibasis.reaktor.auth.api.SignInResponse.Failure.RequiresSignUp.socialId"]},{"name":"val socialId: String","description":"dev.shibasis.reaktor.auth.api.SignInResponse.Success.socialId","location":"reaktor-auth/dev.shibasis.reaktor.auth.api/-sign-in-response/-success/social-id.html","searchKeys":["socialId","val socialId: String","dev.shibasis.reaktor.auth.api.SignInResponse.Success.socialId"]},{"name":"val supabase: SupabaseClient","description":"dev.shibasis.reaktor.auth.supabase.supabase","location":"reaktor-auth/dev.shibasis.reaktor.auth.supabase/supabase.html","searchKeys":["supabase","val supabase: SupabaseClient","dev.shibasis.reaktor.auth.supabase.supabase"]},{"name":"val updatedAt: Column<LocalDateTime>","description":"dev.shibasis.reaktor.auth.Apps.updatedAt","location":"reaktor-auth/dev.shibasis.reaktor.auth/-apps/updated-at.html","searchKeys":["updatedAt","val updatedAt: Column<LocalDateTime>","dev.shibasis.reaktor.auth.Apps.updatedAt"]},{"name":"val updatedAt: Column<LocalDateTime>","description":"dev.shibasis.reaktor.auth.Entities.updatedAt","location":"reaktor-auth/dev.shibasis.reaktor.auth/-entities/updated-at.html","searchKeys":["updatedAt","val updatedAt: Column<LocalDateTime>","dev.shibasis.reaktor.auth.Entities.updatedAt"]},{"name":"val updatedAt: Column<LocalDateTime>","description":"dev.shibasis.reaktor.auth.Permissions.updatedAt","location":"reaktor-auth/dev.shibasis.reaktor.auth/-permissions/updated-at.html","searchKeys":["updatedAt","val updatedAt: Column<LocalDateTime>","dev.shibasis.reaktor.auth.Permissions.updatedAt"]},{"name":"val updatedAt: Column<LocalDateTime>","description":"dev.shibasis.reaktor.auth.RolePermissions.updatedAt","location":"reaktor-auth/dev.shibasis.reaktor.auth/-role-permissions/updated-at.html","searchKeys":["updatedAt","val updatedAt: Column<LocalDateTime>","dev.shibasis.reaktor.auth.RolePermissions.updatedAt"]},{"name":"val updatedAt: Column<LocalDateTime>","description":"dev.shibasis.reaktor.auth.Roles.updatedAt","location":"reaktor-auth/dev.shibasis.reaktor.auth/-roles/updated-at.html","searchKeys":["updatedAt","val updatedAt: Column<LocalDateTime>","dev.shibasis.reaktor.auth.Roles.updatedAt"]},{"name":"val updatedAt: Column<LocalDateTime>","description":"dev.shibasis.reaktor.auth.UserRoles.updatedAt","location":"reaktor-auth/dev.shibasis.reaktor.auth/-user-roles/updated-at.html","searchKeys":["updatedAt","val updatedAt: Column<LocalDateTime>","dev.shibasis.reaktor.auth.UserRoles.updatedAt"]},{"name":"val updatedAt: Column<LocalDateTime>","description":"dev.shibasis.reaktor.auth.Users.updatedAt","location":"reaktor-auth/dev.shibasis.reaktor.auth/-users/updated-at.html","searchKeys":["updatedAt","val updatedAt: Column<LocalDateTime>","dev.shibasis.reaktor.auth.Users.updatedAt"]},{"name":"val updatedAt: LocalDateTime","description":"dev.shibasis.reaktor.auth.App.updatedAt","location":"reaktor-auth/dev.shibasis.reaktor.auth/-app/updated-at.html","searchKeys":["updatedAt","val updatedAt: LocalDateTime","dev.shibasis.reaktor.auth.App.updatedAt"]},{"name":"val updatedAt: LocalDateTime","description":"dev.shibasis.reaktor.auth.Entity.updatedAt","location":"reaktor-auth/dev.shibasis.reaktor.auth/-entity/updated-at.html","searchKeys":["updatedAt","val updatedAt: LocalDateTime","dev.shibasis.reaktor.auth.Entity.updatedAt"]},{"name":"val updatedAt: LocalDateTime","description":"dev.shibasis.reaktor.auth.Permission.updatedAt","location":"reaktor-auth/dev.shibasis.reaktor.auth/-permission/updated-at.html","searchKeys":["updatedAt","val updatedAt: LocalDateTime","dev.shibasis.reaktor.auth.Permission.updatedAt"]},{"name":"val updatedAt: LocalDateTime","description":"dev.shibasis.reaktor.auth.Role.updatedAt","location":"reaktor-auth/dev.shibasis.reaktor.auth/-role/updated-at.html","searchKeys":["updatedAt","val updatedAt: LocalDateTime","dev.shibasis.reaktor.auth.Role.updatedAt"]},{"name":"val updatedAt: LocalDateTime","description":"dev.shibasis.reaktor.auth.User.updatedAt","location":"reaktor-auth/dev.shibasis.reaktor.auth/-user/updated-at.html","searchKeys":["updatedAt","val updatedAt: LocalDateTime","dev.shibasis.reaktor.auth.User.updatedAt"]},{"name":"val userId: Column<EntityID<Long>>","description":"dev.shibasis.reaktor.auth.Sessions.userId","location":"reaktor-auth/dev.shibasis.reaktor.auth/-sessions/user-id.html","searchKeys":["userId","val userId: Column<EntityID<Long>>","dev.shibasis.reaktor.auth.Sessions.userId"]},{"name":"val userId: Column<EntityID<Long>>","description":"dev.shibasis.reaktor.auth.UserRoles.userId","location":"reaktor-auth/dev.shibasis.reaktor.auth/-user-roles/user-id.html","searchKeys":["userId","val userId: Column<EntityID<Long>>","dev.shibasis.reaktor.auth.UserRoles.userId"]},{"name":"val userId: Long","description":"dev.shibasis.reaktor.auth.Session.userId","location":"reaktor-auth/dev.shibasis.reaktor.auth/-session/user-id.html","searchKeys":["userId","val userId: Long","dev.shibasis.reaktor.auth.Session.userId"]},{"name":"var Feature.Auth: AuthAdapter<*>?","description":"dev.shibasis.reaktor.auth.Auth","location":"reaktor-auth/dev.shibasis.reaktor.auth/-auth.html","searchKeys":["Auth","var Feature.Auth: AuthAdapter<*>?","dev.shibasis.reaktor.auth.Auth"]},{"name":"CameraFailure","description":"dev.shibasis.reaktor.media.camera.CameraAdapter.CameraStart.CameraFailure","location":"reaktor-media/dev.shibasis.reaktor.media.camera/-camera-adapter/-camera-start/-camera-failure/index.html","searchKeys":["CameraFailure","CameraFailure","dev.shibasis.reaktor.media.camera.CameraAdapter.CameraStart.CameraFailure"]},{"name":"ControllerFailure","description":"dev.shibasis.reaktor.media.camera.CameraAdapter.CameraStart.ControllerFailure","location":"reaktor-media/dev.shibasis.reaktor.media.camera/-camera-adapter/-camera-start/-controller-failure/index.html","searchKeys":["ControllerFailure","ControllerFailure","dev.shibasis.reaktor.media.camera.CameraAdapter.CameraStart.ControllerFailure"]},{"name":"PermissionFailure","description":"dev.shibasis.reaktor.media.camera.CameraAdapter.CameraStart.PermissionFailure","location":"reaktor-media/dev.shibasis.reaktor.media.camera/-camera-adapter/-camera-start/-permission-failure/index.html","searchKeys":["PermissionFailure","PermissionFailure","dev.shibasis.reaktor.media.camera.CameraAdapter.CameraStart.PermissionFailure"]},{"name":"Success","description":"dev.shibasis.reaktor.media.camera.CameraAdapter.CameraStart.Success","location":"reaktor-media/dev.shibasis.reaktor.media.camera/-camera-adapter/-camera-start/-success/index.html","searchKeys":["Success","Success","dev.shibasis.reaktor.media.camera.CameraAdapter.CameraStart.Success"]},{"name":"abstract class CameraAdapter<Controller>(controller: Controller) : Adapter<Controller> ","description":"dev.shibasis.reaktor.media.camera.CameraAdapter","location":"reaktor-media/dev.shibasis.reaktor.media.camera/-camera-adapter/index.html","searchKeys":["CameraAdapter","abstract class CameraAdapter<Controller>(controller: Controller) : Adapter<Controller> ","dev.shibasis.reaktor.media.camera.CameraAdapter"]},{"name":"abstract class SpeechRecognizer<Controller>(controller: Controller) : Adapter<Controller> ","description":"dev.shibasis.reaktor.media.speech.SpeechRecognizer","location":"reaktor-media/dev.shibasis.reaktor.media.speech/-speech-recognizer/index.html","searchKeys":["SpeechRecognizer","abstract class SpeechRecognizer<Controller>(controller: Controller) : Adapter<Controller> ","dev.shibasis.reaktor.media.speech.SpeechRecognizer"]},{"name":"abstract class SpeechSynthesizer<Controller>(controller: Controller) : Adapter<Controller> ","description":"dev.shibasis.reaktor.media.speech.SpeechSynthesizer","location":"reaktor-media/dev.shibasis.reaktor.media.speech/-speech-synthesizer/index.html","searchKeys":["SpeechSynthesizer","abstract class SpeechSynthesizer<Controller>(controller: Controller) : Adapter<Controller> ","dev.shibasis.reaktor.media.speech.SpeechSynthesizer"]},{"name":"abstract fun Render()","description":"dev.shibasis.reaktor.media.camera.CameraAdapter.Render","location":"reaktor-media/dev.shibasis.reaktor.media.camera/-camera-adapter/-render.html","searchKeys":["Render","abstract fun Render()","dev.shibasis.reaktor.media.camera.CameraAdapter.Render"]},{"name":"abstract fun addAnalyser(): Boolean","description":"dev.shibasis.reaktor.media.camera.CameraAdapter.AnalyserCapability.addAnalyser","location":"reaktor-media/dev.shibasis.reaktor.media.camera/-camera-adapter/-analyser-capability/add-analyser.html","searchKeys":["addAnalyser","abstract fun addAnalyser(): Boolean","dev.shibasis.reaktor.media.camera.CameraAdapter.AnalyserCapability.addAnalyser"]},{"name":"abstract fun retrieve(key: String): T?","description":"dev.shibasis.reaktor.media.image.Cache.retrieve","location":"reaktor-media/dev.shibasis.reaktor.media.image/-cache/retrieve.html","searchKeys":["retrieve","abstract fun retrieve(key: String): T?","dev.shibasis.reaktor.media.image.Cache.retrieve"]},{"name":"abstract fun store(key: String, contents: T)","description":"dev.shibasis.reaktor.media.image.Cache.store","location":"reaktor-media/dev.shibasis.reaktor.media.image/-cache/store.html","searchKeys":["store","abstract fun store(key: String, contents: T)","dev.shibasis.reaktor.media.image.Cache.store"]},{"name":"abstract fun storeFile(name: String)","description":"dev.shibasis.reaktor.media.camera.CameraAdapter.FileCapability.storeFile","location":"reaktor-media/dev.shibasis.reaktor.media.camera/-camera-adapter/-file-capability/store-file.html","searchKeys":["storeFile","abstract fun storeFile(name: String)","dev.shibasis.reaktor.media.camera.CameraAdapter.FileCapability.storeFile"]},{"name":"abstract suspend fun start(): CameraAdapter.CameraStart","description":"dev.shibasis.reaktor.media.camera.CameraAdapter.start","location":"reaktor-media/dev.shibasis.reaktor.media.camera/-camera-adapter/start.html","searchKeys":["start","abstract suspend fun start(): CameraAdapter.CameraStart","dev.shibasis.reaktor.media.camera.CameraAdapter.start"]},{"name":"class AndroidCameraAdapter(activity: ComponentActivity, val permissionAdapter: PermissionAdapter<*>) : CameraAdapter<ComponentActivity> ","description":"dev.shibasis.reaktor.media.camera.AndroidCameraAdapter","location":"reaktor-media/dev.shibasis.reaktor.media.camera/-android-camera-adapter/index.html","searchKeys":["AndroidCameraAdapter","class AndroidCameraAdapter(activity: ComponentActivity, val permissionAdapter: PermissionAdapter<*>) : CameraAdapter<ComponentActivity> ","dev.shibasis.reaktor.media.camera.AndroidCameraAdapter"]},{"name":"class CameraComponent(cameraAdapter: CameraAdapter<*>, permissionAdapter: PermissionAdapter<*>, val storageAdapter: StorageAdapter<*>) : Component","description":"dev.shibasis.reaktor.media.CameraComponent","location":"reaktor-media/dev.shibasis.reaktor.media/-camera-component/index.html","searchKeys":["CameraComponent","class CameraComponent(cameraAdapter: CameraAdapter<*>, permissionAdapter: PermissionAdapter<*>, val storageAdapter: StorageAdapter<*>) : Component","dev.shibasis.reaktor.media.CameraComponent"]},{"name":"class DarwinCameraAdapter(viewController: UIViewController) : CameraAdapter<UIViewController> ","description":"dev.shibasis.reaktor.media.camera.DarwinCameraAdapter","location":"reaktor-media/dev.shibasis.reaktor.media.camera/-darwin-camera-adapter/index.html","searchKeys":["DarwinCameraAdapter","class DarwinCameraAdapter(viewController: UIViewController) : CameraAdapter<UIViewController> ","dev.shibasis.reaktor.media.camera.DarwinCameraAdapter"]},{"name":"class DarwinGalleryAdapter","description":"dev.shibasis.reaktor.media.DarwinGalleryAdapter","location":"reaktor-media/dev.shibasis.reaktor.media/-darwin-gallery-adapter/index.html","searchKeys":["DarwinGalleryAdapter","class DarwinGalleryAdapter","dev.shibasis.reaktor.media.DarwinGalleryAdapter"]},{"name":"constructor()","description":"dev.shibasis.reaktor.media.DarwinGalleryAdapter.DarwinGalleryAdapter","location":"reaktor-media/dev.shibasis.reaktor.media/-darwin-gallery-adapter/-darwin-gallery-adapter.html","searchKeys":["DarwinGalleryAdapter","constructor()","dev.shibasis.reaktor.media.DarwinGalleryAdapter.DarwinGalleryAdapter"]},{"name":"constructor(activity: ComponentActivity, permissionAdapter: PermissionAdapter<*>)","description":"dev.shibasis.reaktor.media.camera.AndroidCameraAdapter.AndroidCameraAdapter","location":"reaktor-media/dev.shibasis.reaktor.media.camera/-android-camera-adapter/-android-camera-adapter.html","searchKeys":["AndroidCameraAdapter","constructor(activity: ComponentActivity, permissionAdapter: PermissionAdapter<*>)","dev.shibasis.reaktor.media.camera.AndroidCameraAdapter.AndroidCameraAdapter"]},{"name":"constructor(cameraAdapter: CameraAdapter<*>, permissionAdapter: PermissionAdapter<*>, storageAdapter: StorageAdapter<*>)","description":"dev.shibasis.reaktor.media.CameraComponent.CameraComponent","location":"reaktor-media/dev.shibasis.reaktor.media/-camera-component/-camera-component.html","searchKeys":["CameraComponent","constructor(cameraAdapter: CameraAdapter<*>, permissionAdapter: PermissionAdapter<*>, storageAdapter: StorageAdapter<*>)","dev.shibasis.reaktor.media.CameraComponent.CameraComponent"]},{"name":"constructor(controller: Controller)","description":"dev.shibasis.reaktor.media.camera.CameraAdapter.CameraAdapter","location":"reaktor-media/dev.shibasis.reaktor.media.camera/-camera-adapter/-camera-adapter.html","searchKeys":["CameraAdapter","constructor(controller: Controller)","dev.shibasis.reaktor.media.camera.CameraAdapter.CameraAdapter"]},{"name":"constructor(controller: Controller)","description":"dev.shibasis.reaktor.media.speech.SpeechRecognizer.SpeechRecognizer","location":"reaktor-media/dev.shibasis.reaktor.media.speech/-speech-recognizer/-speech-recognizer.html","searchKeys":["SpeechRecognizer","constructor(controller: Controller)","dev.shibasis.reaktor.media.speech.SpeechRecognizer.SpeechRecognizer"]},{"name":"constructor(controller: Controller)","description":"dev.shibasis.reaktor.media.speech.SpeechSynthesizer.SpeechSynthesizer","location":"reaktor-media/dev.shibasis.reaktor.media.speech/-speech-synthesizer/-speech-synthesizer.html","searchKeys":["SpeechSynthesizer","constructor(controller: Controller)","dev.shibasis.reaktor.media.speech.SpeechSynthesizer.SpeechSynthesizer"]},{"name":"constructor(header: String, content: String, image: String)","description":"dev.shibasis.reaktor.media.Post.Post","location":"reaktor-media/dev.shibasis.reaktor.media/-post/-post.html","searchKeys":["Post","constructor(header: String, content: String, image: String)","dev.shibasis.reaktor.media.Post.Post"]},{"name":"constructor(viewController: UIViewController)","description":"dev.shibasis.reaktor.media.camera.DarwinCameraAdapter.DarwinCameraAdapter","location":"reaktor-media/dev.shibasis.reaktor.media.camera/-darwin-camera-adapter/-darwin-camera-adapter.html","searchKeys":["DarwinCameraAdapter","constructor(viewController: UIViewController)","dev.shibasis.reaktor.media.camera.DarwinCameraAdapter.DarwinCameraAdapter"]},{"name":"data class Post(val header: String, val content: String, val image: String)","description":"dev.shibasis.reaktor.media.Post","location":"reaktor-media/dev.shibasis.reaktor.media/-post/index.html","searchKeys":["Post","data class Post(val header: String, val content: String, val image: String)","dev.shibasis.reaktor.media.Post"]},{"name":"enum CameraStart : Enum<CameraAdapter.CameraStart> ","description":"dev.shibasis.reaktor.media.camera.CameraAdapter.CameraStart","location":"reaktor-media/dev.shibasis.reaktor.media.camera/-camera-adapter/-camera-start/index.html","searchKeys":["CameraStart","enum CameraStart : Enum<CameraAdapter.CameraStart> ","dev.shibasis.reaktor.media.camera.CameraAdapter.CameraStart"]},{"name":"expect fun ByteArray.toImageBitmap(): ImageBitmap","description":"dev.shibasis.reaktor.media.image.toImageBitmap","location":"reaktor-media/dev.shibasis.reaktor.media.image/to-image-bitmap.html","searchKeys":["toImageBitmap","expect fun ByteArray.toImageBitmap(): ImageBitmap","dev.shibasis.reaktor.media.image.toImageBitmap"]},{"name":"expect fun ImageBitmap.toByteArray(): ByteArray","description":"dev.shibasis.reaktor.media.image.toByteArray","location":"reaktor-media/dev.shibasis.reaktor.media.image/to-byte-array.html","searchKeys":["toByteArray","expect fun ImageBitmap.toByteArray(): ByteArray","dev.shibasis.reaktor.media.image.toByteArray"]},{"name":"fun AsyncImage(url: String, modifier: Modifier = Modifier, contentScale: ContentScale = ContentScale.FillBounds)","description":"dev.shibasis.reaktor.media.image.AsyncImage","location":"reaktor-media/dev.shibasis.reaktor.media.image/-async-image.html","searchKeys":["AsyncImage","fun AsyncImage(url: String, modifier: Modifier = Modifier, contentScale: ContentScale = ContentScale.FillBounds)","dev.shibasis.reaktor.media.image.AsyncImage"]},{"name":"fun CameraScreen(cameraComponent: CameraComponent)","description":"app.mehmaan.media.camera.CameraScreen","location":"reaktor-media/app.mehmaan.media.camera/-camera-screen.html","searchKeys":["CameraScreen","fun CameraScreen(cameraComponent: CameraComponent)","app.mehmaan.media.camera.CameraScreen"]},{"name":"fun CameraScreen(props: Props)","description":"dev.shibasis.reaktor.media.CameraScreen","location":"reaktor-media/dev.shibasis.reaktor.media/-camera-screen.html","searchKeys":["CameraScreen","fun CameraScreen(props: Props)","dev.shibasis.reaktor.media.CameraScreen"]},{"name":"fun cameraInput(cameraDevice: AVCaptureDevice): AVCaptureDeviceInput?","description":"dev.shibasis.reaktor.media.camera.DarwinCameraAdapter.cameraInput","location":"reaktor-media/dev.shibasis.reaktor.media.camera/-darwin-camera-adapter/camera-input.html","searchKeys":["cameraInput","fun cameraInput(cameraDevice: AVCaptureDevice): AVCaptureDeviceInput?","dev.shibasis.reaktor.media.camera.DarwinCameraAdapter.cameraInput"]},{"name":"fun fetch(request: Request<Any, Any>, env: Env, ctx: ExecutionContext): Promise<Response>","description":"dev.shibasis.reaktor.media.fetch","location":"reaktor-media/dev.shibasis.reaktor.media/fetch.html","searchKeys":["fetch","fun fetch(request: Request<Any, Any>, env: Env, ctx: ExecutionContext): Promise<Response>","dev.shibasis.reaktor.media.fetch"]},{"name":"fun frontCamera(): AVCaptureDevice","description":"dev.shibasis.reaktor.media.camera.DarwinCameraAdapter.frontCamera","location":"reaktor-media/dev.shibasis.reaktor.media.camera/-darwin-camera-adapter/front-camera.html","searchKeys":["frontCamera","fun frontCamera(): AVCaptureDevice","dev.shibasis.reaktor.media.camera.DarwinCameraAdapter.frontCamera"]},{"name":"fun isIOSVersionAtLeast(major: Int, minor: Int = 0, patch: Int = 0): Boolean","description":"dev.shibasis.reaktor.media.isIOSVersionAtLeast","location":"reaktor-media/dev.shibasis.reaktor.media/is-i-o-s-version-at-least.html","searchKeys":["isIOSVersionAtLeast","fun isIOSVersionAtLeast(major: Int, minor: Int = 0, patch: Int = 0): Boolean","dev.shibasis.reaktor.media.isIOSVersionAtLeast"]},{"name":"fun listenForRotation()","description":"dev.shibasis.reaktor.media.camera.DarwinCameraAdapter.listenForRotation","location":"reaktor-media/dev.shibasis.reaktor.media.camera/-darwin-camera-adapter/listen-for-rotation.html","searchKeys":["listenForRotation","fun listenForRotation()","dev.shibasis.reaktor.media.camera.DarwinCameraAdapter.listenForRotation"]},{"name":"fun sendRequest(file: File)","description":"app.mehmaan.media.camera.sendRequest","location":"reaktor-media/app.mehmaan.media.camera/send-request.html","searchKeys":["sendRequest","fun sendRequest(file: File)","app.mehmaan.media.camera.sendRequest"]},{"name":"fun setupCamera(): CameraAdapter.CameraStart","description":"dev.shibasis.reaktor.media.camera.DarwinCameraAdapter.setupCamera","location":"reaktor-media/dev.shibasis.reaktor.media.camera/-darwin-camera-adapter/setup-camera.html","searchKeys":["setupCamera","fun setupCamera(): CameraAdapter.CameraStart","dev.shibasis.reaktor.media.camera.DarwinCameraAdapter.setupCamera"]},{"name":"fun store(key: String, contents: ByteArray)","description":"dev.shibasis.reaktor.media.image.BitmapCache.store","location":"reaktor-media/dev.shibasis.reaktor.media.image/-bitmap-cache/store.html","searchKeys":["store","fun store(key: String, contents: ByteArray)","dev.shibasis.reaktor.media.image.BitmapCache.store"]},{"name":"fun valueOf(value: String): CameraAdapter.CameraStart","description":"dev.shibasis.reaktor.media.camera.CameraAdapter.CameraStart.valueOf","location":"reaktor-media/dev.shibasis.reaktor.media.camera/-camera-adapter/-camera-start/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): CameraAdapter.CameraStart","dev.shibasis.reaktor.media.camera.CameraAdapter.CameraStart.valueOf"]},{"name":"fun values(): Array<CameraAdapter.CameraStart>","description":"dev.shibasis.reaktor.media.camera.CameraAdapter.CameraStart.values","location":"reaktor-media/dev.shibasis.reaktor.media.camera/-camera-adapter/-camera-start/values.html","searchKeys":["values","fun values(): Array<CameraAdapter.CameraStart>","dev.shibasis.reaktor.media.camera.CameraAdapter.CameraStart.values"]},{"name":"interface AnalyserCapability","description":"dev.shibasis.reaktor.media.camera.CameraAdapter.AnalyserCapability","location":"reaktor-media/dev.shibasis.reaktor.media.camera/-camera-adapter/-analyser-capability/index.html","searchKeys":["AnalyserCapability","interface AnalyserCapability","dev.shibasis.reaktor.media.camera.CameraAdapter.AnalyserCapability"]},{"name":"interface Cache<T>","description":"dev.shibasis.reaktor.media.image.Cache","location":"reaktor-media/dev.shibasis.reaktor.media.image/-cache/index.html","searchKeys":["Cache","interface Cache<T>","dev.shibasis.reaktor.media.image.Cache"]},{"name":"interface FileCapability","description":"dev.shibasis.reaktor.media.camera.CameraAdapter.FileCapability","location":"reaktor-media/dev.shibasis.reaktor.media.camera/-camera-adapter/-file-capability/index.html","searchKeys":["FileCapability","interface FileCapability","dev.shibasis.reaktor.media.camera.CameraAdapter.FileCapability"]},{"name":"object BitmapCache : Cache<ImageBitmap> ","description":"dev.shibasis.reaktor.media.image.BitmapCache","location":"reaktor-media/dev.shibasis.reaktor.media.image/-bitmap-cache/index.html","searchKeys":["BitmapCache","object BitmapCache : Cache<ImageBitmap> ","dev.shibasis.reaktor.media.image.BitmapCache"]},{"name":"object FileBasedCache : Cache<ByteArray> ","description":"dev.shibasis.reaktor.media.image.FileBasedCache","location":"reaktor-media/dev.shibasis.reaktor.media.image/-file-based-cache/index.html","searchKeys":["FileBasedCache","object FileBasedCache : Cache<ByteArray> ","dev.shibasis.reaktor.media.image.FileBasedCache"]},{"name":"object MultiLevelCache : Cache<ByteArray> ","description":"dev.shibasis.reaktor.media.image.MultiLevelCache","location":"reaktor-media/dev.shibasis.reaktor.media.image/-multi-level-cache/index.html","searchKeys":["MultiLevelCache","object MultiLevelCache : Cache<ByteArray> ","dev.shibasis.reaktor.media.image.MultiLevelCache"]},{"name":"open override fun Render()","description":"dev.shibasis.reaktor.media.camera.AndroidCameraAdapter.Render","location":"reaktor-media/dev.shibasis.reaktor.media.camera/-android-camera-adapter/-render.html","searchKeys":["Render","open override fun Render()","dev.shibasis.reaktor.media.camera.AndroidCameraAdapter.Render"]},{"name":"open override fun Render()","description":"dev.shibasis.reaktor.media.camera.DarwinCameraAdapter.Render","location":"reaktor-media/dev.shibasis.reaktor.media.camera/-darwin-camera-adapter/-render.html","searchKeys":["Render","open override fun Render()","dev.shibasis.reaktor.media.camera.DarwinCameraAdapter.Render"]},{"name":"open override fun retrieve(key: String): ByteArray?","description":"dev.shibasis.reaktor.media.image.FileBasedCache.retrieve","location":"reaktor-media/dev.shibasis.reaktor.media.image/-file-based-cache/retrieve.html","searchKeys":["retrieve","open override fun retrieve(key: String): ByteArray?","dev.shibasis.reaktor.media.image.FileBasedCache.retrieve"]},{"name":"open override fun retrieve(key: String): ByteArray?","description":"dev.shibasis.reaktor.media.image.MultiLevelCache.retrieve","location":"reaktor-media/dev.shibasis.reaktor.media.image/-multi-level-cache/retrieve.html","searchKeys":["retrieve","open override fun retrieve(key: String): ByteArray?","dev.shibasis.reaktor.media.image.MultiLevelCache.retrieve"]},{"name":"open override fun retrieve(key: String): ImageBitmap?","description":"dev.shibasis.reaktor.media.image.BitmapCache.retrieve","location":"reaktor-media/dev.shibasis.reaktor.media.image/-bitmap-cache/retrieve.html","searchKeys":["retrieve","open override fun retrieve(key: String): ImageBitmap?","dev.shibasis.reaktor.media.image.BitmapCache.retrieve"]},{"name":"open override fun store(key: String, contents: ByteArray)","description":"dev.shibasis.reaktor.media.image.FileBasedCache.store","location":"reaktor-media/dev.shibasis.reaktor.media.image/-file-based-cache/store.html","searchKeys":["store","open override fun store(key: String, contents: ByteArray)","dev.shibasis.reaktor.media.image.FileBasedCache.store"]},{"name":"open override fun store(key: String, contents: ByteArray)","description":"dev.shibasis.reaktor.media.image.MultiLevelCache.store","location":"reaktor-media/dev.shibasis.reaktor.media.image/-multi-level-cache/store.html","searchKeys":["store","open override fun store(key: String, contents: ByteArray)","dev.shibasis.reaktor.media.image.MultiLevelCache.store"]},{"name":"open override fun store(key: String, contents: ImageBitmap)","description":"dev.shibasis.reaktor.media.image.BitmapCache.store","location":"reaktor-media/dev.shibasis.reaktor.media.image/-bitmap-cache/store.html","searchKeys":["store","open override fun store(key: String, contents: ImageBitmap)","dev.shibasis.reaktor.media.image.BitmapCache.store"]},{"name":"open suspend fun retrieveWithFetch(key: String, fetch: suspend () -> T?): T?","description":"dev.shibasis.reaktor.media.image.Cache.retrieveWithFetch","location":"reaktor-media/dev.shibasis.reaktor.media.image/-cache/retrieve-with-fetch.html","searchKeys":["retrieveWithFetch","open suspend fun retrieveWithFetch(key: String, fetch: suspend () -> T?): T?","dev.shibasis.reaktor.media.image.Cache.retrieveWithFetch"]},{"name":"open suspend fun switchCamera(): CameraAdapter.CameraStart","description":"dev.shibasis.reaktor.media.camera.CameraAdapter.switchCamera","location":"reaktor-media/dev.shibasis.reaktor.media.camera/-camera-adapter/switch-camera.html","searchKeys":["switchCamera","open suspend fun switchCamera(): CameraAdapter.CameraStart","dev.shibasis.reaktor.media.camera.CameraAdapter.switchCamera"]},{"name":"open suspend override fun retrieveWithFetch(key: String, fetch: suspend () -> ByteArray?): ByteArray?","description":"dev.shibasis.reaktor.media.image.MultiLevelCache.retrieveWithFetch","location":"reaktor-media/dev.shibasis.reaktor.media.image/-multi-level-cache/retrieve-with-fetch.html","searchKeys":["retrieveWithFetch","open suspend override fun retrieveWithFetch(key: String, fetch: suspend () -> ByteArray?): ByteArray?","dev.shibasis.reaktor.media.image.MultiLevelCache.retrieveWithFetch"]},{"name":"open suspend override fun start(): CameraAdapter.CameraStart","description":"dev.shibasis.reaktor.media.camera.AndroidCameraAdapter.start","location":"reaktor-media/dev.shibasis.reaktor.media.camera/-android-camera-adapter/start.html","searchKeys":["start","open suspend override fun start(): CameraAdapter.CameraStart","dev.shibasis.reaktor.media.camera.AndroidCameraAdapter.start"]},{"name":"open suspend override fun start(): CameraAdapter.CameraStart","description":"dev.shibasis.reaktor.media.camera.DarwinCameraAdapter.start","location":"reaktor-media/dev.shibasis.reaktor.media.camera/-darwin-camera-adapter/start.html","searchKeys":["start","open suspend override fun start(): CameraAdapter.CameraStart","dev.shibasis.reaktor.media.camera.DarwinCameraAdapter.start"]},{"name":"open suspend override fun switchCamera(): CameraAdapter.CameraStart","description":"dev.shibasis.reaktor.media.camera.AndroidCameraAdapter.switchCamera","location":"reaktor-media/dev.shibasis.reaktor.media.camera/-android-camera-adapter/switch-camera.html","searchKeys":["switchCamera","open suspend override fun switchCamera(): CameraAdapter.CameraStart","dev.shibasis.reaktor.media.camera.AndroidCameraAdapter.switchCamera"]},{"name":"suspend fun getCamera(): ProcessCameraProvider?","description":"dev.shibasis.reaktor.media.camera.AndroidCameraAdapter.getCamera","location":"reaktor-media/dev.shibasis.reaktor.media.camera/-android-camera-adapter/get-camera.html","searchKeys":["getCamera","suspend fun getCamera(): ProcessCameraProvider?","dev.shibasis.reaktor.media.camera.AndroidCameraAdapter.getCamera"]},{"name":"suspend fun savePicture(photoFile: File = File(\"\")): File","description":"dev.shibasis.reaktor.media.CameraComponent.savePicture","location":"reaktor-media/dev.shibasis.reaktor.media/-camera-component/save-picture.html","searchKeys":["savePicture","suspend fun savePicture(photoFile: File = File(\"\")): File","dev.shibasis.reaktor.media.CameraComponent.savePicture"]},{"name":"suspend fun start(previewView: PreviewView)","description":"dev.shibasis.reaktor.media.CameraComponent.start","location":"reaktor-media/dev.shibasis.reaktor.media/-camera-component/start.html","searchKeys":["start","suspend fun start(previewView: PreviewView)","dev.shibasis.reaktor.media.CameraComponent.start"]},{"name":"suspend fun uploadPost(post: Post, imageBytes: ByteArray, contentType: ContentType)","description":"dev.shibasis.reaktor.media.uploadPost","location":"reaktor-media/dev.shibasis.reaktor.media/upload-post.html","searchKeys":["uploadPost","suspend fun uploadPost(post: Post, imageBytes: ByteArray, contentType: ContentType)","dev.shibasis.reaktor.media.uploadPost"]},{"name":"val captureSession: AVCaptureSession","description":"dev.shibasis.reaktor.media.camera.DarwinCameraAdapter.captureSession","location":"reaktor-media/dev.shibasis.reaktor.media.camera/-darwin-camera-adapter/capture-session.html","searchKeys":["captureSession","val captureSession: AVCaptureSession","dev.shibasis.reaktor.media.camera.DarwinCameraAdapter.captureSession"]},{"name":"val content: String","description":"dev.shibasis.reaktor.media.Post.content","location":"reaktor-media/dev.shibasis.reaktor.media/-post/content.html","searchKeys":["content","val content: String","dev.shibasis.reaktor.media.Post.content"]},{"name":"val entries: EnumEntries<CameraAdapter.CameraStart>","description":"dev.shibasis.reaktor.media.camera.CameraAdapter.CameraStart.entries","location":"reaktor-media/dev.shibasis.reaktor.media.camera/-camera-adapter/-camera-start/entries.html","searchKeys":["entries","val entries: EnumEntries<CameraAdapter.CameraStart>","dev.shibasis.reaktor.media.camera.CameraAdapter.CameraStart.entries"]},{"name":"val header: String","description":"dev.shibasis.reaktor.media.Post.header","location":"reaktor-media/dev.shibasis.reaktor.media/-post/header.html","searchKeys":["header","val header: String","dev.shibasis.reaktor.media.Post.header"]},{"name":"val image: String","description":"dev.shibasis.reaktor.media.Post.image","location":"reaktor-media/dev.shibasis.reaktor.media/-post/image.html","searchKeys":["image","val image: String","dev.shibasis.reaktor.media.Post.image"]},{"name":"val permissionAdapter: PermissionAdapter<*>","description":"dev.shibasis.reaktor.media.camera.AndroidCameraAdapter.permissionAdapter","location":"reaktor-media/dev.shibasis.reaktor.media.camera/-android-camera-adapter/permission-adapter.html","searchKeys":["permissionAdapter","val permissionAdapter: PermissionAdapter<*>","dev.shibasis.reaktor.media.camera.AndroidCameraAdapter.permissionAdapter"]},{"name":"val photoOutput: AVCapturePhotoOutput","description":"dev.shibasis.reaktor.media.camera.DarwinCameraAdapter.photoOutput","location":"reaktor-media/dev.shibasis.reaktor.media.camera/-darwin-camera-adapter/photo-output.html","searchKeys":["photoOutput","val photoOutput: AVCapturePhotoOutput","dev.shibasis.reaktor.media.camera.DarwinCameraAdapter.photoOutput"]},{"name":"val previewLayer: AVCaptureVideoPreviewLayer","description":"dev.shibasis.reaktor.media.camera.DarwinCameraAdapter.previewLayer","location":"reaktor-media/dev.shibasis.reaktor.media.camera/-darwin-camera-adapter/preview-layer.html","searchKeys":["previewLayer","val previewLayer: AVCaptureVideoPreviewLayer","dev.shibasis.reaktor.media.camera.DarwinCameraAdapter.previewLayer"]},{"name":"val storageAdapter: StorageAdapter<*>","description":"dev.shibasis.reaktor.media.CameraComponent.storageAdapter","location":"reaktor-media/dev.shibasis.reaktor.media/-camera-component/storage-adapter.html","searchKeys":["storageAdapter","val storageAdapter: StorageAdapter<*>","dev.shibasis.reaktor.media.CameraComponent.storageAdapter"]},{"name":"var Feature.Camera: CameraAdapter<*>?","description":"dev.shibasis.reaktor.media.camera.Camera","location":"reaktor-media/dev.shibasis.reaktor.media.camera/-camera.html","searchKeys":["Camera","var Feature.Camera: CameraAdapter<*>?","dev.shibasis.reaktor.media.camera.Camera"]},{"name":"var Feature.SpeechRecognizer: SpeechRecognizer<*>?","description":"dev.shibasis.reaktor.media.speech.SpeechRecognizer","location":"reaktor-media/dev.shibasis.reaktor.media.speech/-speech-recognizer.html","searchKeys":["SpeechRecognizer","var Feature.SpeechRecognizer: SpeechRecognizer<*>?","dev.shibasis.reaktor.media.speech.SpeechRecognizer"]},{"name":"var Feature.SpeechSynthesizer: SpeechRecognizer<*>?","description":"dev.shibasis.reaktor.media.speech.SpeechSynthesizer","location":"reaktor-media/dev.shibasis.reaktor.media.speech/-speech-synthesizer.html","searchKeys":["SpeechSynthesizer","var Feature.SpeechSynthesizer: SpeechRecognizer<*>?","dev.shibasis.reaktor.media.speech.SpeechSynthesizer"]},{"name":"class Destination<T : Props>(val name: String, val defaultParameters: T, val content: (parameters: T) -> Unit) : Route","description":"dev.shibasis.reaktor.navigation.route.Destination","location":"reaktor-navigation/dev.shibasis.reaktor.navigation.route/-destination/index.html","searchKeys":["Destination","class Destination<T : Props>(val name: String, val defaultParameters: T, val content: (parameters: T) -> Unit) : Route","dev.shibasis.reaktor.navigation.route.Destination"]},{"name":"class Junction(val name: String, parentPath: String? = null, val errorDestination: Destination<Props>? = null, junctionBuilder: Junction.() -> Unit) : Route","description":"dev.shibasis.reaktor.navigation.route.Junction","location":"reaktor-navigation/dev.shibasis.reaktor.navigation.route/-junction/index.html","searchKeys":["Junction","class Junction(val name: String, parentPath: String? = null, val errorDestination: Destination<Props>? = null, junctionBuilder: Junction.() -> Unit) : Route","dev.shibasis.reaktor.navigation.route.Junction"]},{"name":"class Navigator(root: Junction)","description":"dev.shibasis.reaktor.navigation.route.Navigator","location":"reaktor-navigation/dev.shibasis.reaktor.navigation.route/-navigator/index.html","searchKeys":["Navigator","class Navigator(root: Junction)","dev.shibasis.reaktor.navigation.route.Navigator"]},{"name":"constructor()","description":"dev.shibasis.reaktor.navigation.screen.Props.Props","location":"reaktor-navigation/dev.shibasis.reaktor.navigation.screen/-props/-props.html","searchKeys":["Props","constructor()","dev.shibasis.reaktor.navigation.screen.Props.Props"]},{"name":"constructor(errorMessage: String = \"Oops! Something went wrong.\", onRetry: () -> Unit = {})","description":"dev.shibasis.reaktor.navigation.screen.ErrorScreenProps.ErrorScreenProps","location":"reaktor-navigation/dev.shibasis.reaktor.navigation.screen/-error-screen-props/-error-screen-props.html","searchKeys":["ErrorScreenProps","constructor(errorMessage: String = \"Oops! Something went wrong.\", onRetry: () -> Unit = {})","dev.shibasis.reaktor.navigation.screen.ErrorScreenProps.ErrorScreenProps"]},{"name":"constructor(name: String, defaultParameters: T, content: (parameters: T) -> Unit)","description":"dev.shibasis.reaktor.navigation.route.Destination.Destination","location":"reaktor-navigation/dev.shibasis.reaktor.navigation.route/-destination/-destination.html","searchKeys":["Destination","constructor(name: String, defaultParameters: T, content: (parameters: T) -> Unit)","dev.shibasis.reaktor.navigation.route.Destination.Destination"]},{"name":"constructor(name: String, parentPath: String? = null, errorDestination: Destination<Props>? = null, junctionBuilder: Junction.() -> Unit)","description":"dev.shibasis.reaktor.navigation.route.Junction.Junction","location":"reaktor-navigation/dev.shibasis.reaktor.navigation.route/-junction/-junction.html","searchKeys":["Junction","constructor(name: String, parentPath: String? = null, errorDestination: Destination<Props>? = null, junctionBuilder: Junction.() -> Unit)","dev.shibasis.reaktor.navigation.route.Junction.Junction"]},{"name":"constructor(props: Props, destination: Destination<Props>)","description":"dev.shibasis.reaktor.navigation.route.ScreenPair.ScreenPair","location":"reaktor-navigation/dev.shibasis.reaktor.navigation.route/-screen-pair/-screen-pair.html","searchKeys":["ScreenPair","constructor(props: Props, destination: Destination<Props>)","dev.shibasis.reaktor.navigation.route.ScreenPair.ScreenPair"]},{"name":"constructor(root: Junction)","description":"dev.shibasis.reaktor.navigation.route.Navigator.Navigator","location":"reaktor-navigation/dev.shibasis.reaktor.navigation.route/-navigator/-navigator.html","searchKeys":["Navigator","constructor(root: Junction)","dev.shibasis.reaktor.navigation.route.Navigator.Navigator"]},{"name":"data class ErrorScreenProps(val errorMessage: String = \"Oops! Something went wrong.\", val onRetry: () -> Unit = {}) : Props","description":"dev.shibasis.reaktor.navigation.screen.ErrorScreenProps","location":"reaktor-navigation/dev.shibasis.reaktor.navigation.screen/-error-screen-props/index.html","searchKeys":["ErrorScreenProps","data class ErrorScreenProps(val errorMessage: String = \"Oops! Something went wrong.\", val onRetry: () -> Unit = {}) : Props","dev.shibasis.reaktor.navigation.screen.ErrorScreenProps"]},{"name":"data class ScreenPair(val props: Props, val destination: Destination<Props>)","description":"dev.shibasis.reaktor.navigation.route.ScreenPair","location":"reaktor-navigation/dev.shibasis.reaktor.navigation.route/-screen-pair/index.html","searchKeys":["ScreenPair","data class ScreenPair(val props: Props, val destination: Destination<Props>)","dev.shibasis.reaktor.navigation.route.ScreenPair"]},{"name":"expect fun Theme.ScreenContainer(navigator: Navigator)","description":"dev.shibasis.reaktor.navigation.screen.ScreenContainer","location":"reaktor-navigation/dev.shibasis.reaktor.navigation.screen/-screen-container.html","searchKeys":["ScreenContainer","expect fun Theme.ScreenContainer(navigator: Navigator)","dev.shibasis.reaktor.navigation.screen.ScreenContainer"]},{"name":"fun <T : Props> destination(destination: Destination<T>): Destination<T>","description":"dev.shibasis.reaktor.navigation.route.Junction.destination","location":"reaktor-navigation/dev.shibasis.reaktor.navigation.route/-junction/destination.html","searchKeys":["destination","fun <T : Props> destination(destination: Destination<T>): Destination<T>","dev.shibasis.reaktor.navigation.route.Junction.destination"]},{"name":"fun <T : Props> index(destination: Destination<T>): Destination<T>","description":"dev.shibasis.reaktor.navigation.route.Junction.index","location":"reaktor-navigation/dev.shibasis.reaktor.navigation.route/-junction/--index--.html","searchKeys":["index","fun <T : Props> index(destination: Destination<T>): Destination<T>","dev.shibasis.reaktor.navigation.route.Junction.index"]},{"name":"fun <T : Props> push(destination: Destination<T>, props: T)","description":"dev.shibasis.reaktor.navigation.route.Navigator.push","location":"reaktor-navigation/dev.shibasis.reaktor.navigation.route/-navigator/push.html","searchKeys":["push","fun <T : Props> push(destination: Destination<T>, props: T)","dev.shibasis.reaktor.navigation.route.Navigator.push"]},{"name":"fun <T : Props> push(route: String, props: T)","description":"dev.shibasis.reaktor.navigation.route.Navigator.push","location":"reaktor-navigation/dev.shibasis.reaktor.navigation.route/-navigator/push.html","searchKeys":["push","fun <T : Props> push(route: String, props: T)","dev.shibasis.reaktor.navigation.route.Navigator.push"]},{"name":"fun <T : Props> replace(destination: Destination<T>, props: T)","description":"dev.shibasis.reaktor.navigation.route.Navigator.replace","location":"reaktor-navigation/dev.shibasis.reaktor.navigation.route/-navigator/replace.html","searchKeys":["replace","fun <T : Props> replace(destination: Destination<T>, props: T)","dev.shibasis.reaktor.navigation.route.Navigator.replace"]},{"name":"fun <T : Props> replace(route: String, props: T)","description":"dev.shibasis.reaktor.navigation.route.Navigator.replace","location":"reaktor-navigation/dev.shibasis.reaktor.navigation.route/-navigator/replace.html","searchKeys":["replace","fun <T : Props> replace(route: String, props: T)","dev.shibasis.reaktor.navigation.route.Navigator.replace"]},{"name":"fun ErrorScreen(props: ErrorScreenProps)","description":"dev.shibasis.reaktor.navigation.screen.ErrorScreen","location":"reaktor-navigation/dev.shibasis.reaktor.navigation.screen/-error-screen.html","searchKeys":["ErrorScreen","fun ErrorScreen(props: ErrorScreenProps)","dev.shibasis.reaktor.navigation.screen.ErrorScreen"]},{"name":"fun getErrorRoute(errorScreenProps: ErrorScreenProps = ErrorScreenProps()): Destination<Props>","description":"dev.shibasis.reaktor.navigation.route.getErrorRoute","location":"reaktor-navigation/dev.shibasis.reaktor.navigation.route/get-error-route.html","searchKeys":["getErrorRoute","fun getErrorRoute(errorScreenProps: ErrorScreenProps = ErrorScreenProps()): Destination<Props>","dev.shibasis.reaktor.navigation.route.getErrorRoute"]},{"name":"fun junction(junction: Junction): Junction","description":"dev.shibasis.reaktor.navigation.route.Junction.junction","location":"reaktor-navigation/dev.shibasis.reaktor.navigation.route/-junction/junction.html","searchKeys":["junction","fun junction(junction: Junction): Junction","dev.shibasis.reaktor.navigation.route.Junction.junction"]},{"name":"fun junction(name: String, errorDestination: Destination<Props>? = null, junctionBuilder: Junction.() -> Unit): Junction","description":"dev.shibasis.reaktor.navigation.route.Junction.junction","location":"reaktor-navigation/dev.shibasis.reaktor.navigation.route/-junction/junction.html","searchKeys":["junction","fun junction(name: String, errorDestination: Destination<Props>? = null, junctionBuilder: Junction.() -> Unit): Junction","dev.shibasis.reaktor.navigation.route.Junction.junction"]},{"name":"fun pop()","description":"dev.shibasis.reaktor.navigation.route.Navigator.pop","location":"reaktor-navigation/dev.shibasis.reaktor.navigation.route/-navigator/pop.html","searchKeys":["pop","fun pop()","dev.shibasis.reaktor.navigation.route.Navigator.pop"]},{"name":"open class Props","description":"dev.shibasis.reaktor.navigation.screen.Props","location":"reaktor-navigation/dev.shibasis.reaktor.navigation.screen/-props/index.html","searchKeys":["Props","open class Props","dev.shibasis.reaktor.navigation.screen.Props"]},{"name":"sealed class Route","description":"dev.shibasis.reaktor.navigation.route.Route","location":"reaktor-navigation/dev.shibasis.reaktor.navigation.route/-route/index.html","searchKeys":["Route","sealed class Route","dev.shibasis.reaktor.navigation.route.Route"]},{"name":"val LocalNavigator: ProvidableCompositionLocal<Navigator>","description":"dev.shibasis.reaktor.navigation.screen.LocalNavigator","location":"reaktor-navigation/dev.shibasis.reaktor.navigation.screen/-local-navigator.html","searchKeys":["LocalNavigator","val LocalNavigator: ProvidableCompositionLocal<Navigator>","dev.shibasis.reaktor.navigation.screen.LocalNavigator"]},{"name":"val content: (parameters: T) -> Unit","description":"dev.shibasis.reaktor.navigation.route.Destination.content","location":"reaktor-navigation/dev.shibasis.reaktor.navigation.route/-destination/content.html","searchKeys":["content","val content: (parameters: T) -> Unit","dev.shibasis.reaktor.navigation.route.Destination.content"]},{"name":"val current: MutableState<ScreenPair>","description":"dev.shibasis.reaktor.navigation.route.Navigator.current","location":"reaktor-navigation/dev.shibasis.reaktor.navigation.route/-navigator/current.html","searchKeys":["current","val current: MutableState<ScreenPair>","dev.shibasis.reaktor.navigation.route.Navigator.current"]},{"name":"val defaultParameters: T","description":"dev.shibasis.reaktor.navigation.route.Destination.defaultParameters","location":"reaktor-navigation/dev.shibasis.reaktor.navigation.route/-destination/default-parameters.html","searchKeys":["defaultParameters","val defaultParameters: T","dev.shibasis.reaktor.navigation.route.Destination.defaultParameters"]},{"name":"val destination: Destination<Props>","description":"dev.shibasis.reaktor.navigation.route.ScreenPair.destination","location":"reaktor-navigation/dev.shibasis.reaktor.navigation.route/-screen-pair/destination.html","searchKeys":["destination","val destination: Destination<Props>","dev.shibasis.reaktor.navigation.route.ScreenPair.destination"]},{"name":"val errorDestination: Destination<Props>? = null","description":"dev.shibasis.reaktor.navigation.route.Junction.errorDestination","location":"reaktor-navigation/dev.shibasis.reaktor.navigation.route/-junction/error-destination.html","searchKeys":["errorDestination","val errorDestination: Destination<Props>? = null","dev.shibasis.reaktor.navigation.route.Junction.errorDestination"]},{"name":"val errorMessage: String","description":"dev.shibasis.reaktor.navigation.screen.ErrorScreenProps.errorMessage","location":"reaktor-navigation/dev.shibasis.reaktor.navigation.screen/-error-screen-props/error-message.html","searchKeys":["errorMessage","val errorMessage: String","dev.shibasis.reaktor.navigation.screen.ErrorScreenProps.errorMessage"]},{"name":"val handlesBack: MutableState<Boolean>","description":"dev.shibasis.reaktor.navigation.route.Navigator.handlesBack","location":"reaktor-navigation/dev.shibasis.reaktor.navigation.route/-navigator/handles-back.html","searchKeys":["handlesBack","val handlesBack: MutableState<Boolean>","dev.shibasis.reaktor.navigation.route.Navigator.handlesBack"]},{"name":"val name: String","description":"dev.shibasis.reaktor.navigation.route.Route.name","location":"reaktor-navigation/dev.shibasis.reaktor.navigation.route/-route/name.html","searchKeys":["name","val name: String","dev.shibasis.reaktor.navigation.route.Route.name"]},{"name":"val onRetry: () -> Unit","description":"dev.shibasis.reaktor.navigation.screen.ErrorScreenProps.onRetry","location":"reaktor-navigation/dev.shibasis.reaktor.navigation.screen/-error-screen-props/on-retry.html","searchKeys":["onRetry","val onRetry: () -> Unit","dev.shibasis.reaktor.navigation.screen.ErrorScreenProps.onRetry"]},{"name":"val props: Props","description":"dev.shibasis.reaktor.navigation.route.ScreenPair.props","location":"reaktor-navigation/dev.shibasis.reaktor.navigation.route/-screen-pair/props.html","searchKeys":["props","val props: Props","dev.shibasis.reaktor.navigation.route.ScreenPair.props"]},{"name":"var Feature.Navigator: Navigator?","description":"dev.shibasis.reaktor.navigation.route.Navigator","location":"reaktor-navigation/dev.shibasis.reaktor.navigation.route/-navigator.html","searchKeys":["Navigator","var Feature.Navigator: Navigator?","dev.shibasis.reaktor.navigation.route.Navigator"]},{"name":"var Index: Destination<Props>?","description":"dev.shibasis.reaktor.navigation.route.Junction.Index","location":"reaktor-navigation/dev.shibasis.reaktor.navigation.route/-junction/-index.html","searchKeys":["Index","var Index: Destination<Props>?","dev.shibasis.reaktor.navigation.route.Junction.Index"]},{"name":"var path: String?","description":"dev.shibasis.reaktor.navigation.route.Route.path","location":"reaktor-navigation/dev.shibasis.reaktor.navigation.route/-route/path.html","searchKeys":["path","var path: String?","dev.shibasis.reaktor.navigation.route.Route.path"]}]